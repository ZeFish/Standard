@use "standard-00-variables" as *;

/**
 * @component Button Component
 * @category Components
 * @description Minimalist button styling that works on both native button elements
 * and anchor/link elements. Uses the framework's accent color with smooth opacity
 * transitions. Supports keyboard focus states for accessibility.
 *
 * @prop {element} button Default button element styling
 * @prop {class} .button Apply button styling to elements
 * @prop {state} button:hover Reduced opacity on hover
 * @prop {state} button:active Reduced opacity on active/click
 * @prop {state} button:focus-visible Keyboard focus outline
 * @prop {state} button:disabled Disabled button styling
 *
 * @example
 * // Native button element
 * <button>Click me</button>
 *
 * // Link styled as button
 * <a href="/page" class="button">Go to page</a>
 *
 * // With icon or content
 * <button>
 *   <svg>...</svg>
 *   Button text
 * </button>
 *
 * @since 0.1.0
 */

/* Minimalist button class for styling links as buttons */
a.button,
a.button:visited {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-xs);

    font-family: var(--font-interface), system-ui, sans-serif;
    font-size: var(--scale-s);
    font-weight: var(--font-weight);
    line-height: var(--font-density);

    padding: var(--space-xs) var(--space-s);
    border-radius: var(--border-radius);

    background: var(--color-accent);
    color: var(--color-background);
    text-decoration: none;

    cursor: pointer;
    transition: opacity 0.2s ease;

    &:hover {
        opacity: 0.9;
    }

    &:active {
        opacity: 0.8;
    }

    &:focus-visible {
        outline: 1px solid
            color-mix(in srgb, var(--color-accent) 50%, transparent);
    }
}
/* test */
