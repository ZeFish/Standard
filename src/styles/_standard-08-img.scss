@use "standard-00-variables" as *;

/**
 * @component Image System
 * @category Components
 * @description Responsive image handling with interactive zoom functionality.
 * Images automatically scale to 100% width, support smooth zoom on click,
 * and include keyboard navigation for dismissing zoomed images.
 * Works seamlessly with rhythm and reading layouts.
 *
 * @prop {element} img Default responsive image
 * @prop {class} .fx Images with border and effects
 * @prop {class} .nofx Images without border/effects
 * @prop {state} img:hover Prepare for zoom interaction
 * @prop {state} img:active Active zoom state
 * @prop {class} .zoomed Zoomed image state
 *
 * @example
 * // Basic responsive image
 * <img src="image.jpg" alt="Description">
 *
 * // Image with border and effects
 * <img src="image.jpg" class="fx" alt="Description">
 *
 * // Click to zoom, click again to close
 * // ESC key also closes zoomed image
 *
 * @since 0.1.0
 */

/* Image Styles - Works with both .reading (layout) and .rhythm (spacing) - Using logical properties */

img {
    max-inline-size: 100%;
}

:where(html:not(.no-rhythm), .rhythm) {
    /* Basic image styling */
    * + img,
    img,
    img:first-child,
    img:last-child {
        margin: 0;
        max-inline-size: 100%;
        block-size: auto;
    }

    img {
        max-width: 100%;
        cursor: zoom-in;

        transition:
            mix-blend-mode 0.2s,
            opacity 0.2s,
            filter 0.2s;
    }
    img.fx {
        border-radius: var(--border-radius);
        border: var(--border);
    }
    img.nofx {
        border-radius: unset;
        border: unset;
        box-shadow: unset;
    }

    img:not(.zoomed):hover,
    img.zoomed {
        mix-blend-mode: normal;
        filter: none;
    }

    img:not(.zoomed):active,
    img.zoomed {
        cursor: zoom-out;
        display: block;
        z-index: var(--z-image-zoom);
        position: fixed;
        max-height: 88vh;
        max-width: 88vw;
        max-height: calc(100vh - (var(--space) * 2));
        max-width: calc(100vw - (var(--space) * 2));
        object-fit: contain;
        margin: 0 auto;
        text-align: center;
        padding: 0;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        user-select: none;
    }
}

/* Zoom overlay backgrounds */
html.image-zoomed::before {
    content: "";
    position: fixed;
    inset: 0;
    background: var(--color-background);
    z-index: calc(var(--z-image-zoom) - 1);
}
