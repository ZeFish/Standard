@use "standard-00-variables" as *;

/**
 * @component HTML Elements
 * @category Foundation
 * @description Styling for bare HTML elements (h1-h6, p, a, form, button, etc).
 * Applies typography rules and colors to semantic HTML elements.
 * Combines typography scales with color system for complete element styling.
 * All elements respect rhythm and typography system constraints.
 * This layer bridges the typography system and color system with concrete element styling.
 *
 * @prop {element} h1-h6 Heading hierarchy with proper sizing and weights
 * @prop {element} p Paragraph text styling
 * @prop {element} a Link styling with underline and hover states
 * @prop {element} button Native button element styling
 * @prop {class} .button Apply button styling to any element
 * @prop {element} input Text input styling
 * @prop {element} textarea Textarea styling
 * @prop {element} select Select dropdown styling
 * @prop {element} label Label styling
 * @prop {element} strong Bold text styling
 * @prop {element} code Inline code styling
 * @prop {element} pre Code block styling
 *
 * @example
 * // Headings automatically styled with typography + colors
 * <h1>Page Title</h1>
 * <h2>Section Heading</h2>
 *
 * // Links with hover states
 * <a href="/page">Link text</a>
 *
 * // Buttons - native and custom
 * <button>Click me</button>
 * <a href="/page" class="button">Link button</a>
 *
 * // Form elements with focus states
 * <input type="text" placeholder="Name">
 * <textarea>Message</textarea>
 * <select><option>Choose...</option></select>
 *
 * @since 0.1.0
 * @see standard-02-color.scss
 * @see standard-03-typography.scss
 */

/* ===== HEADINGS ===== */
h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--font-header), system-ui, sans-serif;
    color: var(--color-header);
    text-wrap: balance;
    font-variant-ligatures: normal;
    font-feature-settings: var(--font-header-feature);
    font-variation-settings: var(--font-header-variation);
    font-style: var(--font-header-style, normal);
    line-height: var(--font-header-line-height);
    letter-spacing: var(--font-header-letter-spacing);
    white-space: normal;
    overflow-wrap: normal;
    word-break: normal;
    hyphens: none;
    max-width: 100%;
    box-sizing: border-box;
}

h1 {
    font-weight: var(--font-weight-h1);
    font-size: clamp(var(--scale-2xl), 10vw, var(--scale-3xl));
}

h2 {
    font-weight: var(--font-weight-h2);
    font-size: clamp(var(--scale-xl), 7vw, var(--scale-2xl));
}

h3 {
    font-weight: var(--font-weight-h3);
    font-size: var(--scale-xl);
}

h4 {
    font-weight: var(--font-weight-h4);
    font-size: var(--scale-l);
    line-height: var(--line-height);
}

h5 {
    font-weight: var(--font-weight-h5);
    font-size: var(--scale-l);
    line-height: var(--line-height);
}

h6 {
    font-weight: var(--font-weight-h6);
    font-size: var(--scale-l);
    line-height: var(--line-height);
}

/* ===== LINKS ===== */
a,
a:visited {
    color: inherit;
    text-decoration: underline;
    text-decoration-thickness: 0.1em;
    text-underline-offset: 0.15em;
    text-decoration-color: var(--color-subtle);
    transition:
        color 0.2s ease,
        text-decoration-color 0.2s ease;
}

a:visited:hover,
a:hover,
a:focus {
    color: var(--color-accent);
    text-decoration-color: var(--color-accent);
}

a:focus-visible {
    outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
    border-radius: 2px;
}

a.external-link::after {
    content: "â†—";
    position: relative;
    text-decoration: none;
    top: 1px;
    left: 2px;
    font-size: var(--scale-xs);
    color: var(--color-subtle);
}

:is(h1, h2, h3, h4, h5, h6) a {
    text-decoration: none;
}

/* ===== Navigation ===== */
nav li a {
    text-decoration: none;
}
nav li.is-active a {
    text-decoration: underline;
}

/* ===== BUTTONS ===== */
/* Native button element */
button,
a.button {
    font-family: var(--font-interface), system-ui, sans-serif;
    font-size: var(--scale-s);
    font-weight: var(--font-weight);
    line-height: var(--font-density);

    padding: var(--space-xs) var(--space-s);
    border-radius: var(--border-radius);

    background: color-mix(
        in srgb,
        var(--color-accent) 85%,
        var(--color-background-secondary)
    );
    color: var(--color-background);
    border: var(--border);
    border-color: var(--color-border);

    box-shadow: var(--shadow);

    cursor: pointer;
    transition:
        background-color 0.2s ease,
        border-color 0.2s ease,
        opacity 0.2s ease;
}

a.button:visited,
a.button {
    --hr-thickness: 1px;
    display: inline-block;
    width: fit-content;
    user-select: none;
    margin: 0 auto;
    text-decoration: none;
    text-align: center;
}

button:hover,
a.button:hover {
    opacity: 0.9;
    color: var(--color-background);
}

button:active,
a.button:active {
    opacity: 0.8;
    color: var(--color-background);
}

button:focus-visible,
a.button:focus-visible {
    outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
    outline-offset: 2px;
    color: var(--color-background);
}

button:disabled,
a.button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    color: var(--color-background);
}

a.button:focus-visible {
    outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
    outline-offset: 2px;
    color: var(--color-background);
}

/* ===== FORM ELEMENTS ===== */
input,
textarea,
select {
    font-family: var(--font-interface), system-ui, sans-serif;
    font-size: var(--font-size);
    line-height: var(--line-height);

    padding: var(--space-xs);
    border-radius: var(--border-radius);

    color: var(--color-foreground);
    background: var(--color-background-secondary);
    border: var(--border);

    transition:
        background-color 0.2s ease,
        border-color 0.2s ease,
        outline-color 0.2s ease;
}

input:focus,
textarea:focus,
select:focus {
    outline: 1px solid color-mix(in srgb, var(--color-accent) 35%, transparent);
    outline-offset: 0px;
    border-color: color-mix(in srgb, var(--color-accent) 35%, transparent);
    background-color: color-mix(
        in srgb,
        var(--color-accent) 5%,
        var(--color-background)
    );
}

textarea {
    font-family: var(--font-interface), system-ui, sans-serif;
    resize: vertical;
    min-height: 6em;
}

/* ===== CHECKBOXES AND RADIO BUTTONS ===== */
input[type="checkbox"],
input[type="radio"] {
    width: 1.25em;
    height: 1.25em;
    cursor: pointer;
    accent-color: var(--color-accent);
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
    background-color: var(--color-accent);
    border-color: var(--color-accent);
}

input[type="checkbox"]:focus,
input[type="radio"]:focus {
    outline: 2px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
    outline-offset: 2px;
}

/* ===== LABELS ===== */
label {
    display: inline-block;
    font-family: var(--font-interface), system-ui, sans-serif;
    font-size: var(--font-size);
    color: var(--color-foreground);
    cursor: pointer;
}

/* ===== STRONG AND BOLD ===== */
b,
strong,
.bold {
    font-weight: var(--bold-weight);
}

:is(h1, h2, h3, h4, h5, h6) :is(b, strong, .bold) {
    font-weight: inherit;
}

/* ===== CODE ===== */
code,
pre,
tt,
.code,
.mono,
.monospace,
.font-mono {
    font-family: var(--font-monospace), Inconsolata, Menlo, monospace;
    font-feature-settings: var(--font-monospace-feature);
    font-variation-settings: var(--font-monospace-variation);
    font-size: var(--scale-s);
}

code {
    background: var(--color-background-secondary);
    border: 1px solid var(--color-border);
    border-radius: 3px;
    padding: 0.125em 0.25em;
    word-break: break-word;
}

pre {
    background: var(--color-background-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    padding: var(--space-s);
    overflow-x: auto;
    line-height: 1.5;
}

pre code {
    background: transparent;
    border: none;
    padding: 0;
}

/* ===== SMALL AND EMPHASIS ===== */
small {
    font-size: var(--scale-s);
}

sub,
sup {
    font-size: var(--scale-xs);
    line-height: 0;
}

sub {
    vertical-align: sub;
}

sup {
    vertical-align: super;
}

/* ===== UTILITY TEXT SIZES ===== */
.small {
    font-size: var(--scale-s);
}

/* Make all children of .small inherit the font size */
.small * {
    font-size: inherit;
}

.smaller {
    font-size: var(--scale-xs);
}

/* Make all children of .smaller inherit the font size */
.smaller * {
    font-size: inherit;
}

.compact {
    line-height: var(--font-density-s);
}

.font-ui,
.font-interface {
    font-family: var(--font-interface), system-ui, sans-serif;
    font-variation-settings: var(--font-interface-variation);
    font-feature-settings: var(--font-interface-feature);
}
