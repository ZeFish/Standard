class StandardSystem{constructor(){this.isOpen=false;this.panel=null;this.tokens={};this.shortcut={shift:true,meta:navigator.platform.indexOf("Mac")>-1,ctrl:navigator.platform.indexOf("Mac")===-1,key:"."};this.init()}init(){document.addEventListener("keydown",e=>{const matchesMac=this.shortcut.meta&&e.shiftKey&&e.metaKey&&e.key===this.shortcut.key;const matchesWin=this.shortcut.ctrl&&e.shiftKey&&e.ctrlKey&&e.key===this.shortcut.key;if(matchesMac||matchesWin){e.preventDefault();this.toggle()}});document.addEventListener("keydown",e=>{if(e.key==="Escape"&&this.isOpen){this.close()}});this.scanTokens()}scanTokens(){const rootStyles=getComputedStyle(document.documentElement);const allProps=Array.from(document.styleSheets).flatMap(sheet=>{try{return Array.from(sheet.cssRules)}catch(e){return[]}}).filter(rule=>rule.selectorText===":root").flatMap(rule=>Array.from(rule.style)).filter(prop=>prop.startsWith("--"));this.tokens={rhythm:allProps.filter(p=>p.includes("space")||p.includes("rhythm")||p.includes("gap")||p.includes("body-padding")),typography:allProps.filter(p=>p.includes("font")||p.includes("scale")||p.includes("line")||p.includes("letter")||p.includes("density")||p.includes("ratio")),colors:allProps.filter(p=>p.includes("color")),grid:allProps.filter(p=>p.includes("grid")||p.includes("container")||p.includes("content")||p.includes("line-width")),other:allProps.filter(p=>!p.includes("space")&&!p.includes("rhythm")&&!p.includes("font")&&!p.includes("scale")&&!p.includes("color")&&!p.includes("grid")&&!p.includes("gap")&&!p.includes("container")&&!p.includes("line")&&!p.includes("density")&&!p.includes("ratio"))}}toggle(){if(this.isOpen){this.close()}else{this.open()}}open(){if(this.panel){this.panel.remove()}this.isOpen=true;this.createPanel();document.body.appendChild(this.panel);requestAnimationFrame(()=>{this.panel.style.opacity="1";this.panel.style.transform="translateX(0)"})}close(){if(!this.panel)return;this.isOpen=false;this.panel.style.opacity="0";this.panel.style.transform="translateX(100%)";setTimeout(()=>{if(this.panel){this.panel.remove();this.panel=null}},200)}createPanel(){this.panel=document.createElement("div");this.panel.className="standard-debug-panel";this.panel.innerHTML=`\n      <div class="debug-header">\n        <h2>Standard System</h2>\n        <div class="debug-actions">\n          <button class="debug-btn" data-action="toggle-debug" title="Toggle Debug Mode">\n            <span class="debug-indicator"></span>\n            Debug\n          </button>\n          <button class="debug-btn" data-action="reset" title="Reset All Values">Reset</button>\n          <button class="debug-btn debug-close" data-action="close" title="Close (Esc)">×</button>\n        </div>\n      </div>\n      <div class="debug-content">\n        ${this.createSection("Rhythm & Spacing",this.tokens.rhythm)}\n        ${this.createSection("Typography",this.tokens.typography)}\n        ${this.createSection("Colors",this.tokens.colors,true)}\n        ${this.createSection("Grid & Layout",this.tokens.grid)}\n        ${this.createSection("Other",this.tokens.other)}\n      </div>\n      <div class="debug-footer">\n        <span class="debug-shortcut">Shift+${this.shortcut.meta?"Cmd":"Ctrl"}+. to toggle</span>\n      </div>\n    `;this.attachEventListeners();this.updateDebugIndicator();this.injectStyles()}createSection(title,tokens,useColorPicker=false){if(!tokens||tokens.length===0)return"";const rows=tokens.map(token=>{const value=getComputedStyle(document.documentElement).getPropertyValue(token).trim();const isColor=useColorPicker||this.isColorValue(value);return`\n        <div class="debug-row">\n          <label class="debug-label" title="${token}">\n            <span class="debug-token">${token.replace("--","")}</span>\n          </label>\n          <div class="debug-input-group">\n            ${isColor?this.createColorInput(token,value):this.createTextInput(token,value)}\n            <button class="debug-copy" data-token="${token}" title="Copy value">\n              <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n                <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>\n                <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n      `}).join("");return`\n      <details class="debug-section" open>\n        <summary class="debug-section-title">${title}</summary>\n        <div class="debug-section-content">\n          ${rows}\n        </div>\n      </details>\n    `}createColorInput(token,value){const hexColor=this.extractHexColor(value);return`\n      <div class="debug-color-input">\n        <input\n          type="color"\n          class="debug-input-color"\n          data-token="${token}"\n          value="${hexColor}"\n          title="Pick color"\n        >\n        <input\n          type="text"\n          class="debug-input-text"\n          data-token="${token}"\n          value="${value}"\n          placeholder="${value}"\n        >\n      </div>\n    `}createTextInput(token,value){return`\n      <input\n        type="text"\n        class="debug-input-text"\n        data-token="${token}"\n        value="${value}"\n        placeholder="${value}"\n      >\n    `}isColorValue(value){return value.startsWith("#")||value.startsWith("rgb")||value.startsWith("hsl")||value.includes("color-mix")||/^[a-z]+$/i.test(value)}extractHexColor(value){const hexMatch=value.match(/#[0-9a-f]{6}/i);if(hexMatch)return hexMatch[0];const rgbMatch=value.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);if(rgbMatch){const[,r,g,b]=rgbMatch;return"#"+[r,g,b].map(x=>parseInt(x).toString(16).padStart(2,"0")).join("")}return"#000000"}attachEventListeners(){this.panel.querySelectorAll("[data-action]").forEach(btn=>{btn.addEventListener("click",e=>{const action=e.currentTarget.dataset.action;if(action==="close"){this.close()}else if(action==="toggle-debug"){document.body.classList.toggle("standard-debug");this.updateDebugIndicator()}else if(action==="reset"){this.resetAllTokens()}})});this.panel.querySelectorAll(".debug-input-text").forEach(input=>{input.addEventListener("input",e=>{const token=e.target.dataset.token;const value=e.target.value;document.documentElement.style.setProperty(token,value)})});this.panel.querySelectorAll(".debug-input-color").forEach(input=>{input.addEventListener("input",e=>{const token=e.target.dataset.token;const color=e.target.value;document.documentElement.style.setProperty(token,color);const textInput=this.panel.querySelector(`.debug-input-text[data-token="${token}"]`);if(textInput){textInput.value=color}})});this.panel.querySelectorAll(".debug-copy").forEach(btn=>{btn.addEventListener("click",e=>{const token=e.currentTarget.dataset.token;const value=getComputedStyle(document.documentElement).getPropertyValue(token).trim();const copyText=`${token}: ${value};`;navigator.clipboard.writeText(copyText).then(()=>{this.showCopyFeedback(e.currentTarget)})})});this.panel.addEventListener("click",e=>{e.stopPropagation()});document.addEventListener("click",e=>{if(this.isOpen&&!this.panel.contains(e.target)){this.close()}})}updateDebugIndicator(){const indicator=this.panel?.querySelector(".debug-indicator");if(indicator){indicator.classList.toggle("active",document.body.classList.contains("standard-debug"))}}showCopyFeedback(button){const original=button.innerHTML;button.innerHTML="✓";button.style.color="var(--color-success)";setTimeout(()=>{button.innerHTML=original;button.style.color=""},1e3)}resetAllTokens(){if(!confirm("Reset all values to defaults?"))return;document.documentElement.removeAttribute("style");this.close();setTimeout(()=>this.open(),100)}injectStyles(){if(document.getElementById("standard-debug-styles"))return;const styles=document.createElement("style");styles.id="standard-debug-styles";styles.textContent=`\n      .standard-debug-panel {\n        position: fixed;\n        top: 0;\n        right: 0;\n        width: min(420px, 90vw);\n        height: 100vh;\n        background: var(--color-background);\n        border-left: 2px solid var(--color-accent);\n        box-shadow: -4px 0 24px rgba(0, 0, 0, 0.15);\n        z-index: 99999;\n        display: flex;\n        flex-direction: column;\n        font-family: var(--font-interface, system-ui);\n        font-size: var(--scale-s, 0.875rem);\n        opacity: 0;\n        transform: translateX(100%);\n        transition: opacity 0.2s ease, transform 0.2s ease;\n      }\n\n      .debug-header {\n        padding: var(--space, 1rem);\n        border-bottom: 1px solid var(--color-border);\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex-shrink: 0;\n      }\n\n      .debug-header h2 {\n        margin: 0;\n        font-size: var(--scale, 1rem);\n        font-weight: 600;\n        letter-spacing: -0.02em;\n      }\n\n      .debug-actions {\n        display: flex;\n        gap: var(--space-xs, 0.5rem);\n      }\n\n      .debug-btn {\n        padding: var(--space-xs, 0.5rem) var(--space-s, 0.75rem);\n        background: var(--color-background-secondary);\n        border: 1px solid var(--color-border);\n        border-radius: var(--border-radius, 4px);\n        font-size: var(--scale-xs, 0.8rem);\n        cursor: pointer;\n        transition: all 0.15s ease;\n        font-family: inherit;\n        color: var(--color-foreground);\n        display: flex;\n        align-items: center;\n        gap: var(--space-2xs, 0.25rem);\n      }\n\n      .debug-btn:hover {\n        background: var(--color-hover);\n        border-color: var(--color-accent);\n      }\n\n      .debug-close {\n        font-size: 1.5rem;\n        line-height: 1;\n        padding: var(--space-xs, 0.5rem);\n        aspect-ratio: 1;\n      }\n\n      .debug-indicator {\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        background: var(--color-subtle);\n        transition: background 0.2s ease;\n      }\n\n      .debug-indicator.active {\n        background: var(--color-accent);\n        box-shadow: 0 0 8px var(--color-accent);\n      }\n\n      .debug-content {\n        flex: 1;\n        overflow-y: auto;\n        padding: var(--space, 1rem);\n      }\n\n      .debug-section {\n        margin-bottom: var(--space, 1rem);\n        border: 1px solid var(--color-border);\n        border-radius: var(--border-radius, 4px);\n        background: var(--color-background-secondary);\n      }\n\n      .debug-section-title {\n        padding: var(--space-s, 0.75rem);\n        font-weight: 600;\n        cursor: pointer;\n        user-select: none;\n        text-transform: uppercase;\n        font-size: var(--scale-xs, 0.8rem);\n        letter-spacing: 0.05em;\n        border-bottom: 1px solid var(--color-border);\n        list-style: none;\n      }\n\n      .debug-section-title::before {\n        content: '▸';\n        display: inline-block;\n        margin-right: var(--space-xs, 0.5rem);\n        transition: transform 0.2s ease;\n      }\n\n      .debug-section[open] .debug-section-title::before {\n        transform: rotate(90deg);\n      }\n\n      .debug-section-content {\n        padding: var(--space-s, 0.75rem);\n      }\n\n      .debug-row {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        gap: var(--space-xs, 0.5rem);\n        align-items: center;\n        margin-bottom: var(--space-xs, 0.5rem);\n        padding-bottom: var(--space-xs, 0.5rem);\n        border-bottom: 1px solid color-mix(in srgb, var(--color-border) 50%, transparent);\n      }\n\n      .debug-row:last-child {\n        margin-bottom: 0;\n        border-bottom: none;\n      }\n\n      .debug-label {\n        margin: 0;\n        font-size: var(--scale-xs, 0.8rem);\n        color: var(--color-muted);\n      }\n\n      .debug-token {\n        font-family: var(--font-monospace, monospace);\n        font-size: 0.85em;\n      }\n\n      .debug-input-group {\n        display: flex;\n        gap: var(--space-2xs, 0.25rem);\n        align-items: center;\n      }\n\n      .debug-input-text {\n        padding: var(--space-2xs, 0.25rem) var(--space-xs, 0.5rem);\n        background: var(--color-background);\n        border: 1px solid var(--color-border);\n        border-radius: var(--border-radius, 4px);\n        font-size: var(--scale-xs, 0.8rem);\n        font-family: var(--font-monospace, monospace);\n        color: var(--color-foreground);\n        min-width: 120px;\n        transition: border-color 0.15s ease;\n      }\n\n      .debug-input-text:focus {\n        outline: none;\n        border-color: var(--color-accent);\n        background: color-mix(in srgb, var(--color-accent) 5%, var(--color-background));\n      }\n\n      .debug-color-input {\n        display: flex;\n        gap: var(--space-2xs, 0.25rem);\n        align-items: center;\n      }\n\n      .debug-input-color {\n        width: 32px;\n        height: 28px;\n        border: 1px solid var(--color-border);\n        border-radius: var(--border-radius, 4px);\n        cursor: pointer;\n        padding: 2px;\n        background: var(--color-background);\n      }\n\n      .debug-input-color::-webkit-color-swatch-wrapper {\n        padding: 0;\n      }\n\n      .debug-input-color::-webkit-color-swatch {\n        border: none;\n        border-radius: calc(var(--border-radius, 4px) - 2px);\n      }\n\n      .debug-copy {\n        padding: var(--space-2xs, 0.25rem);\n        background: var(--color-background-secondary);\n        border: 1px solid var(--color-border);\n        border-radius: var(--border-radius, 4px);\n        cursor: pointer;\n        transition: all 0.15s ease;\n        color: var(--color-muted);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .debug-copy:hover {\n        background: var(--color-hover);\n        border-color: var(--color-accent);\n        color: var(--color-foreground);\n      }\n\n      .debug-footer {\n        padding: var(--space-s, 0.75rem) var(--space, 1rem);\n        border-top: 1px solid var(--color-border);\n        font-size: var(--scale-xs, 0.8rem);\n        color: var(--color-subtle);\n        text-align: center;\n        flex-shrink: 0;\n      }\n\n      .debug-shortcut {\n        font-family: var(--font-monospace, monospace);\n      }\n\n      /* Scrollbar styling */\n      .debug-content::-webkit-scrollbar {\n        width: 8px;\n      }\n\n      .debug-content::-webkit-scrollbar-track {\n        background: var(--color-background-secondary);\n      }\n\n      .debug-content::-webkit-scrollbar-thumb {\n        background: var(--color-border);\n        border-radius: 4px;\n      }\n\n      .debug-content::-webkit-scrollbar-thumb:hover {\n        background: var(--color-muted);\n      }\n\n      /* Dark mode optimizations */\n      @media (prefers-color-scheme: dark) {\n        .standard-debug-panel {\n          box-shadow: -4px 0 32px rgba(0, 0, 0, 0.5);\n        }\n      }\n\n      /* Mobile responsive */\n      @media (max-width: 768px) {\n        .standard-debug-panel {\n          width: 100vw;\n        }\n\n        .debug-row {\n          grid-template-columns: 1fr;\n          gap: var(--space-2xs, 0.25rem);\n        }\n\n        .debug-input-group {\n          width: 100%;\n        }\n\n        .debug-input-text {\n          flex: 1;\n          min-width: 0;\n        }\n      }\n    `;document.head.appendChild(styles)}}if(typeof window!=="undefined"){if(document.readyState==="loading"){document.addEventListener("DOMContentLoaded",()=>{window.StandardSystem=new StandardSystem})}else{window.StandardSystem=new StandardSystem}}if(typeof module!=="undefined"&&module.exports){module.exports={StandardSystem:StandardSystem}}