/**!
 * Standard System Inspector - Minimal Debug Interface
 *
 * A minimalist debug interface for the Standard Framework
 * Philosophy: Felt, not seen. Present when needed, invisible when not.
 *
 * Opens with Shift+Cmd+D (Mac) or Shift+Ctrl+D (Windows/Linux)
 * Debug mode: Shift+Cmd+S / Shift+Ctrl+S
 *
 * @version Standard Framework v0.13.12
 */
class StandardLab{constructor(){this.state="dormant";this.badge=null;this.panel=null;this.currentTab="typography";this.googleFontsLoaded=new Set;this.colorScheme=this.detectColorScheme();this.modifiedTokens=new Set;this.position=this.loadPosition();this.coreTokens={typography:["--font-text","--font-header","--font-monospace","--font-size","--font-ratio","--font-density"],layout:["--line-width","--rhythm-multiplier","--space"],colors:this.getColorTokens()};this.defaults={};this.init()}init(){this.storeDefaults();this.createBadge();this.initKeyboardShortcuts();if(window.matchMedia){window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",e=>{this.colorScheme=e.matches?"dark":"light";if(this.state==="full"){this.refreshTokenList()}})}this.initModificationTracking()}storeDefaults(){const allTokens=[...this.coreTokens.typography,...this.coreTokens.layout,...this.coreTokens.colors];allTokens.forEach(token=>{const value=getComputedStyle(document.documentElement).getPropertyValue(token).trim();if(value){this.defaults[token]=value}})}getColorTokens(){const scheme=this.colorScheme==="light"?"light":"dark";return[`--color-${scheme}-background`,`--color-${scheme}-foreground`,`--color-${scheme}-accent`,`--color-${scheme}-red`,`--color-${scheme}-orange`,`--color-${scheme}-yellow`,`--color-${scheme}-green`,`--color-${scheme}-cyan`,`--color-${scheme}-blue`,`--color-${scheme}-purple`,`--color-${scheme}-pink`]}detectColorScheme(){if(window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches){return"dark"}return"light"}loadPosition(){const saved=localStorage.getItem("standard-lab-position");if(saved){return JSON.parse(saved)}return{bottom:16,right:16}}savePosition(){localStorage.setItem("standard-lab-position",JSON.stringify(this.position))}createBadge(){if(this.badge)return;this.badge=document.createElement("button");this.badge.className="standard-lab-badge";this.badge.setAttribute("aria-label","Open Standard Inspector");this.badge.setAttribute("title","Standard Inspector (Shift+Cmd+D)");this.badge.style.bottom=`${this.position.bottom}px`;this.badge.style.right=`${this.position.right}px`;this.badge.innerHTML=`\n      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n        <path d="M12 2L2 7v10c0 5.5 10 9 10 9s10-3.5 10-9V7l-10-5z"/>\n        <path d="M12 8v8"/>\n      </svg>\n    `;this.badge.addEventListener("click",()=>this.openQuick());this.makeDraggable(this.badge);document.body.appendChild(this.badge);this.updateBadge();this.injectStyles()}updateBadge(){if(!this.badge)return;const count=this.modifiedTokens.size;if(count>0){this.badge.setAttribute("data-modified",count)}else{this.badge.removeAttribute("data-modified")}}makeDraggable(element){let isDragging=false;let startX,startY,initialBottom,initialRight;const onMouseDown=e=>{if(e.target!==element&&!element.classList.contains("standard-lab-panel-header"))return;isDragging=true;startX=e.clientX;startY=e.clientY;const rect=element.getBoundingClientRect();initialBottom=window.innerHeight-rect.bottom;initialRight=window.innerWidth-rect.right;document.addEventListener("mousemove",onMouseMove);document.addEventListener("mouseup",onMouseUp);element.style.cursor="grabbing";e.preventDefault()};const onMouseMove=e=>{if(!isDragging)return;const deltaX=startX-e.clientX;const deltaY=e.clientY-startY;this.position.right=Math.max(0,initialRight+deltaX);this.position.bottom=Math.max(0,initialBottom-deltaY);element.style.right=`${this.position.right}px`;element.style.bottom=`${this.position.bottom}px`};const onMouseUp=()=>{isDragging=false;element.style.cursor="";document.removeEventListener("mousemove",onMouseMove);document.removeEventListener("mouseup",onMouseUp);this.savePosition()};element.addEventListener("mousedown",onMouseDown)}openQuick(){if(this.state==="quick"){this.close();return}this.state="quick";this.createQuickPanel()}openFull(){this.state="full";this.createFullPanel()}close(){if(this.panel){this.panel.style.opacity="0";this.panel.style.transform="translateY(10px)";setTimeout(()=>{if(this.panel){this.panel.remove();this.panel=null}},200)}this.state="dormant"}createQuickPanel(){if(this.panel)this.panel.remove();this.panel=document.createElement("div");this.panel.className="standard-lab-panel standard-lab-panel-quick";this.panel.style.bottom=`${this.position.bottom+60}px`;this.panel.style.right=`${this.position.right}px`;const debugActive=document.body.classList.contains("standard-debug");const modifiedCount=this.modifiedTokens.size;this.panel.innerHTML=`\n      <header class="standard-lab-panel-header">\n        <h2>Inspector</h2>\n        <button class="standard-lab-btn-icon" data-action="close" title="Close (Esc)">×</button>\n      </header>\n\n      <section class="standard-lab-section">\n        <label class="standard-lab-toggle">\n          <input type="checkbox" ${debugActive?"checked":""} data-toggle="debug">\n          <span>Debug Mode</span>\n          <kbd>⇧⌘S</kbd>\n        </label>\n      </section>\n\n      <section class="standard-lab-section">\n        <label class="standard-lab-label">Theme</label>\n        <select class="standard-lab-select" data-action="theme">\n          ${this.getThemeOptions()}\n        </select>\n      </section>\n\n      <footer class="standard-lab-actions">\n        <button class="standard-lab-btn" data-action="edit-tokens">\n          ${modifiedCount>0?`Edit Tokens (${modifiedCount})`:"Edit Tokens"}\n        </button>\n        ${modifiedCount>0?`\n          <button class="standard-lab-btn standard-lab-btn-secondary" data-action="reset">\n            Reset\n          </button>\n        `:""}\n        <button class="standard-lab-btn standard-lab-btn-secondary" data-action="copy">\n          Copy CSS\n        </button>\n      </footer>\n    `;this.attachQuickPanelListeners();document.body.appendChild(this.panel);requestAnimationFrame(()=>{this.panel.style.opacity="1";this.panel.style.transform="translateY(0)"})}getThemeOptions(){const themes=[{value:"",label:"Default"},{value:"paper",label:"Paper"},{value:"swiss",label:"Swiss"},{value:"kernel",label:"Kernel"},{value:"forest",label:"Forest"},{value:"book",label:"Book"},{value:"minimal",label:"Minimal"}];const current=document.documentElement.getAttribute("data-theme")||"";return themes.map(theme=>`<option value="${theme.value}" ${current===theme.value?"selected":""}>\n        ${theme.label}\n      </option>`).join("")}attachQuickPanelListeners(){this.panel.querySelector('[data-action="close"]')?.addEventListener("click",()=>this.close());this.panel.querySelector('[data-toggle="debug"]')?.addEventListener("change",e=>{document.body.classList.toggle("standard-debug",e.target.checked);this.showNotification(`Debug mode ${e.target.checked?"enabled":"disabled"}`,e.target.checked?"success":"info")});this.panel.querySelector('[data-action="theme"]')?.addEventListener("change",e=>{const theme=e.target.value;if(theme){document.documentElement.setAttribute("data-theme",theme)}else{document.documentElement.removeAttribute("data-theme")}localStorage.setItem("standard-theme",theme);this.showNotification(`Theme: ${theme||"Default"}`,"success")});this.panel.querySelector('[data-action="edit-tokens"]')?.addEventListener("click",()=>this.openFull());this.panel.querySelector('[data-action="reset"]')?.addEventListener("click",()=>this.resetAll());this.panel.querySelector('[data-action="copy"]')?.addEventListener("click",()=>this.copyCSS())}createFullPanel(){if(this.panel)this.panel.remove();this.panel=document.createElement("div");this.panel.className="standard-lab-panel standard-lab-panel-full";this.panel.style.bottom=`${this.position.bottom+60}px`;this.panel.style.right=`${this.position.right}px`;const modifiedCount=this.modifiedTokens.size;const showModifiedOnly=modifiedCount>0;this.panel.innerHTML=`\n      <header class="standard-lab-panel-header" style="cursor: grab;">\n        <h2>Token Editor</h2>\n        <div class="standard-lab-header-actions">\n          <button class="standard-lab-btn-icon" data-action="minimize" title="Minimize">−</button>\n          <button class="standard-lab-btn-icon" data-action="close" title="Close (Esc)">×</button>\n        </div>\n      </header>\n\n      <nav class="standard-lab-tabs">\n        <button class="standard-lab-tab" data-tab="typography" aria-selected="true">Typography</button>\n        <button class="standard-lab-tab" data-tab="layout">Layout</button>\n        <button class="standard-lab-tab" data-tab="colors">Colors</button>\n      </nav>\n\n      ${modifiedCount>0?`\n        <div class="standard-lab-filter">\n          <label class="standard-lab-toggle">\n            <input type="checkbox" ${showModifiedOnly?"checked":""} data-filter="modified">\n            <span>Show modified only (${modifiedCount})</span>\n          </label>\n        </div>\n      `:""}\n\n      <div class="standard-lab-content">\n        ${this.renderTokenList("typography",showModifiedOnly)}\n      </div>\n\n      <footer class="standard-lab-actions">\n        <button class="standard-lab-btn standard-lab-btn-secondary" data-action="reset">Reset All</button>\n        <button class="standard-lab-btn" data-action="copy">Copy CSS</button>\n      </footer>\n    `;this.attachFullPanelListeners();this.makeDraggable(this.panel.querySelector(".standard-lab-panel-header"));document.body.appendChild(this.panel);requestAnimationFrame(()=>{this.panel.style.opacity="1";this.panel.style.transform="translateY(0)"})}renderTokenList(category,modifiedOnly=false){const tokens=this.coreTokens[category]||[];let filteredTokens=tokens;if(modifiedOnly){filteredTokens=tokens.filter(token=>this.modifiedTokens.has(token))}if(filteredTokens.length===0){return`<div class="standard-lab-empty">No tokens to display</div>`}return`\n      <div class="standard-lab-token-list">\n        ${filteredTokens.map(token=>this.renderTokenRow(token)).join("")}\n      </div>\n    `}renderTokenRow(token){const value=this.getPropertyValue(token);const isModified=this.modifiedTokens.has(token);const isColor=token.includes("color")&&this.isColorValue(value);return`\n      <div class="standard-lab-token-row ${isModified?"is-modified":""}">\n        ${isColor?`\n          <input\n            type="color"\n            class="standard-lab-color-input"\n            data-token="${token}"\n            value="${this.extractHexColor(value)}"\n            title="Pick color"\n          >\n        `:""}\n        <input\n          type="text"\n          class="standard-lab-text-input ${isColor?"has-color":""}"\n          data-token="${token}"\n          value="${value}"\n          placeholder="${token}"\n          spellcheck="false"\n        >\n        <button\n          class="standard-lab-btn-icon standard-lab-btn-reset"\n          data-action="reset-token"\n          data-token="${token}"\n          title="Reset"\n          ${!isModified?"disabled":""}\n        >↺</button>\n      </div>\n    `}attachFullPanelListeners(){this.panel.querySelector('[data-action="close"]')?.addEventListener("click",()=>this.close());this.panel.querySelector('[data-action="minimize"]')?.addEventListener("click",()=>this.openQuick());this.panel.querySelectorAll(".standard-lab-tab").forEach(tab=>{tab.addEventListener("click",e=>{const category=e.target.dataset.tab;this.switchTab(category)})});this.panel.querySelector('[data-filter="modified"]')?.addEventListener("change",e=>{this.refreshTokenList(e.target.checked)});this.panel.querySelectorAll(".standard-lab-text-input").forEach(input=>{input.addEventListener("input",e=>{this.updateToken(e.target.dataset.token,e.target.value)})});this.panel.querySelectorAll(".standard-lab-color-input").forEach(input=>{input.addEventListener("input",e=>{const token=e.target.dataset.token;const color=e.target.value;this.updateToken(token,color);const textInput=this.panel.querySelector(`.standard-lab-text-input[data-token="${token}"]`);if(textInput){textInput.value=color}})});this.panel.querySelectorAll('[data-action="reset-token"]').forEach(btn=>{btn.addEventListener("click",e=>{const token=e.target.dataset.token;this.resetToken(token)})});this.panel.querySelector('[data-action="reset"]')?.addEventListener("click",()=>this.resetAll());this.panel.querySelector('[data-action="copy"]')?.addEventListener("click",()=>this.copyCSS())}switchTab(category){this.currentTab=category;this.panel.querySelectorAll(".standard-lab-tab").forEach(tab=>{const isActive=tab.dataset.tab===category;tab.setAttribute("aria-selected",isActive)});const showModifiedOnly=this.panel.querySelector('[data-filter="modified"]')?.checked||false;this.refreshTokenList(showModifiedOnly)}refreshTokenList(modifiedOnly=false){const content=this.panel?.querySelector(".standard-lab-content");if(!content)return;content.innerHTML=this.renderTokenList(this.currentTab,modifiedOnly);this.attachFullPanelListeners()}updateToken(token,value){document.documentElement.style.setProperty(token,value);const defaultValue=this.defaults[token];if(value!==defaultValue){this.modifiedTokens.add(token)}else{this.modifiedTokens.delete(token)}this.updateBadge();const resetBtn=this.panel?.querySelector(`[data-action="reset-token"][data-token="${token}"]`);if(resetBtn){resetBtn.disabled=!this.modifiedTokens.has(token)}const row=this.panel?.querySelector(`.standard-lab-token-row:has([data-token="${token}"])`);if(row){row.classList.toggle("is-modified",this.modifiedTokens.has(token))}if(token.includes("font-")&&!token.includes("font-size")&&!token.includes("font-ratio")){this.loadGoogleFont(value)}}resetToken(token){const defaultValue=this.defaults[token];if(defaultValue){document.documentElement.style.setProperty(token,defaultValue);this.modifiedTokens.delete(token);const input=this.panel?.querySelector(`[data-token="${token}"]`);if(input){input.value=defaultValue}this.updateBadge();this.refreshTokenList();this.showNotification(`Reset ${token}`,"info")}}resetAll(){if(!confirm("Reset all tokens to defaults?"))return;document.documentElement.removeAttribute("style");this.modifiedTokens.clear();this.googleFontsLoaded.clear();this.updateBadge();if(this.state==="full"){this.refreshTokenList()}this.showNotification("All tokens reset","success")}copyCSS(){const allTokens=[...this.coreTokens.typography,...this.coreTokens.layout,...this.coreTokens.colors];const cssLines=allTokens.map(token=>{const value=this.getPropertyValue(token);return`  ${token}: ${value};`});const css=`:root {\n${cssLines.join("\n")}\n}`;navigator.clipboard.writeText(css).then(()=>{this.showNotification("✓ CSS copied to clipboard!","success")}).catch(()=>{const textarea=document.createElement("textarea");textarea.value=css;textarea.style.position="fixed";textarea.style.opacity="0";document.body.appendChild(textarea);textarea.select();document.execCommand("copy");document.body.removeChild(textarea);this.showNotification("✓ CSS copied to clipboard!","success")})}getPropertyValue(token){const value=getComputedStyle(document.documentElement).getPropertyValue(token).trim();if(!value){return document.documentElement.style.getPropertyValue(token).trim()}return value}isColorValue(value){if(!value)return false;return value.startsWith("#")||value.startsWith("rgb")||value.startsWith("hsl")||value.startsWith("oklch")||value.includes("color-mix")}extractHexColor(value){if(!value)return"#000000";const hexMatch=value.match(/#[0-9a-f]{6}/i);if(hexMatch)return hexMatch[0];const rgbMatch=value.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);if(rgbMatch){const[,r,g,b]=rgbMatch;return"#"+[r,g,b].map(x=>parseInt(x).toString(16).padStart(2,"0")).join("")}const colorMap={white:"#ffffff",black:"#000000",red:"#ff0000",green:"#00ff00",blue:"#0000ff",yellow:"#ffff00",orange:"#ffa500",purple:"#800080",pink:"#ffc0cb",cyan:"#00ffff"};return colorMap[value.toLowerCase()]||"#000000"}loadGoogleFont(fontName){const cleanName=fontName.split(",")[0].trim().replace(/['"]/g,"");const systemFonts=["system-ui","sans-serif","serif","monospace","-apple-system","BlinkMacSystemFont"];if(systemFonts.includes(cleanName))return;if(this.googleFontsLoaded.has(cleanName))return;const fontUrl=`https://fonts.googleapis.com/css2?family=${cleanName.replace(/ /g,"+")}:wght@300;400;500;600;700;900&display=swap`;if(!document.querySelector(`link[href*="${cleanName.replace(/ /g,"+")}"]`)){const link=document.createElement("link");link.rel="stylesheet";link.href=fontUrl;document.head.appendChild(link);this.googleFontsLoaded.add(cleanName)}}showNotification(message,type="info"){const notification=document.createElement("div");notification.className=`standard-lab-notification standard-lab-notification-${type}`;notification.textContent=message;document.body.appendChild(notification);requestAnimationFrame(()=>{notification.style.opacity="1";notification.style.transform="translateY(0)"});setTimeout(()=>{notification.style.opacity="0";notification.style.transform="translateY(-10px)";setTimeout(()=>notification.remove(),200)},2500)}initKeyboardShortcuts(){document.addEventListener("keydown",e=>{const isMac=navigator.platform.indexOf("Mac")>-1;if(e.shiftKey&&(isMac?e.metaKey:e.ctrlKey)&&e.key.toLowerCase()==="d"){e.preventDefault();if(this.state==="dormant"){this.openQuick()}else{this.close()}}if(e.shiftKey&&(isMac?e.metaKey:e.ctrlKey)&&e.key.toLowerCase()==="s"){e.preventDefault();document.body.classList.toggle("standard-debug");const isActive=document.body.classList.contains("standard-debug");this.showNotification(`Debug mode ${isActive?"enabled":"disabled"}`,isActive?"success":"info")}if(e.key==="Escape"&&this.state!=="dormant"){this.close()}})}initModificationTracking(){const allTokens=[...this.coreTokens.typography,...this.coreTokens.layout,...this.coreTokens.colors];allTokens.forEach(token=>{const currentValue=this.getPropertyValue(token);const defaultValue=this.defaults[token];if(currentValue&&defaultValue&&currentValue!==defaultValue){this.modifiedTokens.add(token)}});this.updateBadge()}injectStyles(){if(document.getElementById("standard-lab-styles"))return;const styles=document.createElement("style");styles.id="standard-lab-styles";styles.textContent=`\n      /* =========================== */\n      /* STANDARD LAB - MINIMAL UI   */\n      /* =========================== */\n\n      /* Badge (Dormant State) */\n      .standard-lab-badge {\n        position: fixed;\n        width: 48px;\n        height: 48px;\n        border-radius: 50%;\n        background: var(--color-background);\n        border: 1px solid var(--color-border);\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        backdrop-filter: blur(10px);\n        cursor: pointer;\n        z-index: var(--z-toast);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: var(--color-foreground);\n        transition: all 0.2s ease;\n        padding: 0;\n      }\n\n      .standard-lab-badge:hover {\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        transform: scale(1.05);\n      }\n\n      .standard-lab-badge:active {\n        transform: scale(0.95);\n      }\n\n      /* Badge modification indicator */\n      .standard-lab-badge[data-modified]::after {\n        content: attr(data-modified);\n        position: absolute;\n        top: -4px;\n        right: -4px;\n        width: 20px;\n        height: 20px;\n        border-radius: 50%;\n        background: var(--color-accent);\n        color: var(--color-background);\n        font-size: var(--scale-xs);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-weight: 600;\n        border: 2px solid var(--color-background);\n      }\n\n      /* Panel Base */\n      .standard-lab-panel {\n        position: fixed;\n        background: color-mix(in srgb, var(--color-background) 95%, transparent);\n        backdrop-filter: blur(10px);\n        border: 1px solid var(--color-border);\n        border-radius: var(--border-radius);\n        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n        z-index: var(--z-toast);\n        opacity: 0;\n        transform: translateY(10px);\n        transition: opacity 0.2s ease, transform 0.2s ease;\n        display: flex;\n        flex-direction: column;\n        font-family: var(--font-interface, system-ui);\n        font-size: var(--scale-s);\n      }\n\n      /* Quick Panel */\n      .standard-lab-panel-quick {\n        width: 280px;\n        max-height: 400px;\n      }\n\n      /* Full Panel */\n      .standard-lab-panel-full {\n        width: 360px;\n        max-height: 600px;\n      }\n\n      /* Panel Header */\n      .standard-lab-panel-header {\n        padding: var(--space-s);\n        border-bottom: 1px solid var(--color-border);\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex-shrink: 0;\n      }\n\n      .standard-lab-panel-header h2 {\n        margin: 0;\n        font-size: var(--scale-s);\n        font-weight: 600;\n        letter-spacing: -0.02em;\n      }\n\n      .standard-lab-header-actions {\n        display: flex;\n        gap: var(--space-2xs);\n      }\n\n      /* Sections */\n      .standard-lab-section {\n        padding: var(--space-s);\n        border-bottom: 1px solid var(--color-border);\n      }\n\n      .standard-lab-section:last-of-type {\n        border-bottom: none;\n      }\n\n      /* Label */\n      .standard-lab-label {\n        display: block;\n        font-size: var(--scale-xs);\n        font-weight: 600;\n        color: var(--color-muted);\n        text-transform: uppercase;\n        letter-spacing: 0.05em;\n        margin-bottom: var(--space-2xs);\n      }\n\n      /* Toggle */\n      .standard-lab-toggle {\n        display: flex;\n        align-items: center;\n        gap: var(--space-xs);\n        cursor: pointer;\n        user-select: none;\n        padding: var(--space-2xs) 0;\n      }\n\n      .standard-lab-toggle input[type="checkbox"] {\n        width: 16px;\n        height: 16px;\n        cursor: pointer;\n        margin: 0;\n      }\n\n      .standard-lab-toggle span {\n        flex: 1;\n        font-size: var(--scale-s);\n      }\n\n      .standard-lab-toggle kbd {\n        font-size: var(--scale-xs);\n        font-family: var(--font-monospace);\n        color: var(--color-subtle);\n        padding: var(--space-3xs) var(--space-2xs);\n        background: var(--color-background-secondary);\n        border-radius: 3px;\n      }\n\n      /* Select */\n      .standard-lab-select {\n        width: 100%;\n        padding: var(--space-xs);\n        background: var(--color-background);\n        border: 1px solid var(--color-border);\n        border-radius: var(--border-radius);\n        font-size: var(--scale-s);\n        font-family: inherit;\n        color: var(--color-foreground);\n        cursor: pointer;\n      }\n\n      /* Actions Footer */\n      .standard-lab-actions {\n        padding: var(--space-s);\n        border-top: 1px solid var(--color-border);\n        display: flex;\n        flex-direction: column;\n        gap: var(--space-2xs);\n        flex-shrink: 0;\n      }\n\n      /* Buttons */\n      .standard-lab-btn {\n        width: 100%;\n        padding: var(--space-xs);\n        background: var(--color-accent);\n        color: var(--color-background);\n        border: none;\n        border-radius: var(--border-radius);\n        font-size: var(--scale-s);\n        font-weight: 600;\n        cursor: pointer;\n        transition: opacity 0.2s ease;\n        font-family: inherit;\n      }\n\n      .standard-lab-btn:hover {\n        opacity: 0.9;\n      }\n\n      .standard-lab-btn:active {\n        opacity: 0.8;\n      }\n\n      .standard-lab-btn-secondary {\n        background: var(--color-background-secondary);\n        color: var(--color-foreground);\n        border: 1px solid var(--color-border);\n      }\n\n      .standard-lab-btn-icon {\n        width: 28px;\n        height: 28px;\n        padding: 0;\n        background: transparent;\n        border: none;\n        color: var(--color-muted);\n        font-size: var(--scale-l);\n        line-height: 1;\n        cursor: pointer;\n        border-radius: var(--border-radius);\n        transition: all 0.2s ease;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .standard-lab-btn-icon:hover {\n        background: var(--color-background-secondary);\n        color: var(--color-foreground);\n      }\n\n      /* Tabs */\n      .standard-lab-tabs {\n        display: flex;\n        border-bottom: 1px solid var(--color-border);\n        flex-shrink: 0;\n      }\n\n      .standard-lab-tab {\n        flex: 1;\n        padding: var(--space-xs);\n        background: transparent;\n        border: none;\n        border-bottom: 2px solid transparent;\n        font-size: var(--scale-xs);\n        font-weight: 500;\n        color: var(--color-muted);\n        cursor: pointer;\n        transition: all 0.2s ease;\n        font-family: inherit;\n      }\n\n      .standard-lab-tab:hover {\n        color: var(--color-foreground);\n        background: var(--color-background-secondary);\n      }\n\n      .standard-lab-tab[aria-selected="true"] {\n        color: var(--color-foreground);\n        border-bottom-color: var(--color-accent);\n        font-weight: 600;\n      }\n\n      /* Filter */\n      .standard-lab-filter {\n        padding: var(--space-xs) var(--space-s);\n        background: var(--color-background-secondary);\n        border-bottom: 1px solid var(--color-border);\n        flex-shrink: 0;\n      }\n\n      /* Content Area */\n      .standard-lab-content {\n        flex: 1;\n        overflow-y: auto;\n        padding: var(--space-xs);\n      }\n\n      .standard-lab-content::-webkit-scrollbar {\n        width: 6px;\n      }\n\n      .standard-lab-content::-webkit-scrollbar-track {\n        background: transparent;\n      }\n\n      .standard-lab-content::-webkit-scrollbar-thumb {\n        background: var(--color-border);\n        border-radius: 3px;\n      }\n\n      .standard-lab-content::-webkit-scrollbar-thumb:hover {\n        background: var(--color-muted);\n      }\n\n      /* Token List */\n      .standard-lab-token-list {\n        display: flex;\n        flex-direction: column;\n        gap: var(--space-3xs);\n      }\n\n      /* Token Row */\n      .standard-lab-token-row {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        gap: var(--space-2xs);\n        align-items: center;\n        padding: var(--space-2xs);\n        border-radius: var(--border-radius);\n        transition: background 0.2s ease;\n      }\n\n      .standard-lab-token-row.has-color {\n        grid-template-columns: auto 1fr auto;\n      }\n\n      .standard-lab-token-row:hover {\n        background: var(--color-background-secondary);\n      }\n\n      .standard-lab-token-row.is-modified {\n        background: color-mix(in srgb, var(--color-accent) 5%, transparent);\n      }\n\n      /* Token Inputs */\n      .standard-lab-text-input {\n        padding: var(--space-2xs);\n        background: transparent;\n        border: 1px solid transparent;\n        border-radius: 3px;\n        font-size: var(--scale-xs);\n        font-family: var(--font-monospace);\n        color: var(--color-foreground);\n        min-width: 0;\n        transition: all 0.2s ease;\n      }\n\n      .standard-lab-text-input:focus {\n        outline: none;\n        background: var(--color-background);\n        border-color: var(--color-accent);\n      }\n\n      .standard-lab-color-input {\n        width: 32px;\n        height: 32px;\n        border: 1px solid var(--color-border);\n        border-radius: 4px;\n        cursor: pointer;\n        padding: 2px;\n        background: var(--color-background);\n      }\n\n      .standard-lab-color-input::-webkit-color-swatch-wrapper {\n        padding: 0;\n      }\n\n      .standard-lab-color-input::-webkit-color-swatch {\n        border: none;\n        border-radius: 2px;\n      }\n\n      .standard-lab-btn-reset {\n        opacity: 0;\n        transition: opacity 0.2s ease;\n      }\n\n      .standard-lab-token-row:hover .standard-lab-btn-reset:not(:disabled) {\n        opacity: 1;\n      }\n\n      .standard-lab-btn-reset:disabled {\n        opacity: 0;\n        cursor: not-allowed;\n      }\n\n      /* Empty State */\n      .standard-lab-empty {\n        padding: var(--space);\n        text-align: center;\n        color: var(--color-subtle);\n        font-size: var(--scale-s);\n      }\n\n      /* Notification */\n      .standard-lab-notification {\n        position: fixed;\n        top: var(--space);\n        left: 50%;\n        transform: translateX(-50%) translateY(-10px);\n        background: var(--color-background);\n        border: 1px solid var(--color-border);\n        border-radius: var(--border-radius);\n        padding: var(--space-xs) var(--space-s);\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n        z-index: calc(var(--z-toast) + 1);\n        font-size: var(--scale-s);\n        opacity: 0;\n        transition: opacity 0.2s ease, transform 0.2s ease;\n        pointer-events: none;\n      }\n\n      .standard-lab-notification-success {\n        background: var(--color-success);\n        color: white;\n        border-color: var(--color-success);\n      }\n\n      .standard-lab-notification-info {\n        background: var(--color-info);\n        color: white;\n        border-color: var(--color-info);\n      }\n\n      /* Dark mode adjustments */\n      @media (prefers-color-scheme: dark) {\n        .standard-lab-panel {\n          box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n        }\n      }\n\n      /* Mobile responsive */\n      @media (max-width: 768px) {\n        .standard-lab-panel-quick,\n        .standard-lab-panel-full {\n          width: calc(100vw - var(--space) * 2);\n          max-width: 360px;\n        }\n      }\n\n      /* Print: hide everything */\n      @media print {\n        .standard-lab-badge,\n        .standard-lab-panel,\n        .standard-lab-notification {\n          display: none !important;\n        }\n      }\n    `;document.head.appendChild(styles)}}if(typeof window!=="undefined"){if(document.readyState==="loading"){document.addEventListener("DOMContentLoaded",()=>{window.StandardLab=new StandardLab})}else{window.StandardLab=new StandardLab}}if(typeof module!=="undefined"&&module.exports){module.exports={StandardLab:StandardLab}}