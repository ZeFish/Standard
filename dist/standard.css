@charset "UTF-8";
/* Document
 * ========================================================================== */
/**
 * 1. Add border box sizing in all browsers (opinionated).
 * 2. Backgrounds do not repeat by default (opinionated).
 */
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  background-repeat: no-repeat; /* 2 */
}

/**
 * 1. Add text decoration inheritance in all browsers (opinionated).
 * 2. Add vertical alignment inheritance in all browsers (opinionated).
 */
::before,
::after {
  text-decoration: inherit; /* 1 */
  vertical-align: inherit; /* 2 */
}

/**
 * 1. Use the default cursor in all browsers (opinionated).
 * 2. Change the line height in all browsers (opinionated).
 * 3. Breaks words to prevent overflow in all browsers (opinionated).
 * 4. Use a 4-space tab width in all browsers (opinionated).
 * 5. Remove the grey highlight on links in iOS (opinionated).
 * 6. Prevent adjustments of font size after orientation changes in iOS.
 */
:where(:root) {
  cursor: default; /* 1 */
  line-height: 1.5; /* 2 */
  overflow-wrap: break-word; /* 3 */
  -moz-tab-size: 4; /* 4 */
  tab-size: 4; /* 4 */
  -webkit-tap-highlight-color: transparent; /* 5 */
  -webkit-text-size-adjust: 100%; /* 6 */
}

/* Sections
 * ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
:where(body) {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Edge, Firefox, and Safari.
 */
:where(h1) {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
 * ========================================================================== */
/**
 * Remove the margin on nested lists in Chrome, Edge, and Safari.
 */
:where(dl, ol, ul) :where(dl, ol, ul) {
  margin: 0;
}

/**
 * 1. Correct the inheritance of border color in Firefox.
 * 2. Add the correct box sizing in Firefox.
 */
:where(hr) {
  color: inherit; /* 1 */
  height: 0; /* 2 */
}

/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
:where(nav) :where(ol, ul) {
  list-style-type: none;
  padding: 0;
}

/**
 * Prevent VoiceOver from ignoring list semantics in Safari (opinionated).
 */
:where(nav li)::before {
  content: "â€‹";
  float: left;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 * 3. Prevent overflow of the container in all browsers (opinionated).
 */
:where(pre) {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
  overflow: auto; /* 3 */
}

/* Text-level semantics
 * ========================================================================== */
/**
 * Add the correct text decoration in Safari.
 */
:where(abbr[title]) {
  text-decoration: underline;
  text-decoration: underline dotted;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
:where(b, strong) {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
:where(code, kbd, samp) {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
:where(small) {
  font-size: 80%;
}

/* Embedded content
 * ========================================================================== */
/*
 * Change the alignment on media elements in all browsers (opinionated).
 */
:where(audio, canvas, iframe, img, svg, video) {
  vertical-align: middle;
}

/**
 * Remove the border on iframes in all browsers (opinionated).
 */
:where(iframe) {
  border-style: none;
}

/**
 * Change the fill color to match the text color in all browsers (opinionated).
 */
:where(svg:not([fill])) {
  fill: currentColor;
}

/* Tabular data
 * ========================================================================== */
/**
 * 1. Collapse border spacing in all browsers (opinionated).
 * 2. Correct table border color inheritance in all Chrome, Edge, and Safari.
 * 3. Remove text indentation from table contents in Chrome, Edge, and Safari.
 */
:where(table) {
  border-collapse: collapse; /* 1 */
  border-color: inherit; /* 2 */
  text-indent: 0; /* 3 */
}

/* Forms
 * ========================================================================== */
/**
 * Remove the margin on controls in Safari.
 */
:where(button, input, select) {
  margin: 0;
}

/**
 * Correct the inability to style buttons in iOS and Safari.
 */
:where(button, [type=button i], [type=reset i], [type=submit i]) {
  -webkit-appearance: button;
}

/**
 * Change the inconsistent appearance in all browsers (opinionated).
 */
:where(fieldset) {
  border: 1px solid #a0a0a0;
}

/**
 * Add the correct vertical alignment in Chrome, Edge, and Firefox.
 */
:where(progress) {
  vertical-align: baseline;
}

/**
 * 1. Remove the margin in Firefox and Safari.
 * 3. Change the resize direction in all browsers (opinionated).
 */
:where(textarea) {
  margin: 0; /* 1 */
  resize: vertical; /* 3 */
}

/**
 * 1. Correct the odd appearance in Chrome, Edge, and Safari.
 * 2. Correct the outline style in Safari.
 */
:where([type=search i]) {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Safari.
 */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * Remove the inner padding in Chrome, Edge, and Safari on macOS.
 */
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style upload buttons in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
 * ========================================================================== */
/*
 * Add the correct styles in Safari.
 */
:where(dialog) {
  background-color: white;
  border: solid;
  color: black;
  height: -moz-fit-content;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: -moz-fit-content;
  width: fit-content;
}

:where(dialog:not([open])) {
  display: none;
}

/*
 * Add the correct display in Safari.
 */
:where(details > summary:first-of-type) {
  display: list-item;
}

/* Accessibility
 * ========================================================================== */
/**
 * Change the cursor on busy elements in all browsers (opinionated).
 */
:where([aria-busy=true i]) {
  cursor: progress;
}

/*
 * Change the cursor on control elements in all browsers (opinionated).
 */
:where([aria-controls]) {
  cursor: pointer;
}

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements in all browsers (opinionated).
 */
:where([aria-disabled=true i], [disabled]) {
  cursor: not-allowed;
}

/*
 * Change the display on visually hidden accessible elements
 * in all browsers (opinionated).
 */
:where([aria-hidden=false i][hidden]) {
  display: initial;
}

:where([aria-hidden=false i][hidden]:not(:focus)) {
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Primitive Design Tokens - Foundation layer with logical properties */
:root {
  /* Base measurements & ratios - the foundation of everything else */
  --font-size: 1rem;
  /* Golden Ratio & Mathematical Precision */
  --ratio-golden: 1.618;
  --ratio-wholestep: 1.618;
  --ratio-halfstep: 1.272; /* sqrt of golden ratio */
  --ratio-quarterstep: 1.128;
  --ratio-eighthstep: 1.062;
  /* Current ratio (configurable) */
  --font-ratio: var(--ratio-golden);
  --font-density: 1.3;
  --font-density-s: 1;
  /* Modular Scale - calculated from font-ratio */
  --scale-xs: calc(var(--font-size) * pow(var(--font-ratio), -1));
  --scale-s: calc(var(--font-size) * pow(var(--font-ratio), -0.5));
  --scale: var(--font-size);
  --scale-l: calc(var(--font-size) * pow(var(--font-ratio), 1));
  --scale-xl: calc(var(--font-size) * pow(var(--font-ratio), 2));
  --scale-xxl: calc(var(--font-size) * pow(var(--font-ratio), 3));
  --scale-xxxl: calc(var(--font-size) * pow(var(--font-ratio), 4));
  /* Rhythm system control tokens */
  --rhythm-multiplier: 1; /* Global rhythm scaling */
  --rhythm-block-space: 2; /* Multiplier for special block elements (blockquote, pre, figure) */
  /* Logical Spacing Scale - based on rhythm unit */
  --space-xxxs: calc(1rlh / 5);
  --space-xxs: calc(1rlh / 4);
  --space-xs: calc(1rlh / 3);
  --space-s: calc(1rlh / 2);
  --space: 1rlh; /* Base rhythm unit */
  --space-l: calc(2 * 1rlh);
  --space-xl: calc(3 * 1rlh);
  --space-xxl: calc(4 * 1rlh);
  --space-xxxl: calc(5 * 1rlh);
  /* Logical spacing tokens - block and inline directions */
  --space-block-start: var(--space);
  --space-block-end: var(--space);
  --space-inline-start: var(--space);
  --space-inline-end: var(--space);
  /* Derived spacing tokens */
  --space-gap: calc(var(--space) / 4); /* Small gap for flex grids */
  --space-block: var(--space); /* Default block spacing */
  --space-block-special: calc(
      var(--space) * var(--rhythm-block-space)
  ); /* Special block elements spacing */
  --space-negative: calc(var(--space) * -1);
  /* Logical border properties */
  --hr-thickness: 1px;
  --border-radius: var(--space-xxs);
  --border-block-start-width: var(--hr-thickness);
  --border-block-end-width: var(--hr-thickness);
  --border-inline-start-width: var(--hr-thickness);
  --border-inline-end-width: var(--hr-thickness);
  /* Z-index scale */
  --z-base: 1;
  --z-dropdown: 1000;
  --z-sticky: 1020;
  --z-fixed: 1030;
  --z-modal-backdrop: 1040;
  --z-offcanvas: 1050;
  --z-modal: 1060;
  --z-popover: 1070;
  --z-tooltip: 1080;
  --z-toast: 1090;
  --z-image-zoom: 9999;
  /* Animation scale */
  --duration-superfast: 0.15s;
  --duration-fast: 0.25s;
  --duration-normal: 0.35s;
  --duration-slow: 0.5s;
  --motion-smooth: cubic-bezier(0.4, 0, 0.2, 1);
  --motion-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

/* Grid Design Tokens - Using logical properties */
:root {
  /* Grid system tokens */
  --grid-cols: 12;
  --grid-gap: var(--space);
  --grid-row-gap: var(--space-block); /* Separate control for row spacing */
  /* Container tokens */
  --container-max: 1200px;
  --container-standard: var(--space);
}

/* Harmony Grid (unified) â€” 12-col Swiss-style grid with rhythm-native gaps
   Use this as your single grid across the site (replaces old .h-grid API).
   Relies on logical properties and Harmony tokens: --space, --space-gap, --space-l, borders, etc.
*/
/* Grid container */
.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-cols), 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

/* Gap variants aligned to rhythm */
.grid.tight {
  --grid-gap: var(--space-gap);
  --grid-row-gap: var(--space-s);
}

.grid.wide {
  --grid-gap: var(--space-l);
  --grid-row-gap: var(--space-xl);
}

/* Spans 1..12 */
.col-1 {
  grid-column: span 1;
}

.col-2 {
  grid-column: span 2;
}

.col-3 {
  grid-column: span 3;
}

.col-4 {
  grid-column: span 4;
}

.col-5 {
  grid-column: span 5;
}

.col-6 {
  grid-column: span 6;
}

.col-7 {
  grid-column: span 7;
}

.col-8 {
  grid-column: span 8;
}

.col-9 {
  grid-column: span 9;
}

.col-10 {
  grid-column: span 10;
}

.col-11 {
  grid-column: span 11;
}

.col-12 {
  grid-column: span 12;
}

/* Optional starts 1..12 */
.start-1 {
  grid-column-start: 1;
}

.start-2 {
  grid-column-start: 2;
}

.start-3 {
  grid-column-start: 3;
}

.start-4 {
  grid-column-start: 4;
}

.start-5 {
  grid-column-start: 5;
}

.start-6 {
  grid-column-start: 6;
}

.start-7 {
  grid-column-start: 7;
}

.start-8 {
  grid-column-start: 8;
}

.start-9 {
  grid-column-start: 9;
}

.start-10 {
  grid-column-start: 10;
}

.start-11 {
  grid-column-start: 11;
}

.start-12 {
  grid-column-start: 12;
}

/* Responsive spans/starts: md â‰¥ 768px, lg â‰¥ 1024px */
@media (min-width: 768px) {
  .col-md-1 {
    grid-column: span 1;
  }
  .start-md-1 {
    grid-column-start: 1;
  }
  .col-md-2 {
    grid-column: span 2;
  }
  .start-md-2 {
    grid-column-start: 2;
  }
  .col-md-3 {
    grid-column: span 3;
  }
  .start-md-3 {
    grid-column-start: 3;
  }
  .col-md-4 {
    grid-column: span 4;
  }
  .start-md-4 {
    grid-column-start: 4;
  }
  .col-md-5 {
    grid-column: span 5;
  }
  .start-md-5 {
    grid-column-start: 5;
  }
  .col-md-6 {
    grid-column: span 6;
  }
  .start-md-6 {
    grid-column-start: 6;
  }
  .col-md-7 {
    grid-column: span 7;
  }
  .start-md-7 {
    grid-column-start: 7;
  }
  .col-md-8 {
    grid-column: span 8;
  }
  .start-md-8 {
    grid-column-start: 8;
  }
  .col-md-9 {
    grid-column: span 9;
  }
  .start-md-9 {
    grid-column-start: 9;
  }
  .col-md-10 {
    grid-column: span 10;
  }
  .start-md-10 {
    grid-column-start: 10;
  }
  .col-md-11 {
    grid-column: span 11;
  }
  .start-md-11 {
    grid-column-start: 11;
  }
  .col-md-12 {
    grid-column: span 12;
  }
  .start-md-12 {
    grid-column-start: 12;
  }
}
@media (min-width: 1024px) {
  .col-lg-1 {
    grid-column: span 1;
  }
  .start-lg-1 {
    grid-column-start: 1;
  }
  .col-lg-2 {
    grid-column: span 2;
  }
  .start-lg-2 {
    grid-column-start: 2;
  }
  .col-lg-3 {
    grid-column: span 3;
  }
  .start-lg-3 {
    grid-column-start: 3;
  }
  .col-lg-4 {
    grid-column: span 4;
  }
  .start-lg-4 {
    grid-column-start: 4;
  }
  .col-lg-5 {
    grid-column: span 5;
  }
  .start-lg-5 {
    grid-column-start: 5;
  }
  .col-lg-6 {
    grid-column: span 6;
  }
  .start-lg-6 {
    grid-column-start: 6;
  }
  .col-lg-7 {
    grid-column: span 7;
  }
  .start-lg-7 {
    grid-column-start: 7;
  }
  .col-lg-8 {
    grid-column: span 8;
  }
  .start-lg-8 {
    grid-column-start: 8;
  }
  .col-lg-9 {
    grid-column: span 9;
  }
  .start-lg-9 {
    grid-column-start: 9;
  }
  .col-lg-10 {
    grid-column: span 10;
  }
  .start-lg-10 {
    grid-column-start: 10;
  }
  .col-lg-11 {
    grid-column: span 11;
  }
  .start-lg-11 {
    grid-column-start: 11;
  }
  .col-lg-12 {
    grid-column: span 12;
  }
  .start-lg-12 {
    grid-column-start: 12;
  }
}
/* Full-span helper (replaces old .h-col-full) */
.col-full {
  grid-column: 1/-1;
}

/* Ergonomic presets (optional sugar) */
.col-half {
  grid-column: span 6;
} /* 1/2 */
.col-third {
  grid-column: span 4;
} /* 1/3 */
.col-two3 {
  grid-column: span 8;
} /* 2/3 */
.col-quarter {
  grid-column: span 3;
} /* 1/4 */
/* Rhythm inside grid items: apply to a cell containing prose */
.grid .rhythm > * {
  margin-block-end: var(--space);
}

/* Free columns: place anywhere with CSS vars or utility shorthands */
.free-col {
  /* Defaults; authors override via CSS vars or utilities */
  --start: auto; /* 1..12 or auto */
  --span: 3; /* 1..12 */
  grid-column: var(--start)/span var(--span);
  /* If the free column contains prose, opt-in to rhythm */
}
.free-col.rhythm > * {
  margin-block-end: var(--space);
}

/* Utility-class interface to set the CSS vars (ergonomic authoring) */
.span-1 {
  --span: 1;
}

.startv-1 {
  --start: 1;
} /* 'startv' to avoid clash with .start- utilities */
.span-2 {
  --span: 2;
}

.startv-2 {
  --start: 2;
} /* 'startv' to avoid clash with .start- utilities */
.span-3 {
  --span: 3;
}

.startv-3 {
  --start: 3;
} /* 'startv' to avoid clash with .start- utilities */
.span-4 {
  --span: 4;
}

.startv-4 {
  --start: 4;
} /* 'startv' to avoid clash with .start- utilities */
.span-5 {
  --span: 5;
}

.startv-5 {
  --start: 5;
} /* 'startv' to avoid clash with .start- utilities */
.span-6 {
  --span: 6;
}

.startv-6 {
  --start: 6;
} /* 'startv' to avoid clash with .start- utilities */
.span-7 {
  --span: 7;
}

.startv-7 {
  --start: 7;
} /* 'startv' to avoid clash with .start- utilities */
.span-8 {
  --span: 8;
}

.startv-8 {
  --start: 8;
} /* 'startv' to avoid clash with .start- utilities */
.span-9 {
  --span: 9;
}

.startv-9 {
  --start: 9;
} /* 'startv' to avoid clash with .start- utilities */
.span-10 {
  --span: 10;
}

.startv-10 {
  --start: 10;
} /* 'startv' to avoid clash with .start- utilities */
.span-11 {
  --span: 11;
}

.startv-11 {
  --start: 11;
} /* 'startv' to avoid clash with .start- utilities */
.span-12 {
  --span: 12;
}

.startv-12 {
  --start: 12;
} /* 'startv' to avoid clash with .start- utilities */
/* Responsive overrides for the var-based API */
@media (min-width: 768px) {
  .span-md-1 {
    --span: 1;
  }
  .startv-md-1 {
    --start: 1;
  }
  .span-md-2 {
    --span: 2;
  }
  .startv-md-2 {
    --start: 2;
  }
  .span-md-3 {
    --span: 3;
  }
  .startv-md-3 {
    --start: 3;
  }
  .span-md-4 {
    --span: 4;
  }
  .startv-md-4 {
    --start: 4;
  }
  .span-md-5 {
    --span: 5;
  }
  .startv-md-5 {
    --start: 5;
  }
  .span-md-6 {
    --span: 6;
  }
  .startv-md-6 {
    --start: 6;
  }
  .span-md-7 {
    --span: 7;
  }
  .startv-md-7 {
    --start: 7;
  }
  .span-md-8 {
    --span: 8;
  }
  .startv-md-8 {
    --start: 8;
  }
  .span-md-9 {
    --span: 9;
  }
  .startv-md-9 {
    --start: 9;
  }
  .span-md-10 {
    --span: 10;
  }
  .startv-md-10 {
    --start: 10;
  }
  .span-md-11 {
    --span: 11;
  }
  .startv-md-11 {
    --start: 11;
  }
  .span-md-12 {
    --span: 12;
  }
  .startv-md-12 {
    --start: 12;
  }
}
@media (min-width: 1024px) {
  .span-lg-1 {
    --span: 1;
  }
  .startv-lg-1 {
    --start: 1;
  }
  .span-lg-2 {
    --span: 2;
  }
  .startv-lg-2 {
    --start: 2;
  }
  .span-lg-3 {
    --span: 3;
  }
  .startv-lg-3 {
    --start: 3;
  }
  .span-lg-4 {
    --span: 4;
  }
  .startv-lg-4 {
    --start: 4;
  }
  .span-lg-5 {
    --span: 5;
  }
  .startv-lg-5 {
    --start: 5;
  }
  .span-lg-6 {
    --span: 6;
  }
  .startv-lg-6 {
    --start: 6;
  }
  .span-lg-7 {
    --span: 7;
  }
  .startv-lg-7 {
    --start: 7;
  }
  .span-lg-8 {
    --span: 8;
  }
  .startv-lg-8 {
    --start: 8;
  }
  .span-lg-9 {
    --span: 9;
  }
  .startv-lg-9 {
    --start: 9;
  }
  .span-lg-10 {
    --span: 10;
  }
  .startv-lg-10 {
    --start: 10;
  }
  .span-lg-11 {
    --span: 11;
  }
  .startv-lg-11 {
    --start: 11;
  }
  .span-lg-12 {
    --span: 12;
  }
  .startv-lg-12 {
    --start: 12;
  }
}
/* Mobile fallback: stack free columns full-width */
@media (max-width: 767.98px) {
  .free-col {
    grid-column: 1/-1;
  }
}
/* Optional: sticky marginalia variant for editorial layouts */
.free-col.sticky {
  position: sticky;
  inset-block-start: var(--space);
  align-self: start;
  z-index: 1;
}

/* Row gap utilities for grid system */
.grid.no-row-gap {
  row-gap: 0;
}

.grid.row-gap-xs {
  --grid-row-gap: var(--space-xs);
}

.grid.row-gap-s {
  --grid-row-gap: var(--space-s);
}

.grid.row-gap-l {
  --grid-row-gap: var(--space-l);
}

.grid.row-gap-xl {
  --grid-row-gap: var(--space-xl);
}

/* Column gap utilities for grid system */
.grid.no-col-gap {
  column-gap: 0;
}

.grid.col-gap-xs {
  --grid-gap: var(--space-xs);
}

.grid.col-gap-s {
  --grid-gap: var(--space-s);
}

.grid.col-gap-l {
  --grid-gap: var(--space-l);
}

.grid.col-gap-xl {
  --grid-gap: var(--space-xl);
}

/* Prose Layout Design Tokens - Using logical properties */
:root {
  /* Content area tokens */
  --line-width-xs: 24rem; /* ~384px - narrow sidebar content */
  --line-width-s: 32rem; /* ~512px - short form content */
  --line-width-normal: 42rem; /* ~672px - optimal reading (60-75 chars) */
  --line-width-wide: 50rem; /* ~800px - wider articles */
  --line-width-xl: 60rem; /* ~960px - documentation/wide content */
  --line-width-full: 88vw; /* responsive full width with margins */
  --line-width: var(--line-width-normal);
  /* Layout grid tokens */
  --gap: clamp(var(--space), 6vw, var(--space-xl));
  --content: min(var(--line-width), 100% - var(--gap) * 2);
  --content-small: var(--space-l);
  --content-accent: minmax(0, var(--space-l));
  --content-feature: minmax(0, var(--space-xxl));
  --content-full: minmax(var(--gap), 1fr);
}

/* Reading Layout System - Article content grid and positioning */
/* Inspired by fine-art typography and book design principles */
.reading {
  display: grid;
  grid-template-columns: [full-start] var(--content-full) [feature-start] var(--content-feature) [accent-start] var(--content-accent) [content-start] var(--content) [content-end] var(--content-accent) [accent-end] var(--content-feature) [feature-end] var(--content-full) [full-end];
  padding-inline: calc(var(--space) * -2);
  position: relative;
  z-index: var(--z-base);
  /* Default content positioning */
}
.reading > * {
  grid-column: content;
}
.reading .small {
  grid-column: content;
  margin-inline: var(--content-small);
}
.reading .accent {
  grid-column: accent;
  margin-inline: 0;
}
.reading .feature {
  grid-column: feature;
  margin-inline: 0;
}
.reading .full {
  grid-column: full;
  margin-inline: 0;
}
.reading {
  /* Image gallery layout */
}
.reading:not(.no-grid) p:has(img) {
  display: flex;
  gap: var(--space-gap);
  border-radius: var(--border-radius);
}
.reading:not(.no-grid) p:has(img) > * {
  flex: 1 1 auto;
  min-width: 1%;
  min-height: 1%;
  object-fit: cover;
}
.reading:not(.no-grid) p:has(video) > * {
  flex: 1 1 auto;
  min-width: 1%;
  min-height: 1%;
  object-fit: cover;
}
.reading:not(.no-grid) p:has(img) img,
.reading:not(.no-grid) p:has(img) img:first-child,
.reading:not(.no-grid) p:has(img) img:last-child {
  margin-inline: auto;
}
.reading:not(.no-grid) p:has(img) br {
  display: none;
}
.reading:not(.no-grid) .callout p:has(img),
.reading:not(.no-grid) .callout p:has(img) br {
  display: block;
}
.reading {
  /* Basic media styling */
}
.reading img,
.reading audio,
.reading video {
  margin: 0;
  margin-inline: auto;
  max-inline-size: 100%;
  border-radius: var(--border-radius);
  border: var(--border);
}
.reading {
  /* Mermaid diagrams */
}
.reading .mermaid {
  margin-block-end: var(--space);
  margin-inline: auto;
  padding: var(--space);
}
.reading p img {
  max-inline-size: 100%;
}

/* Animation keyframes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(0.5rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
/* Typography Design Tokens - Using logical properties */
:root {
  /* Font stacks */
  --font-text: system-ui, -apple-system, sans-serif;
  --font-header: system-ui, -apple-system, sans-serif;
  --font-monospace:
      ui-monospace, "SF Mono", Monaco, "Cascadia Code", "Roboto Mono",
      Consolas, "Courier New", monospace;
  /* Font features & variations */
  --font-feature: "liga", "dlig", "kern", "calt", "ss01", "ss12";
  --font-variation: "";
  --font-header-feature:
      "dlig", "case", "kern", "cv01", "cv02", "cv03", "cv04", "cv05", "cv06",
      "cv09", "cv10", "cv11", "cv12", "cv13";
  --font-header-variation: "";
  --font-monospace-feature:
      "liga", "dlig", "kern", "calt", "ss01", "ss12", "ss15";
  --font-monospace-variation: "";
  /* Font properties */
  --font-weight: 400;
  --bold-weight: 600;
  --font-letter-spacing: normal;
  --font-header-letter-spacing: -0.065em;
  --font-header-line-height: 0.75em;
  --font-header-weight: 900;
  /* Interface font tokens */
  --font-interface: var(--font-text);
  --font-interface-feature: var(--font-feature);
  --font-interface-variation: var(--font-variation);
  /* Calculated typography tokens */
  --line-height: calc(var(--font-size) * var(--font-density));
  /* Heading weight scale */
  --font-weight-h1: var(--font-header-weight);
  --font-weight-h2: max(
      calc(var(--font-header-weight) * 0.95),
      var(--font-weight)
  );
  --font-weight-h3: max(
      calc(var(--font-header-weight) * 0.9),
      var(--font-weight)
  );
  --font-weight-h4: max(
      calc(var(--font-header-weight) * 0.85),
      var(--font-weight)
  );
  --font-weight-h5: max(
      calc(var(--font-header-weight) * 0.8),
      var(--font-weight)
  );
  --font-weight-h6: max(
      calc(var(--font-header-weight) * 0.75),
      var(--font-weight)
  );
  /* List styling */
  --list-indentation: var(--space);
}

html.dark {
  /*--font-density: 1.5;*/
  --font-weight: 400;
  --font-letter-spacing: 0.001em;
}

html {
  scroll-behavior: smooth;
  font-family: var(--font-text), system-ui, sans-serif;
  font-size: var(--scale);
  font-weight: var(--font-weight);
  letter-spacing: var(--font-letter-spacing);
  line-height: var(--line-height);
  text-rendering: optimizeLegibility; /* kerning & ligatures */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-optical-sizing: auto;
  font-feature-settings: var(--font-feature);
  font-variant-ligatures: normal;
  font-variation-settings: var(--font-variation);
  text-wrap: pretty;
  widows: 2;
  orphans: 2;
}

body,
body.rhythm {
  margin: 0;
  padding: var(--space);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-header), system-ui, sans-serif;
  color: var(--color-header);
  text-wrap: balance;
  font-variant-ligatures: normal;
  font-feature-settings: var(--font-header-feature);
  font-variation-settings: var(--font-header-variation);
  font-style: var(--font-header-style, normal);
  line-height: var(--font-header-line-height);
  letter-spacing: var(--font-header-letter-spacing);
  white-space: normal;
  overflow-wrap: break-word;
  word-break: keep-all;
  hyphens: none;
  max-width: 100%;
  box-sizing: border-box;
}

/*
svg {
    fill: var(--color-header);
    stroke: var(--color-header);
}
*/
h1 {
  font-weight: var(--font-weight-h1);
  font-size: clamp(var(--scale-xxl), 10vw, var(--scale-xxxl));
}

h2 {
  font-weight: var(--font-weight-h2);
  font-size: clamp(var(--scale-xl), 7vw, var(--scale-xxl));
}

h3 {
  font-weight: var(--font-weight-h3);
  font-size: var(--scale-xl);
}

h4 {
  font-weight: var(--font-weight-h4);
  font-size: var(--scale-l);
  line-height: var(--line-height);
}

h5 {
  font-weight: var(--font-weight-h5);
  font-size: var(--scale-l);
  line-height: var(--line-height);
}

h6 {
  font-weight: var(--font-weight-h6);
  font-size: var(--scale-l);
  line-height: var(--line-height);
}

.small {
  font-size: var(--scale-s);
}

.smaller {
  font-size: var(--scale-xs);
}

.compact {
  line-height: var(--font-density-s);
}

.font-ui {
  font-family: var(--font-interface), system-ui, sans-serif;
  font-variation-settings: var(--font-interface-variation);
  font-feature-settings: var(--font-interface-feature);
}

pre,
code,
tt,
.code,
.mono,
.monospace,
.font-mono {
  font-family: var(--font-monospace), Inconsolata, Menlo, monospace;
  font-feature-settings: var(--font-monospace-feature);
  font-variation-settings: var(--font-monospace-variation);
}

b,
strong,
.bold {
  font-weight: var(--bold-weight);
}

:is(h1, h2, h3, h4, h5, h6) :is(b, strong, .bold) {
  font-weight: inherit;
}

/* Links inherit color by default; article overrides already exist */
a,
a:visited {
  color: inherit;
}

/* Button styles for consistent appearance */
button {
  font-family: var(--font-interface), system-ui, sans-serif;
  font-size: var(--scale-s);
  font-weight: var(--font-weight);
  line-height: var(--font-density);
  padding: var(--space-xs) var(--space-s);
  border: none;
  border-radius: var(--border-radius);
  background: var(--color-accent);
  color: var(--color-background);
  cursor: pointer;
  transition: opacity 0.2s ease;
}
button:hover {
  opacity: 0.9;
}
button:active {
  opacity: 0.8;
}
button:focus-visible {
  outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
}

/* Form element styles for consistency */
input,
select,
textarea {
  font-family: var(--font-interface), system-ui, sans-serif;
  font-size: var(--scale-s);
  font-weight: var(--font-weight);
  line-height: var(--font-density);
  padding: var(--space-xs) var(--space-s);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  background: var(--color-background-secondary);
  color: var(--color-foreground);
}
input:focus,
select:focus,
textarea:focus {
  outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
  border-color: color-mix(in srgb, var(--color-accent) 50%, transparent);
  background-color: color-mix(in srgb, var(--color-accent) 2.5%, var(--color-background-secondary));
}
input::placeholder,
select::placeholder,
textarea::placeholder {
  color: var(--color-muted);
  opacity: 0.7;
}

textarea {
  resize: vertical;
  min-height: calc(var(--space-l) * 3);
}

/* =========================== */
/* RHYTHM ELEMENT TYPOGRAPHY   */
/* =========================== */
/* Typography properties for elements within rhythm containers */
.rhythm {
  /* List styling */
}
.rhythm li {
  line-height: 1.4;
}
.rhythm ul > li::marker {
  content: "â€¢";
  text-align: center;
  opacity: 0.6;
}
.rhythm ol > li::marker {
  content: counter(ol-counter) ". ";
  counter-increment: ol-counter;
  text-align: right;
  opacity: 0.6;
  font-variant-numeric: tabular-nums;
}
.rhythm {
  /* Blockquote typography */
}
.rhythm blockquote {
  font-style: italic;
  font-size: var(--scale-s);
}
.rhythm {
  /* Code block typography */
}
.rhythm pre,
.rhythm code {
  font-family: var(--font-monospace, monospace);
  font-size: var(--scale-s);
  line-height: var(--font-density-s);
  overflow-x: auto;
}
.rhythm {
  /* Form typography */
}
.rhythm legend {
  font-weight: var(--bold-weight, bold);
}
.rhythm label {
  font-weight: var(--bold-weight, bold);
}
.rhythm {
  /* Figure caption typography */
}
.rhythm figcaption {
  font-size: var(--scale-s);
  font-style: italic;
  text-align: center;
}
.rhythm {
  /* Table typography */
}
.rhythm table {
  border-collapse: collapse;
  font-variant-numeric: tabular-nums;
}
.rhythm th,
.rhythm td {
  text-align: left;
}
.rhythm th {
  font-weight: var(--bold-weight, bold);
}
.rhythm caption {
  font-weight: var(--bold-weight, bold);
  text-align: left;
}
.rhythm {
  /* Callout typography */
}
.rhythm .callout-title {
  font-weight: var(--bold-weight, bold);
}

/* Enhanced Bulletproof Rhythm System - Margin Collapse Safe */
/* Rhythm tokens are now consolidated in standard-00-token.scss */
/* ===== Harmony Base (containers and resets) ===== */
:where(*, *::before, *::after) {
  box-sizing: border-box;
}

/* Containers usable across pages */
.container {
  padding-inline: var(--container-standard);
}

.container-full {
  margin-inline: auto;
  padding-inline: var(--container-standard);
}

/* Universal reset for rhythm-managed elements
:where(
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p,
    ul,
    ol,
    dl,
    blockquote,
    pre,
    table,
    figure,
    form,
    fieldset,
    div,
    section,
    article,
    aside,
    header,
    footer,
    nav,
    input,
    textarea,
    select,
    button,
    label,
    legend
) {
    margin: 0;
}
*/
/* Logical unsets for first/last child when containers apply margins */
:where(:first-child) {
  margin-block-start: unset;
}

:where(:last-child) {
  margin-block-end: unset;
}

/* ===== BULLETPROOF RHYTHM SYSTEM ===== */
.rhythm {
  /* Prevent nested rhythm from double-spacing - token defined in tokens file */
  /* Debug mode visualization - moved to debug section */
  /* =========================== */
  /* MARGIN-COLLAPSE-SAFE CORE   */
  /* =========================== */
  /* Default: Use margins with collapse prevention (allows typographic nuances) */
  /*display: block;*/
  /* Create new block formatting context to prevent margin collapse */
  contain: layout style;
  /* Alternative: Use padding on container to prevent collapse */
  padding-block-start: 1px;
  padding-block-end: 1px;
  margin-block-start: -1px;
  margin-block-end: -1px;
}
.rhythm > * {
  margin-block: 0;
  margin-block-end: calc(var(--space-block) * var(--rhythm-multiplier));
}
.rhythm > :last-child {
  margin-block-end: 0;
}
.rhythm > :first-child {
  margin-block-start: 0;
}

/* =========================== */
/* NESTING PROTECTION          */
/* =========================== */
/* Nested rhythm containers don't double-space */
/* Apply to both explicit rhythm classes and semantic elements */
/*
.rhythm .rhythm,
.rhythm section,
.rhythm article,
.rhythm main {
    --marge-active: 0;
    contain: unset;
    padding-block: 0;
    margin-block: 0;
}
*/
/* =========================== */
/* TYPOGRAPHIC NUANCES         */
/* =========================== */
.rhythm {
  /* Enhanced spacing relationships for typography */
}
.rhythm p {
  margin-block-start: 0;
}
.rhythm h1 {
  margin: var(--space-xxxl) 0 var(--space-l) 0;
}
.rhythm h2 {
  margin: var(--space-xxl) 0 var(--space-l) 0;
}
.rhythm h3 {
  margin: var(--space-xl) 0 var(--space-l) 0;
}
.rhythm h4 {
  margin: var(--space-l) 0 var(--space) 0;
}
.rhythm h5 {
  margin: var(--space) 0 var(--space-s) 0;
}
.rhythm h6 {
  margin: var(--space) 0 var(--space-xs) 0;
}
.rhythm hr {
  margin-block-start: var(--space-xxl);
  margin-block-end: var(--space-l);
}
.rhythm {
  /* Heading after heading gets reduced spacing */
}
.rhythm h1 + h2,
.rhythm h2 + h3,
.rhythm h3 + h4,
.rhythm h4 + h5,
.rhythm h5 + h6 {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier));
}
.rhythm {
  /* Lists after headings get normal spacing */
}
.rhythm h1 + ul,
.rhythm h1 + ol,
.rhythm h2 + ul,
.rhythm h2 + ol,
.rhythm h3 + ul,
.rhythm h3 + ol {
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier));
}
.rhythm {
  /* Blockquotes get more generous spacing */
}
.rhythm blockquote {
  margin-block-start: calc((var(--space-block-special) - var(--space)) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-block-special) * var(--rhythm-multiplier));
  margin-inline-start: calc(var(--space-block-special) * var(--rhythm-multiplier));
  margin-inline-end: calc(var(--space-block-special) * var(--rhythm-multiplier));
}
.rhythm {
  /* Pre/code blocks need breathing room */
}
.rhythm pre {
  margin-block-start: calc((var(--space-block-special) - var(--space)) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-block-special) * var(--rhythm-multiplier));
}
.rhythm {
  /* Figure spacing for visual hierarchy */
}
.rhythm figure {
  margin-block-start: calc((var(--space-block-special) - var(--space)) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-block-special) * var(--rhythm-multiplier));
}
.rhythm {
  /* Paragraphs with images get special block spacing */
}
.rhythm p:has(img) {
  margin-block-start: calc((var(--space-block-special) - var(--space)) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-block-special) * var(--rhythm-multiplier));
}
.rhythm p:has(img) + p:has(img) {
  --margin-to-remove: calc(
      (var(--space-block-special) * var(--rhythm-multiplier)) * -1
  );
  margin-block-start: calc(var(--margin-to-remove) + var(--space-gap));
  margin-block-end: calc(var(--space-block-special) * var(--rhythm-multiplier));
}
.rhythm {
  /* Callouts get special block spacing */
}
.rhythm .callout {
  margin-block-start: calc((var(--space-block-special) - var(--space)) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-block-special) * var(--rhythm-multiplier));
}
.rhythm {
  /* Reset first-child spacing for special blocks */
}
.rhythm blockquote:first-child,
.rhythm pre:first-child,
.rhythm figure:first-child,
.rhythm fieldset:first-child,
.rhythm p:has(img):first-child,
.rhythm .callout:first-child {
  margin-block-start: 0;
}
.rhythm {
  /* Form elements get consistent but nuanced spacing */
  /* Form field groups - spacing only */
}
.rhythm fieldset {
  margin-block-start: calc(var(--space-block-special) - var(--space));
  margin-block-end: var(--space-block-special);
}
.rhythm {
  /* =========================== */
  /* TYPOGRAPHY ELEMENTS         */
  /* =========================== */
  /* Typography-specific spacing adjustments */
  /* =========================== */
  /* CONTENT ELEMENTS            */
  /* =========================== */
  /* Lists */
}
.rhythm ul,
.rhythm ol {
  padding-inline-start: var(--space-l);
  list-style-position: outside;
}
.rhythm {
  /* Nested lists */
}
.rhythm li > ul,
.rhythm li > ol {
  padding-inline-start: var(--space);
}
.rhythm {
  /* List items spacing only */
}
.rhythm li {
  margin: 0;
}
.rhythm {
  /* List marker spacing only */
}
.rhythm ul > li::marker {
  display: inline-block;
  width: var(--space);
  margin-inline-start: var(--space);
}
.rhythm ol {
  counter-reset: ol-counter;
}
.rhythm ol > li::marker {
  display: inline-block;
  width: var(--space);
  margin-inline-start: var(--space);
}
.rhythm {
  /* Blockquotes - spacing only */
}
.rhythm blockquote {
  padding-inline-start: var(--space-l);
}
.rhythm {
  /* Code blocks - spacing only */
}
.rhythm pre {
  padding: calc(var(--space));
}
.rhythm {
  /* Horizontal rules - spacing only */
}
.rhythm hr {
  margin-inline: calc(var(--space-l) * var(--rhythm-multiplier));
}
.rhythm {
  /* =========================== */
  /* FORMS AND INTERACTIVE       */
  /* =========================== */
  /* Form containers - avoid nested grids */
}
.rhythm form:not(.grid *) {
  display: grid;
  gap: calc(var(--space-s) * var(--rhythm-multiplier));
}
.rhythm {
  /* Forms inside grids use flex layout to avoid nesting issues */
}
.rhythm .grid form {
  display: flex;
  flex-direction: column;
  gap: calc(var(--space-s) * var(--rhythm-multiplier));
}
.rhythm {
  /* Form field groups - spacing only */
}
.rhythm fieldset {
  padding: calc(var(--space-s) * var(--rhythm-multiplier));
  display: grid;
  gap: calc(var(--space-xs) * var(--rhythm-multiplier));
}
.rhythm legend {
  padding-inline: calc(var(--space-xs) * var(--rhythm-multiplier));
}
.rhythm {
  /* Form inputs */
}
.rhythm input,
.rhythm textarea,
.rhythm select {
  margin: 0;
}
.rhythm {
  /* Labels - spacing only */
}
.rhythm label {
  margin: 0;
}
.rhythm {
  /* Label + input pairs */
}
.rhythm label:has(+ input),
.rhythm label:has(+ textarea),
.rhythm label:has(+ select) {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier));
}
.rhythm {
  /* Checkbox/radio with labels */
}
.rhythm input[type=checkbox],
.rhythm input[type=radio] {
  margin-inline-end: calc(var(--space-xs) * var(--rhythm-multiplier));
}
.rhythm {
  /* Button groups */
}
.rhythm .button-group {
  display: flex;
  gap: calc(var(--space-s) * var(--rhythm-multiplier));
  flex-wrap: wrap;
}
.rhythm {
  /* =========================== */
  /* MEDIA ELEMENTS              */
  /* =========================== */
  /* Images, videos, etc. */
}
.rhythm img,
.rhythm video,
.rhythm audio,
.rhythm iframe {
  max-width: 100%;
  height: auto;
}
.rhythm {
  /* Figures */
}
.rhythm figure {
  display: grid;
  gap: calc(var(--space-xs) * var(--rhythm-multiplier));
}
.rhythm figcaption {
  /* Spacing handled by rhythm system */
}
.rhythm {
  /* =========================== */
  /* TABLES                      */
  /* =========================== */
}
.rhythm table {
  width: 100%;
}
.rhythm th,
.rhythm td {
  padding: calc(var(--space-xs) * var(--rhythm-multiplier)) calc(var(--space-s) * var(--rhythm-multiplier));
}
.rhythm th {
  /* Typography and colors handled elsewhere */
}
.rhythm caption {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier));
}
.rhythm {
  /* =========================== */
  /* COMPONENTS & CUSTOM         */
  /* =========================== */
  /* Callouts and special components - spacing only */
}
.rhythm .callout {
  padding: calc(var(--space) * var(--rhythm-multiplier));
  display: grid;
  gap: calc(var(--space-s) * var(--rhythm-multiplier));
}
.rhythm .callout-title {
  margin: 0;
}
.rhythm .callout-content {
  margin: 0;
}

/* Common layout containers inherit rhythm to cascade deeper */
.box > *,
.grid > .col-1 > *,
.grid > .col-2 > *,
.grid > .col-3 > *,
.grid > .col-4 > *,
.grid > .col-5 > *,
.grid > .col-6 > *,
.grid > .col-7 > *,
.grid > .col-8 > *,
.grid > .col-9 > *,
.grid > .col-10 > *,
.grid > .col-11 > *,
.grid > .col-12 > *,
.grid > .col-half > *,
.grid > .col-third > *,
.grid > .col-two3 > *,
.grid > .col-quarter > *,
.grid > .col-full > * {
  margin-block: 0;
  margin-block-end: calc(var(--space-block) * var(--rhythm-multiplier));
}
.box > :last-child,
.grid > .col-1 > :last-child,
.grid > .col-2 > :last-child,
.grid > .col-3 > :last-child,
.grid > .col-4 > :last-child,
.grid > .col-5 > :last-child,
.grid > .col-6 > :last-child,
.grid > .col-7 > :last-child,
.grid > .col-8 > :last-child,
.grid > .col-9 > :last-child,
.grid > .col-10 > :last-child,
.grid > .col-11 > :last-child,
.grid > .col-12 > :last-child,
.grid > .col-half > :last-child,
.grid > .col-third > :last-child,
.grid > .col-two3 > :last-child,
.grid > .col-quarter > :last-child,
.grid > .col-full > :last-child {
  margin-block-end: 0;
}
.box > :first-child,
.grid > .col-1 > :first-child,
.grid > .col-2 > :first-child,
.grid > .col-3 > :first-child,
.grid > .col-4 > :first-child,
.grid > .col-5 > :first-child,
.grid > .col-6 > :first-child,
.grid > .col-7 > :first-child,
.grid > .col-8 > :first-child,
.grid > .col-9 > :first-child,
.grid > .col-10 > :first-child,
.grid > .col-11 > :first-child,
.grid > .col-12 > :first-child,
.grid > .col-half > :first-child,
.grid > .col-third > :first-child,
.grid > .col-two3 > :first-child,
.grid > .col-quarter > :first-child,
.grid > .col-full > :first-child {
  margin-block-start: 0;
}

/* =========================== */
/* UTILITY CLASSES            */
/* =========================== */
/* Spacing override utilities */
.rhythm-tight {
  --rhythm-multiplier: 0.75;
}

.rhythm-loose {
  --rhythm-multiplier: 1.5;
}

.rhythm-xl {
  --rhythm-multiplier: 2;
}

/* Individual element overrides */
.no-rhythm {
  margin: 0 !important;
}

.no-block-start {
  margin-block-start: 0 !important;
}

.no-block-end {
  margin-block-end: 0 !important;
}

.stick-next {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier)) !important;
}

/* =========================== */
/* PERFORMANCE OPTIMIZATIONS  */
/* =========================== */
/* Reduce repaints and reflows */
.rhythm {
  /* Use GPU acceleration for transforms if needed */
  /*transform: translateZ(0); */
  /* Optimize for animations */
  /*will-change: auto; */
}

/* =========================== */
/* ACCESSIBILITY               */
/* =========================== */
/* Ensure rhythm doesn't interfere with screen readers */
.rhythm:focus-within {
  /* Maintain focus visibility */
}

/* Respect user motion preferences */
@media (prefers-reduced-motion: reduce) {
  .rhythm {
    transition: none;
  }
}
/* =========================== */
/* LEGACY SUPPORT             */
/* =========================== */
/* Fallback for browsers without CSS Grid support */
@supports not (display: grid) {
  .rhythm {
    display: block;
  }
  .rhythm > * {
    margin-block-end: calc(var(--space-block) * var(--rhythm-multiplier));
  }
  .rhythm > :last-child {
    margin-block-end: 0;
  }
}
/* Modern Color System - Automatic Light/Dark Theme with System Preference Detection */
:root {
  /* Tell browser we support both color schemes */
  color-scheme: light dark;
  /* ===== LIGHT MODE PALETTE ===== */
  /* Natural, paper-like, analog-inspired colors */
  --color-light-background: white;
  --color-light-foreground: rgba(0, 0, 0, 0.87);
  --color-light-surface: rgba(0, 0, 0, 0.02);
  --color-light-red: #b14c42; /* dusty red clay */
  --color-light-orange: #d78a5a; /* trail-worn orange */
  --color-light-yellow: #c8a840; /* parchment mustard */
  --color-light-green: #5e9d80; /* sage green */
  --color-light-cyan: #6ba4b6; /* glacier teal */
  --color-light-blue: #4f81a4; /* faded blueprint */
  --color-light-purple: #7a6c91; /* dusk lavender */
  --color-light-pink: #b97aa0; /* vintage mauve rose */
  --color-light-accent: var(--color-light-yellow);
  --color-light-success: var(--color-light-green);
  --color-light-warning: var(--color-light-orange);
  --color-light-error: var(--color-light-red);
  --color-light-info: var(--color-light-blue);
  /* ===== DARK MODE PALETTE ===== */
  /* Soft-glow, night-usable, retro tech inspired */
  --color-dark-background: #0f0f0f;
  --color-dark-foreground: rgba(255, 255, 255, 0.87);
  --color-dark-surface: rgba(255, 255, 255, 0.05);
  --color-dark-red: #db6057; /* ember red */
  --color-dark-orange: #e58f5c; /* lantern orange */
  --color-dark-yellow: #dcb757; /* candlelight gold */
  --color-dark-green: #74ba98; /* forest mint glow */
  --color-dark-cyan: #7db9c8; /* creek frost */
  --color-dark-blue: #6d96b8; /* twilight blueprint */
  --color-dark-purple: #a18db6; /* smoky violet dusk */
  --color-dark-pink: #d49ab8; /* faded polaroid blush */
  --color-dark-accent: var(--color-dark-yellow);
  --color-dark-success: var(--color-dark-green);
  --color-dark-warning: var(--color-dark-orange);
  --color-dark-error: var(--color-dark-red);
  --color-dark-info: var(--color-dark-blue);
  /* ===== SEMANTIC COLOR TOKENS (Default to Light) ===== */
  --color-background: var(--color-light-background);
  --color-foreground: var(--color-light-foreground);
  --color-surface: var(--color-light-surface);
  --color-red: var(--color-light-red);
  --color-orange: var(--color-light-orange);
  --color-yellow: var(--color-light-yellow);
  --color-green: var(--color-light-green);
  --color-cyan: var(--color-light-cyan);
  --color-blue: var(--color-light-blue);
  --color-purple: var(--color-light-purple);
  --color-pink: var(--color-light-pink);
  --color-accent: var(--color-light-accent);
  --color-success: var(--color-light-success);
  --color-warning: var(--color-light-warning);
  --color-error: var(--color-light-error);
  --color-info: var(--color-light-info);
  /* ===== COMPUTED SEMANTIC COLORS ===== */
  --color-muted: color-mix(
      in srgb,
      var(--color-foreground) 60%,
      var(--color-background)
  );
  --color-subtle: color-mix(
      in srgb,
      var(--color-foreground) 40%,
      var(--color-background)
  );
  --color-border: color-mix(
      in srgb,
      var(--color-foreground) 12%,
      var(--color-background)
  );
  --color-divider: color-mix(
      in srgb,
      var(--color-foreground) 8%,
      var(--color-background)
  );
  --color-background-secondary: color-mix(
      in srgb,
      var(--color-foreground) 3%,
      var(--color-background)
  );
  --color-background-tertiary: color-mix(
      in srgb,
      var(--color-foreground) 6%,
      var(--color-background)
  );
  /* Interactive states */
  --color-hover: color-mix(
      in srgb,
      var(--color-accent) 10%,
      var(--color-background)
  );
  --color-active: color-mix(
      in srgb,
      var(--color-accent) 20%,
      var(--color-background)
  );
  /* ===== SHADOWS AND EFFECTS ===== */
  --shadow-color: color-mix(
      in srgb,
      var(--color-foreground) 15%,
      transparent
  );
  --shadow: 0 1px 3px var(--shadow-color);
  --shadow-lg: 0 4px 12px var(--shadow-color);
  --shadow-xl: 0 8px 25px var(--shadow-color);
  /* ===== DESIGN TOKENS ===== */
  --border: 1px solid var(--color-border);
  --border-accent: 2px solid var(--color-accent);
  /* Theme transition for smooth switching */
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

/* ===== AUTOMATIC DARK MODE (System Preference) ===== */
@media (prefers-color-scheme: dark) {
  :root:not(.light) {
    /* Override semantic tokens to use dark palette */
    --color-background: var(--color-dark-background);
    --color-foreground: var(--color-dark-foreground);
    --color-surface: var(--color-dark-surface);
    --color-red: var(--color-dark-red);
    --color-orange: var(--color-dark-orange);
    --color-yellow: var(--color-dark-yellow);
    --color-green: var(--color-dark-green);
    --color-cyan: var(--color-dark-cyan);
    --color-blue: var(--color-dark-blue);
    --color-purple: var(--color-dark-purple);
    --color-pink: var(--color-dark-pink);
    --color-accent: var(--color-dark-accent);
    --color-success: var(--color-dark-success);
    --color-warning: var(--color-dark-warning);
    --color-error: var(--color-dark-error);
    --color-info: var(--color-dark-info);
    /* Adjusted computed colors for dark mode */
    --color-muted: color-mix(
        in srgb,
        var(--color-foreground) 65%,
        var(--color-background)
    );
    --color-subtle: color-mix(
        in srgb,
        var(--color-foreground) 45%,
        var(--color-background)
    );
    --color-border: color-mix(
        in srgb,
        var(--color-foreground) 10%,
        var(--color-background)
    );
    --color-divider: color-mix(
        in srgb,
        var(--color-foreground) 12%,
        var(--color-background)
    );
    --color-background-secondary: color-mix(
        in srgb,
        var(--color-foreground) 5%,
        var(--color-background)
    );
    --color-background-tertiary: color-mix(
        in srgb,
        var(--color-foreground) 8%,
        var(--color-background)
    );
    /* Dark mode shadows */
    --shadow-color: color-mix(in srgb, #000 40%, transparent);
    --shadow: 0 2px 4px var(--shadow-color);
    --shadow-lg: 0 8px 16px var(--shadow-color);
    --shadow-xl: 0 12px 32px var(--shadow-color);
  }
}
/* ===== MANUAL THEME OVERRIDES ===== */
/* Force light mode regardless of system preference */
.light {
  --color-background: var(--color-light-background);
  --color-foreground: var(--color-light-foreground);
  --color-surface: var(--color-light-surface);
  --color-red: var(--color-light-red);
  --color-orange: var(--color-light-orange);
  --color-yellow: var(--color-light-yellow);
  --color-green: var(--color-light-green);
  --color-cyan: var(--color-light-cyan);
  --color-blue: var(--color-light-blue);
  --color-purple: var(--color-light-purple);
  --color-pink: var(--color-light-pink);
  --color-accent: var(--color-light-accent);
  --color-success: var(--color-light-success);
  --color-warning: var(--color-light-warning);
  --color-error: var(--color-light-error);
  --color-info: var(--color-light-info);
  /* Light mode computed colors */
  --color-muted: color-mix(
      in srgb,
      var(--color-foreground) 60%,
      var(--color-background)
  );
  --color-subtle: color-mix(
      in srgb,
      var(--color-foreground) 40%,
      var(--color-background)
  );
  --color-border: color-mix(
      in srgb,
      var(--color-foreground) 12%,
      var(--color-background)
  );
  --color-divider: color-mix(
      in srgb,
      var(--color-foreground) 8%,
      var(--color-background)
  );
  --color-background-secondary: color-mix(
      in srgb,
      var(--color-foreground) 3%,
      var(--color-background)
  );
  --color-background-tertiary: color-mix(
      in srgb,
      var(--color-foreground) 6%,
      var(--color-background)
  );
  /* Light mode shadows */
  --shadow-color: color-mix(
      in srgb,
      var(--color-foreground) 15%,
      transparent
  );
  --shadow: 0 1px 3px var(--shadow-color);
  --shadow-lg: 0 4px 12px var(--shadow-color);
  --shadow-xl: 0 8px 25px var(--shadow-color);
}

/* Force dark mode regardless of system preference */
.dark {
  --color-background: var(--color-dark-background);
  --color-foreground: var(--color-dark-foreground);
  --color-surface: var(--color-dark-surface);
  --color-red: var(--color-dark-red);
  --color-orange: var(--color-dark-orange);
  --color-yellow: var(--color-dark-yellow);
  --color-green: var(--color-dark-green);
  --color-cyan: var(--color-dark-cyan);
  --color-blue: var(--color-dark-blue);
  --color-purple: var(--color-dark-purple);
  --color-pink: var(--color-dark-pink);
  --color-accent: var(--color-dark-accent);
  --color-success: var(--color-dark-success);
  --color-warning: var(--color-dark-warning);
  --color-error: var(--color-dark-error);
  --color-info: var(--color-dark-info);
  /* Dark mode computed colors */
  --color-muted: color-mix(
      in srgb,
      var(--color-foreground) 65%,
      var(--color-background)
  );
  --color-subtle: color-mix(
      in srgb,
      var(--color-foreground) 45%,
      var(--color-background)
  );
  --color-border: color-mix(
      in srgb,
      var(--color-foreground) 18%,
      var(--color-background)
  );
  --color-divider: color-mix(
      in srgb,
      var(--color-foreground) 12%,
      var(--color-background)
  );
  --color-background-secondary: color-mix(
      in srgb,
      var(--color-foreground) 5%,
      var(--color-background)
  );
  --color-background-tertiary: color-mix(
      in srgb,
      var(--color-foreground) 8%,
      var(--color-background)
  );
  /* Dark mode shadows */
  --shadow-color: color-mix(in srgb, #000 40%, transparent);
  --shadow: 0 2px 4px var(--shadow-color);
  --shadow-lg: 0 8px 16px var(--shadow-color);
  --shadow-xl: 0 12px 32px var(--shadow-color);
}

/* ===== ACCESSIBILITY SUPPORT ===== */
/* High contrast mode support */
@media (prefers-contrast: high) {
  :root {
    --color-border: var(--color-foreground);
    --color-muted: var(--color-foreground);
    --color-subtle: var(--color-foreground);
  }
}
/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  :root {
    transition: none;
  }
  * {
    transition: none !important;
    animation: none !important;
  }
}
/* Windows High Contrast mode */
@media (forced-colors: active) {
  :root {
    --color-background: Canvas;
    --color-foreground: CanvasText;
    --color-accent: Highlight;
    --color-border: CanvasText;
    --color-muted: GrayText;
  }
}
/* ===== BASE HTML STYLING ===== */
html {
  color: var(--color-foreground);
  background: var(--color-background);
  /* Smooth theme transitions */
  transition: background-color 0.2s ease, color 0.2s ease;
}

body {
  background: var(--color-background);
  color: var(--color-foreground);
}

/* ===== SEMANTIC UTILITY CLASSES ===== */
.text-muted {
  color: var(--color-muted);
}

.text-subtle {
  color: var(--color-subtle);
}

.text-accent {
  color: var(--color-accent);
}

.text-success {
  color: var(--color-success);
}

.text-warning {
  color: var(--color-warning);
}

.text-error {
  color: var(--color-error);
}

.text-info {
  color: var(--color-info);
}

.bg-surface {
  background: var(--color-surface);
}

.bg-secondary {
  background: var(--color-background-secondary);
}

.bg-tertiary {
  background: var(--color-background-tertiary);
}

.border-default {
  border: var(--border);
}

.border-accent {
  border: var(--border-accent);
}

/* ===== INTERACTIVE ELEMENTS ===== */
/* Links */
a,
a:visited {
  color: inherit;
  text-decoration: underline;
  text-decoration-thickness: 0.1em;
  text-underline-offset: 0.15em;
  text-decoration-color: var(--color-border);
  transition: color 0.2s ease, text-decoration-color 0.2s ease;
}

a:hover,
a:focus {
  color: var(--color-accent);
  text-decoration-color: var(--color-accent);
}

a:focus-visible {
  outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
  border-radius: 2px;
}

/* Form elements inherit theme */
input,
textarea,
select,
button {
  color: inherit;
  background: var(--color-background-secondary);
  border: var(--border);
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

input:focus,
textarea:focus,
select:focus {
  outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
  outline-offset: 0px;
  border-color: var(--color-accent);
}

button:hover {
  background: var(--color-hover);
}

button:active {
  background: var(--color-active);
}

/* Checkbox and radio button styling */
input[type=checkbox],
input[type=radio] {
  accent-color: var(--color-accent);
  outline: none;
}

input[type=checkbox]:checked,
input[type=radio]:checked {
  accent-color: var(--color-accent);
}

input[type=checkbox]:focus,
input[type=radio]:focus {
  outline: none;
  box-shadow: none;
}

/* Remove outlines from specific toggle elements only */
.toggle-btn:focus,
.toggle-btn:focus-visible,
[data-theme-toggle] button:focus,
[data-theme-toggle] button:focus-visible {
  outline: none;
}

/* Selection highlighting */
::selection {
  background: color-mix(in srgb, var(--color-accent) 25%, transparent);
  color: var(--color-foreground);
}

/* =========================== */
/* RHYTHM ELEMENT COLORS       */
/* =========================== */
/* Blockquote borders */
blockquote {
  border-inline-start: calc(var(--space-xxs) * var(--rhythm-multiplier)) solid var(--color-border);
}

/* Horizontal rule colors */
hr {
  height: var(--hr-thickness);
  background: var(--color-border);
  border: none;
}

/* Form field group borders */
fieldset {
  border: var(--border);
  border-radius: var(--border-radius);
}

/* Media element borders */
img,
video,
audio,
iframe {
  border-radius: var(--border-radius);
  border: var(--border);
}

/* Table colors and borders */
th,
td {
  border: var(--border);
}

th {
  background: var(--color-background-secondary);
}

/* Callout colors */
.callout {
  background: var(--color-background-secondary);
  border: var(--border);
  border-radius: var(--border-radius);
}

/* Strong and emphasis */
strong {
  color: var(--color-bold);
  font-weight: 600;
}

em {
  color: var(--color-italic);
  font-style: italic;
}

/* Horizontal rules */
hr {
  background: var(--color-divider);
  border: none;
  block-size: 1px;
}

/* Code elements */
code:not(pre code),
pre {
  background: var(--color-background-secondary);
  color: var(--color-foreground);
  border: var(--border);
  border-radius: var(--border-radius);
  box-shadow: inset var(--shadow);
}

code:not(pre code) {
  box-shadow: unset;
  padding: 0 var(--space-xxxs);
}

/* Tables */
table {
  border-collapse: collapse;
}

th,
td {
  border: var(--border);
}

th {
  background: var(--color-background-secondary);
  font-weight: 600;
}

/* Quotes */
blockquote {
  border-inline-start: 4px solid var(--color-accent);
  background: var(--color-background-secondary);
  color: var(--color-muted);
}

/* Mark highlighting */
mark {
  background: color-mix(in srgb, var(--color-yellow) 30%, var(--color-background));
  color: var(--color-foreground);
}

/* Image Styles - Works with both .reading (layout) and .rhythm (spacing) - Using logical properties */
img {
  max-inline-size: 100%;
}

.reading,
.rhythm {
  /* Basic image styling */
}
.reading * + img,
.reading img,
.reading img:first-child,
.reading img:last-child,
.rhythm * + img,
.rhythm img,
.rhythm img:first-child,
.rhythm img:last-child {
  margin: 0;
  max-inline-size: 100%;
  block-size: auto;
}
.reading img,
.rhythm img {
  max-width: 100%;
  cursor: zoom-in;
  transition: mix-blend-mode 0.2s, opacity 0.2s, filter 0.2s;
}
.reading img.fx,
.rhythm img.fx {
  border-radius: var(--border-radius);
  border: var(--border);
}
.reading img.nofx,
.rhythm img.nofx {
  border-radius: unset;
  border: unset;
  box-shadow: unset;
}
.reading img:hover,
.reading img.zoomed,
.rhythm img:hover,
.rhythm img.zoomed {
  mix-blend-mode: normal;
  filter: none;
}
.reading img:active,
.reading img.zoomed,
.rhythm img:active,
.rhythm img.zoomed {
  cursor: zoom-out;
  display: block;
  z-index: var(--z-image-zoom);
  position: fixed;
  max-height: 88vh;
  max-width: 88vw;
  max-height: calc(100vh - var(--space) * 2);
  max-width: calc(100vw - var(--space) * 2);
  object-fit: contain;
  margin: 0 auto;
  text-align: center;
  padding: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  user-select: none;
}

/* Zoom overlay backgrounds */
.reading :has(img:active)::before,
.reading :has(img.zoomed)::before,
.rhythm :has(img:active)::before,
.rhythm :has(img.zoomed)::before {
  content: "";
  position: fixed;
  inset: 0;
  background: var(--color-background);
  opacity: 0.95;
  z-index: calc(var(--z-image-zoom) - 1);
}

.md .callout,
.md pre,
.md blockquote,
.md img,
.md iframe,
.md .outset,
.md .inset {
  background: var(--color-background-secondary);
  border-radius: var(--border-radius);
  border: var(--border);
  box-shadow: var(--shadow);
}
.md pre,
.md blockquote .inset {
  box-shadow: inset var(--shadow);
}
.md blockquote {
  font-size: var(--scale-s);
  line-height: var(--font-density-s);
  padding: var(--space);
  font-style: italic;
}
.md .callout {
  line-height: var(--font-density-s);
  transition: var(--duration-superfast) var(--motion-smooth);
  padding: var(--space-xxs);
  --color-callout: var(--color-background-secondary);
  --color-border: color-mix(
      in srgb,
      var(--color-callout) 15%,
      transparent
  );
  background: color-mix(in srgb, var(--color-callout) 5%, var(--color-background-secondary));
  border-color: var(--color-border);
}
.md .callout .callout-title {
  color: color-mix(in srgb, var(--color-callout) 50%, var(--color-foreground));
  font-weight: bold;
  font-size: var(--scale-s);
  user-select: none;
  padding: var(--space-xxxs) calc(var(--space) - var(--space-xs)) var(--space-xxxs) calc(var(--space) - var(--space-xs));
}
.md .callout .callout-content {
  color: var(--color-foreground);
  background: color-mix(in srgb, var(--color-callout) 2.5%, var(--color-background));
  box-shadow: inset var(--shadow);
  font-size: var(--scale-s);
  overflow: hidden;
  border-radius: var(--border-radius);
  padding: var(--space-s) calc(var(--space) - var(--space-xs));
  margin-top: var(--space-xxs);
  margin-left: 0;
  border: var(--border);
  border-color: var(--color-border);
  text-align: left;
}
.md .callout .callout-content p:first-child {
  margin-top: 0;
}
.md .callout .callout-content ul,
.md .callout .callout-content ol {
  padding: 0 calc(var(--space) * 0.75);
}
.md .callout .callout-content pre {
  margin: var(--space) 0;
}
.md .callout .callout-content > .callout {
  margin: calc(var(--space-xs) * -1);
}
.md .callout .callout-content > .callout .callout-content {
  padding: var(--space-s);
}
.md .callout .callout-content > .callout .callout-title {
  padding-left: var(--space-s);
  padding-right: var(--space-s);
}
.md .callout .callout-title-icon {
  display: none;
}
.md .callout img {
  margin-left: 0;
  margin-right: 0;
}
.md .callout[data-callout=warning i] {
  --color-callout: var(--color-red);
}
.md .callout[data-callout=important i] {
  --color-callout: var(--color-orange);
}
.md details > summary {
  list-style: none; /* removes marker in Firefox */
}
.md details .callout-title::before {
  content: "â–¸";
  display: inline-block;
  transform: rotate(0deg);
  transition: transform 0.2s ease;
}
.md details[open] .callout-title::before {
  transform: rotate(90deg);
}
.md details .callout-title-inner {
  display: inline;
}
.md p:has(img) + .callout[data-callout=caption i] {
  padding: 0;
  background: none;
  border: none;
  margin: 0 var(--space-l);
  position: relative;
  top: calc(var(--space) * -1.75);
  box-shadow: none;
}
.md p:has(img) + .callout[data-callout=caption i] .callout-title {
  display: none;
}
.md p:has(img) + .callout[data-callout=caption i] .callout-content {
  padding: 0;
  background: none;
  border: none;
  box-shadow: none;
  line-height: 1;
  text-align: center !important;
  text-wrap: balance !important;
}
@media only screen and (max-width: 600px) {
  .md .callout,
  .md blockquote,
  .md pre {
    margin: var(--space) 0 var(--space-l) 0;
  }
  .md ul:not([start]),
  .md ol:not([start]) {
    padding: 0;
    padding-left: var(--space);
  }
}

/* Enhanced Rhythm Utilities: debugging, overrides, and advanced control - Using logical properties */
/* ===== LOGICAL SPACING UTILITIES ===== */
/* Block direction spacing utilities */
.no-margin-block-start {
  margin-block-start: 0 !important;
}

.no-margin-block-end {
  margin-block-end: 0 !important;
}

.no-margin-block {
  margin-block: 0 !important;
}

.no-padding-block-start {
  padding-block-start: 0 !important;
}

.no-padding-block-end {
  padding-block-end: 0 !important;
}

.no-padding-block {
  padding-block: 0 !important;
}

/* Inline direction spacing utilities */
.no-margin-inline-start {
  margin-inline-start: 0 !important;
}

.no-margin-inline-end {
  margin-inline-end: 0 !important;
}

.no-margin-inline {
  margin-inline: 0 !important;
}

.auto-margin-inline {
  margin-inline: auto !important;
}

.auto-margin-inline-start {
  margin-inline-start: auto !important;
}

.auto-margin-ineline-end {
  margin-inline-end: auto !important;
}

.no-padding-inline-start {
  padding-inline-start: 0 !important;
}

.no-padding-inline-end {
  padding-inline-end: 0 !important;
}

.no-padding-inline {
  padding-inline: 0 !important;
}

/* ===== CENTERING UTILITIES ===== */
/* General-purpose centered containers with max-width constraints */
.centered {
  max-width: var(--line-width-normal);
  margin-inline: auto;
}

.centered-narrow {
  max-width: var(--line-width-s);
  margin-inline: auto;
}

.centered-wide {
  max-width: var(--line-width-wide);
  margin-inline: auto;
}

.centered-xl {
  max-width: var(--line-width-xl);
  margin-inline: auto;
}

.centered-xs {
  max-width: var(--line-width-xs);
  margin-inline: auto;
}

/* Responsive centered container */
.centered-responsive {
  max-width: var(--content);
  margin-inline: auto;
  padding-inline: var(--gap);
}

/* ===== RHYTHM SCALING UTILITIES ===== */
/* Spacing exceptions using logical properties */
.no-block-start {
  margin-block-start: 0 !important;
}

.no-block-end {
  margin-block-end: 0 !important;
}

.stick-next {
  margin-block-end: var(--space-gap) !important;
}

/* Rhythm scaling utilities using logical properties */
.rhythm-micro {
  margin-block-end: calc(var(--space-xxxs) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-tiny {
  margin-block-end: calc(var(--space-xxs) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-small {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-base {
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-large {
  margin-block-end: calc(var(--space-l) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-xl {
  margin-block-end: calc(var(--space-xl) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-xxl {
  margin-block-end: calc(var(--space-xxl) * var(--rhythm-multiplier, 1)) !important;
}

/* Rhythm reset - completely removes from rhythm system */
.rhythm-reset {
  margin: 0 !important;
}

/* Text utility */
.muted {
  color: var(--color-muted);
}

/* Line-width utilities for readability - using logical properties */
.line-width-xs {
  max-inline-size: var(--line-width-xs);
  margin-inline: auto;
}

.line-width-s {
  max-inline-size: var(--line-width-s);
  margin-inline: auto;
}

.line-width-normal {
  max-inline-size: var(--line-width-normal);
  margin-inline: auto;
}

.line-width-wide {
  max-inline-size: var(--line-width-wide);
  margin-inline: auto;
}

.line-width-xl {
  max-inline-size: var(--line-width-xl);
  margin-inline: auto;
}

.line-width-full {
  max-inline-size: var(--line-width-full);
  margin-inline: auto;
}

/* ===== RHYTHM CONTENT UTILITIES ===== */
/* Force elements to participate in rhythm system */
.rhythm-include {
  margin-block-end: calc(var(--space-block) * var(--rhythm-multiplier, 1)) !important;
}

/* Exclude elements from rhythm system */
.rhythm-exclude {
  margin: 0 !important;
}
.rhythm-exclude.rhythm {
  --marge-active: 0;
  background-image: none;
}
.rhythm-exclude.rhythm > * {
  margin-block-end: 0 !important;
}

/* Special rhythm behaviors */
.rhythm-tight-group > * {
  margin-block-end: calc(var(--space-xs) * var(--marge-multiplier, 1)) !important;
}

.rhythm-loose-group > * {
  margin-block-end: calc(var(--space-l) * var(--marge-multiplier, 1)) !important;
}

/* Form-specific rhythm helpers using logical properties */
.rhythm-form-row {
  display: flex;
  gap: calc(var(--space-s) * var(--marge-multiplier, 1));
  align-items: center;
  margin-block-end: calc(var(--space) * var(--marge-multiplier, 1)) !important;
}

.rhythm-form-group {
  margin-block-end: calc(var(--space) * var(--marge-multiplier, 1)) !important;
}
.rhythm-form-group label {
  margin-block-end: calc(var(--space-xs) * var(--marge-multiplier, 1)) !important;
}
.rhythm-form-group input,
.rhythm-form-group textarea,
.rhythm-form-group select {
  margin-block-end: calc(var(--space-xs) * var(--marge-multiplier, 1)) !important;
}

/* Rhythm mode switching */
/* Alternative rhythm modes removed - margin mode is the only mode */
/* Spacing override utilities */
.rhythm-tight {
  gap: calc(var(--space-s) * var(--marge-multiplier)) !important;
}

.rhythm-loose {
  gap: calc(var(--space-l) * var(--marge-multiplier)) !important;
}

.rhythm-none {
  gap: 0 !important;
}

/* Individual element overrides */
.no-rhythm {
  margin: 0 !important;
}

.rhythm-after-tight {
  /* Add small spacing after this element */
}

.rhythm-after-loose {
  /* Add large spacing after this element */
}

/* =========================== */
/* DEBUG AND DEVELOPMENT      */
/* =========================== */
/* Debug utilities moved to rhythm and color files for proper separation of concerns */
/* =========================== */
/* RESPONSIVE TYPOGRAPHY      */
/* =========================== */
.heading-responsive {
  font-size: clamp(var(--scale-xl), 4vw, var(--scale-xxl)) !important;
}

.heading-compact {
  font-size: clamp(var(--scale-l), 3vw, var(--scale-xl)) !important;
  line-height: 1.1 !important;
}

.heading-contain {
  container-type: inline-size;
  max-inline-size: 100%;
  overflow: hidden;
}

.heading-contain h1 {
  font-size: clamp(var(--scale-l), 5cqi, var(--scale-xxl));
}

.heading-contain h2 {
  font-size: clamp(var(--scale), 4cqi, var(--scale-xl));
}

.heading-contain h3 {
  font-size: clamp(var(--scale-s), 3cqi, var(--scale-l));
}

/* =========================== */
/* ACCESSIBILITY               */
/* =========================== */
/* Ensure rhythm doesn't interfere with screen readers */
.rhythm:focus-within {
  /* Maintain focus visibility */
}

/* Respect user motion preferences */
@media (prefers-reduced-motion: reduce) {
  .rhythm {
    transition: none;
  }
}
/* =========================== */
/* LEGACY SUPPORT             */
/* =========================== */
/* Fallback for browsers without CSS Grid support */
@supports not (display: grid) {
  .rhythm {
    display: block;
  }
  .rhythm > * {
    margin-block-end: calc(var(--space-block) * var(--marge-multiplier));
  }
  .rhythm > :last-child {
    margin-block-end: 0;
  }
}
/* Fallback for logical properties */
@supports not (margin-block-end: 1rem) {
  .rhythm > * {
    margin-bottom: calc(var(--space-block) * var(--marge-multiplier));
  }
  .rhythm > :last-child {
    margin-bottom: 0;
  }
  .line-width-xs {
    max-width: var(--line-width-xs);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-s {
    max-width: var(--line-width-s);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-normal {
    max-width: var(--line-width-normal);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-wide {
    max-width: var(--line-width-wide);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-xl {
    max-width: var(--line-width-xl);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-full {
    max-width: var(--line-width-full);
    margin-left: auto;
    margin-right: auto;
  }
}

/*# sourceMappingURL=standard.css.map */
