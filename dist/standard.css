@charset "UTF-8";
/*!
 * Standard Framework - Fine-Art Typography Management
 *
 * A comprehensive framework implementing:
 * - Classical typography rules that CSS cannot handle
 * - Progressive enhancement with zero-configuration setup
 * - Multi-locale support with automatic detection
 * - Dynamic content observation
 * - Performance-optimized batch processing
 * - Image zoom with keyboard navigation
 *
 * Based on research from:
 * - The Elements of Typographic Style (Robert Bringhurst)
 * - Ellen Lupton's typography works
 * - Classical European typography conventions
 * - Swiss typography principles
 * - Modern web accessibility standards
 *
 * Philosophy: Respect classic typography rules, but readability always wins.
 *
 * @version 2.2.0
 * @license MIT
 */
/* Document
 * ========================================================================== */
/**
 * 1. Add border box sizing in all browsers (opinionated).
 * 2. Backgrounds do not repeat by default (opinionated).
 */
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  background-repeat: no-repeat; /* 2 */
}

/**
 * 1. Add text decoration inheritance in all browsers (opinionated).
 * 2. Add vertical alignment inheritance in all browsers (opinionated).
 */
::before,
::after {
  text-decoration: inherit; /* 1 */
  vertical-align: inherit; /* 2 */
}

/**
 * 1. Use the default cursor in all browsers (opinionated).
 * 2. Change the line height in all browsers (opinionated).
 * 3. Breaks words to prevent overflow in all browsers (opinionated).
 * 4. Use a 4-space tab width in all browsers (opinionated).
 * 5. Remove the grey highlight on links in iOS (opinionated).
 * 6. Prevent adjustments of font size after orientation changes in iOS.
 */
:where(:root) {
  cursor: default; /* 1 */
  line-height: 1.5; /* 2 */
  overflow-wrap: break-word; /* 3 */
  -moz-tab-size: 4; /* 4 */
  tab-size: 4; /* 4 */
  -webkit-tap-highlight-color: transparent; /* 5 */
  -webkit-text-size-adjust: 100%; /* 6 */
}

/* Sections
 * ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
:where(body) {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Edge, Firefox, and Safari.
 */
:where(h1) {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
 * ========================================================================== */
/**
 * Remove the margin on nested lists in Chrome, Edge, and Safari.
 */
:where(dl, ol, ul) :where(dl, ol, ul) {
  margin: 0;
}

/**
 * 1. Correct the inheritance of border color in Firefox.
 * 2. Add the correct box sizing in Firefox.
 */
:where(hr) {
  color: inherit; /* 1 */
  height: 0; /* 2 */
}

/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
:where(nav) :where(ol, ul) {
  list-style-type: none;
  padding: 0;
}

/**
 * Prevent VoiceOver from ignoring list semantics in Safari (opinionated).
 */
:where(nav li)::before {
  content: "​";
  float: left;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 * 3. Prevent overflow of the container in all browsers (opinionated).
 */
:where(pre) {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
  overflow: auto; /* 3 */
}

/* Text-level semantics
 * ========================================================================== */
/**
 * Add the correct text decoration in Safari.
 */
:where(abbr[title]) {
  text-decoration: underline;
  text-decoration: underline dotted;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
:where(b, strong) {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
:where(code, kbd, samp) {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
:where(small) {
  font-size: 80%;
}

/* Embedded content
 * ========================================================================== */
/*
 * Change the alignment on media elements in all browsers (opinionated).
 */
:where(audio, canvas, iframe, img, svg, video) {
  vertical-align: middle;
}

/**
 * Remove the border on iframes in all browsers (opinionated).
 */
:where(iframe) {
  border-style: none;
}

/**
 * Change the fill color to match the text color in all browsers (opinionated).
 */
:where(svg:not([fill])) {
  fill: currentColor;
}

/* Tabular data
 * ========================================================================== */
/**
 * 1. Collapse border spacing in all browsers (opinionated).
 * 2. Correct table border color inheritance in all Chrome, Edge, and Safari.
 * 3. Remove text indentation from table contents in Chrome, Edge, and Safari.
 */
:where(table) {
  border-collapse: collapse; /* 1 */
  border-color: inherit; /* 2 */
  text-indent: 0; /* 3 */
}

/* Forms
 * ========================================================================== */
/**
 * Remove the margin on controls in Safari.
 */
:where(button, input, select) {
  margin: 0;
}

/**
 * Correct the inability to style buttons in iOS and Safari.
 */
:where(button, [type=button i], [type=reset i], [type=submit i]) {
  -webkit-appearance: button;
}

/**
 * Change the inconsistent appearance in all browsers (opinionated).
 */
:where(fieldset) {
  border: 1px solid #a0a0a0;
}

/**
 * Add the correct vertical alignment in Chrome, Edge, and Firefox.
 */
:where(progress) {
  vertical-align: baseline;
}

/**
 * 1. Remove the margin in Firefox and Safari.
 * 3. Change the resize direction in all browsers (opinionated).
 */
:where(textarea) {
  margin: 0; /* 1 */
  resize: vertical; /* 3 */
}

/**
 * 1. Correct the odd appearance in Chrome, Edge, and Safari.
 * 2. Correct the outline style in Safari.
 */
:where([type=search i]) {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Safari.
 */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * Remove the inner padding in Chrome, Edge, and Safari on macOS.
 */
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style upload buttons in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
 * ========================================================================== */
/*
 * Add the correct styles in Safari.
 */
:where(dialog) {
  background-color: white;
  border: solid;
  color: black;
  height: -moz-fit-content;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: -moz-fit-content;
  width: fit-content;
}

:where(dialog:not([open])) {
  display: none;
}

/*
 * Add the correct display in Safari.
 */
:where(details > summary:first-of-type) {
  display: list-item;
}

/* Accessibility
 * ========================================================================== */
/**
 * Change the cursor on busy elements in all browsers (opinionated).
 */
:where([aria-busy=true i]) {
  cursor: progress;
}

/*
 * Change the cursor on control elements in all browsers (opinionated).
 */
:where([aria-controls]) {
  cursor: pointer;
}

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements in all browsers (opinionated).
 */
:where([aria-disabled=true i], [disabled]) {
  cursor: not-allowed;
}

/*
 * Change the display on visually hidden accessible elements
 * in all browsers (opinionated).
 */
:where([aria-hidden=false i][hidden]) {
  display: initial;
}

:where([aria-hidden=false i][hidden]:not(:focus)) {
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Special blocks with extra spacing */
/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Primitive Design Tokens - Foundation layer with logical properties */
:root {
  /* Base measurements & ratios - the foundation of everything else */
  --font-size: 1rem;
  /* Golden Ratio & Mathematical Precision */
  --ratio-golden: 1.618;
  --ratio-wholestep: 1.618;
  --ratio-silver: 1.414;
  --ratio-halfstep: 1.272; /* sqrt of golden ratio */
  --ratio-quarterstep: 1.128;
  --ratio-eighthstep: 1.062;
  /* Current ratio (configurable) */
  --font-ratio: var(--ratio-silver);
  --font-density: 1.2;
  --font-density-s: 1;
  --font-mobile-size: 1rem;
  --font-mobile-ratio: var(--ratio-halfstep);
  --rhythm-multiplier: 1;
  --rhythm-multiplier-block: 2;
  --body-padding-multiplier: 1;
  --body-mobile-padding-multiplier: 1;
  /* Modular Scale - calculated from font-ratio */
  --scale-xs: calc(var(--font-size) * pow(var(--font-ratio), -1));
  --scale-s: calc(var(--font-size) * pow(var(--font-ratio), -0.5));
  --scale: var(--font-size);
  --scale-l: calc(var(--font-size) * pow(var(--font-ratio), 1));
  --scale-xl: calc(var(--font-size) * pow(var(--font-ratio), 2));
  --scale-2xl: calc(var(--font-size) * pow(var(--font-ratio), 3));
  --scale-3xl: calc(var(--font-size) * pow(var(--font-ratio), 4));
  /* ADD: Extreme scales for display/poster typography */
  --scale-display: calc(
      var(--font-size) * pow(var(--font-ratio), 6)
  ); /* ~10rem */
  --scale-poster: calc(
      var(--font-size) * pow(var(--font-ratio), 8)
  ); /* ~16rem */
  /* ADD: Micro scales for technical labels */
  --scale-micro: calc(
      var(--font-size) * pow(var(--font-ratio), -2)
  ); /* ~0.6rem */
  --scale-nano: calc(
      var(--font-size) * pow(var(--font-ratio), -3)
  ); /* ~0.4rem */
  /* Logical Spacing Scale - based on rhythm unit */
  --space-3xs: calc(1rlh / 5);
  --space-2xs: calc(1rlh / 4);
  --space-xs: calc(1rlh / 3);
  --space-s: calc(1rlh / 2);
  --space: 1rlh; /* Base rhythm unit */
  --space-l: calc(2 * 1rlh);
  --space-xl: calc(3 * 1rlh);
  --space-2xl: calc(4 * 1rlh);
  --space-3xl: calc(5 * 1rlh);
  /* Logical border properties */
  --hr-thickness: 1px;
  --border-radius: var(--space-2xs);
  /* Z-index scale */
  --z-base: 1;
  --z-dropdown: 1000;
  --z-sticky: 1020;
  --z-fixed: 1030;
  --z-modal-backdrop: 1040;
  --z-offcanvas: 1050;
  --z-modal: 1060;
  --z-popover: 1070;
  --z-tooltip: 1080;
  --z-toast: 1090;
  --z-image-zoom: 9999;
  /* Animation scale */
  --duration-superfast: 0.15s;
  --duration-fast: 0.25s;
  --duration-normal: 0.35s;
  --duration-slow: 0.5s;
  --motion-smooth: cubic-bezier(0.4, 0, 0.2, 1);
  --motion-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Modern Color System - Automatic Light/Dark Theme with System Preference Detection */
:root {
  /* Tell browser we support both color schemes */
  color-scheme: light dark;
  /* ===== LIGHT MODE PALETTE ===== */
  /* Natural, paper-like, analog-inspired colors */
  --color-light-background: white;
  --color-light-foreground: #262626;
  --color-light-red: #b14c42; /* dusty red clay */
  --color-light-orange: #d78a5a; /* trail-worn orange */
  --color-light-yellow: #c8a840; /* parchment mustard */
  --color-light-green: #5e9d80; /* sage green */
  --color-light-cyan: #6ba4b6; /* glacier teal */
  --color-light-blue: #4f81a4; /* faded blueprint */
  --color-light-purple: #7a6c91; /* dusk lavender */
  --color-light-pink: #b97aa0; /* vintage mauve rose */
  --color-light-accent: var(--color-light-yellow);
  --color-light-success: var(--color-light-green);
  --color-light-warning: var(--color-light-orange);
  --color-light-error: var(--color-light-red);
  --color-light-info: var(--color-light-blue);
  /* ===== DARK MODE PALETTE ===== */
  /* Soft-glow, night-usable, retro tech inspired */
  --color-dark-background: #0f0f0f; /* #111 */
  --color-dark-foreground: #dbdbdb; /* #aaa */
  --color-dark-red: #db6057; /* ember red */
  --color-dark-orange: #e58f5c; /* lantern orange */
  --color-dark-yellow: #dcb757; /* candlelight gold */
  --color-dark-green: #74ba98; /* forest mint glow */
  --color-dark-cyan: #7db9c8; /* creek frost */
  --color-dark-blue: #6d96b8; /* twilight blueprint */
  --color-dark-purple: #a18db6; /* smoky violet dusk */
  --color-dark-pink: #d49ab8; /* faded polaroid blush */
  --color-dark-accent: var(--color-dark-yellow);
  --color-dark-success: var(--color-dark-green);
  --color-dark-warning: var(--color-dark-orange);
  --color-dark-error: var(--color-dark-red);
  --color-dark-info: var(--color-dark-blue);
  /* ===== SEMANTIC COLOR TOKENS (Default to Light) ===== */
  --color-background: var(--color-light-background);
  --color-foreground: var(--color-light-foreground);
  --color-header: var(--color-light-header), var(--color-foreground);
  --color-red: var(--color-light-red);
  --color-orange: var(--color-light-orange);
  --color-yellow: var(--color-light-yellow);
  --color-green: var(--color-light-green);
  --color-cyan: var(--color-light-cyan);
  --color-blue: var(--color-light-blue);
  --color-purple: var(--color-light-purple);
  --color-pink: var(--color-light-pink);
  --color-accent: var(--color-light-accent);
  --color-success: var(--color-light-success);
  --color-warning: var(--color-light-warning);
  --color-error: var(--color-light-error);
  --color-info: var(--color-light-info);
  /* ===== COMPUTED SEMANTIC COLORS ===== */
  --color-muted: color-mix(in srgb, var(--color-foreground) 60%, transparent);
  --color-subtle: color-mix(
      in srgb,
      var(--color-foreground) 40%,
      transparent
  );
  --color-border: color-mix(
      in srgb,
      var(--color-foreground) 10%,
      transparent
  );
  --color-background-secondary: color-mix(
      in srgb,
      var(--color-foreground) 3%,
      var(--color-background)
  );
  /* Interactive states */
  --color-hover: color-mix(in srgb, var(--color-accent) 35%, transparent);
  --color-active: color-mix(in srgb, var(--color-accent) 20%, transparent);
  /* ===== SHADOWS AND EFFECTS ===== */
  --shadow-color: color-mix(in srgb, var(--color-foreground) 7%, transparent);
  --shadow: 0 0 var(--space-2xs) var(--shadow-color);
  /* ===== DESIGN TOKENS ===== */
  --border: 1px solid var(--color-border);
  --border-accent: 2px solid var(--color-accent);
  /* Theme transition for smooth switching */
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

/* ===== AUTOMATIC DARK MODE (System Preference) ===== */
@media (prefers-color-scheme: dark) {
  :root {
    /* Override semantic tokens to use dark palette */
    --color-background: var(--color-dark-background);
    --color-foreground: var(--color-dark-foreground);
    --color-header: var(--color-dark-header), var(--color-foreground);
    --color-red: var(--color-dark-red);
    --color-orange: var(--color-dark-orange);
    --color-yellow: var(--color-dark-yellow);
    --color-green: var(--color-dark-green);
    --color-cyan: var(--color-dark-cyan);
    --color-blue: var(--color-dark-blue);
    --color-purple: var(--color-dark-purple);
    --color-pink: var(--color-dark-pink);
    --color-accent: var(--color-dark-accent);
    --color-success: var(--color-dark-success);
    --color-warning: var(--color-dark-warning);
    --color-error: var(--color-dark-error);
    --color-info: var(--color-dark-info);
    /* Adjusted computed colors for dark mode */
    --color-muted: color-mix(
        in srgb,
        var(--color-foreground) 65%,
        transparent
    );
    --color-subtle: color-mix(
        in srgb,
        var(--color-foreground) 45%,
        transparent
    );
    --color-border: color-mix(
        in srgb,
        var(--color-foreground) 10%,
        transparent
    );
    --color-background-secondary: color-mix(
        in srgb,
        var(--color-foreground) 5%,
        var(--color-background)
    );
    /* Dark mode shadows */
    --shadow-color: color-mix(in srgb, #000 40%, transparent);
    --shadow: 0 2px 4px var(--shadow-color);
    --shadow-l: 0 8px 16px var(--shadow-color);
    --shadow-xl: 0 12px 32px var(--shadow-color);
  }
}
/* ===== ACCESSIBILITY SUPPORT ===== */
/* High contrast mode support */
@media (prefers-contrast: high) {
  :root {
    --color-border: var(--color-foreground);
    --color-muted: var(--color-foreground);
    --color-subtle: var(--color-foreground);
  }
}
/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  :root {
    transition: none;
  }
  * {
    transition: none !important;
    animation: none !important;
  }
}
/* Windows High Contrast mode */
@media (forced-colors: active) {
  :root {
    --color-background: Canvas;
    --color-foreground: CanvasText;
    --color-accent: Highlight;
    --color-border: CanvasText;
    --color-muted: GrayText;
  }
}
/* ===== BASE HTML STYLING ===== */
html {
  color: var(--color-foreground);
  background: var(--color-background);
  /* Smooth theme transitions */
  transition: background-color 0.2s ease, color 0.2s ease;
}

body {
  background: var(--color-background);
  color: var(--color-foreground);
}

/* ===== SEMANTIC UTILITY CLASSES ===== */
.muted,
.text-muted {
  color: var(--color-muted);
}

.sublte,
.text-subtle {
  color: var(--color-subtle);
}

.text-accent {
  color: var(--color-accent);
}

.text-success {
  color: var(--color-success);
}

.text-warning {
  color: var(--color-warning);
}

.text-error {
  color: var(--color-error);
}

.text-info {
  color: var(--color-info);
}

.bg-secondary {
  background: var(--color-background-secondary);
}

.border-default {
  border: var(--border);
}

.border-accent {
  border: var(--border-accent);
}

/* ===== INTERACTIVE ELEMENTS ===== */
/* Links */
a,
a:visited {
  color: inherit;
  text-decoration: underline;
  text-decoration-thickness: 0.1em;
  text-underline-offset: 0.15em;
  text-decoration-color: var(--color-subtle);
  transition: color 0.2s ease, text-decoration-color 0.2s ease;
}

a:hover,
a:focus {
  color: var(--color-accent);
  text-decoration-color: var(--color-accent);
}

a:focus-visible {
  outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
  border-radius: 2px;
}

/* Form elements inherit theme */
input,
textarea,
select,
button {
  color: inherit;
  background: var(--color-background-secondary);
  border: var(--border);
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

input:focus,
textarea:focus,
select:focus {
  outline: 1px solid color-mix(in srgb, var(--color-accent) 35%, transparent);
  outline-offset: 0px;
  border-color: color-mix(in srgb, var(--color-accent) 35%, transparent);
  background-color: color-mix(in srgb, var(--color-accent) 5%, var(--color-background));
}

button:hover {
  background: var(--color-hover);
  border-color: color-mix(in srgb, var(--color-accent) 35%, transparent);
}

button:active {
  background: var(--color-active);
  border-color: color-mix(in srgb, var(--color-accent) 35%, transparent);
}

/* Checkbox and radio button styling */
input[type=checkbox],
input[type=radio] {
  accent-color: color-mix(in srgb, var(--color-accent) 50%, var(--color-background));
  outline: 0;
}

input[type=checkbox]:checked,
input[type=radio]:checked {
  accent-color: color-mix(in srgb, var(--color-accent) 50%, var(--color-background));
}

input[type=checkbox]:focus,
input[type=radio]:focus {
  outline: none;
  box-shadow: none;
}

/* Selection highlighting */
::selection {
  background: color-mix(in srgb, var(--color-accent) 25%, transparent);
  color: var(--color-foreground);
}

/* =========================== */
/* RHYTHM ELEMENT COLORS       */
/* =========================== */
/* Blockquote borders */
blockquote {
  border-inline-start: calc(var(--space-2xs) * var(--rhythm-multiplier)) solid var(--color-border);
}

/* Horizontal rule colors */
hr {
  height: var(--hr-thickness);
  background: var(--color-border);
  border: none;
}

hr.plain {
  background: var(--color-foreground);
}

hr.thick {
  height: calc(var(--hr-thickness) * 4);
  background: var(--color-foreground);
}

hr.accent {
  height: calc(var(--hr-thickness) * 3);
  background: var(--color-accent);
}

hr.hairline {
  height: 1px;
  opacity: 0.3;
}

/* Form field group borders */
fieldset {
  border: var(--border);
  border-radius: var(--border-radius);
}

/* Media element borders */
img,
video,
audio,
iframe {
  border-radius: var(--border-radius);
  border: var(--border);
}

/* Table colors and borders */
th,
td {
  border: var(--border);
}

th {
  background: var(--color-background-secondary);
}

/* Callout colors */
.callout {
  background: var(--color-background-secondary);
  border: var(--border);
  border-radius: var(--border-radius);
}

/* Strong and emphasis */
strong {
  color: var(--color-bold);
  font-weight: 600;
}

em {
  color: var(--color-italic);
  font-style: italic;
}

/* Horizontal rules */
hr {
  background: var(--color-border);
  border: none;
  block-size: 1px;
}

/* Code elements */
code:not(pre code),
pre {
  background: var(--color-background-secondary);
  color: var(--color-foreground);
  border: var(--border);
  border-radius: var(--border-radius);
  box-shadow: inset var(--shadow);
}

code:not(pre code) {
  box-shadow: unset;
  padding: 0 var(--space-3xs);
}

/* Tables */
table {
  border-collapse: collapse;
}

th,
td {
  border: var(--border);
}

th {
  background: var(--color-background-secondary);
  font-weight: 600;
}

/* Quotes */
blockquote {
  border-inline-start: var(--space-3xs) solid var(--color-muted);
  background: var(--color-background-secondary);
  color: var(--color-muted);
}

/* Mark highlighting */
mark {
  background: color-mix(in srgb, var(--color-yellow) 30%, var(--color-background));
  color: var(--color-foreground);
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Typography Design Tokens - Using logical properties */
:root {
  /* Font stacks */
  --font-sans: InterVariable, system-ui, -apple-system, sans-serif;
  --font-serif: "Source Serif 4", serif;
  --font-text: var(--font-sans);
  --font-header: InterVariable, system-ui, -apple-system, sans-serif;
  --font-monospace:
      "IBM Plex Mono", ui-monospace, "SF Mono", "Courier New", monospace;
  /* Font features & variations */
  --font-feature: "liga", "dlig", "kern", "calt", "zero";
  --font-variation: "";
  --font-header-feature:
      "liga", "dlig", "kern", "calt", "case", "cv06", "cv10", "cv11", "cv12",
      "cv13", "ss01";
  --font-header-variation: "";
  --font-monospace-feature: "liga", "dlig", "kern", "calt";
  --font-monospace-variation: "";
  /* Font properties */
  --font-weight: 400;
  --bold-weight: 600;
  --font-letter-spacing: normal;
  --font-header-letter-spacing: -0.065em;
  --font-header-line-height: 0.75em;
  --font-header-weight: 900;
  /* Interface font tokens */
  --font-interface: InterVariable, system-ui, -apple-system, sans-serif;
  --font-interface-feature: "liga", "dlig", "kern", "calt", "zero";
  --font-interface-variation: "opsz" 32;
  --font-list-feature: "liga", "dlig", "kern", "calt", "tnum", "zero", "ss01";
  --font-list-variation: "opsz" 32;
  /* Calculated typography tokens */
  --line-height: calc(var(--font-size) * var(--font-density));
  /* Heading weight scale */
  --font-weight-h1: var(--font-header-weight);
  --font-weight-h2: max(
      calc(var(--font-header-weight) * 0.95),
      var(--font-weight)
  );
  --font-weight-h3: max(
      calc(var(--font-header-weight) * 0.9),
      var(--font-weight)
  );
  --font-weight-h4: max(
      calc(var(--font-header-weight) * 0.85),
      var(--font-weight)
  );
  --font-weight-h5: max(
      calc(var(--font-header-weight) * 0.8),
      var(--font-weight)
  );
  --font-weight-h6: max(
      calc(var(--font-header-weight) * 0.75),
      var(--font-weight)
  );
  /* List styling */
  --list-indentation: var(--space);
}

html.dark {
  /*--font-density: 1.5;*/
  --font-weight: 400;
  --font-letter-spacing: 0.001em;
}

html {
  scroll-behavior: smooth;
  font-family: var(--font-text), system-ui, sans-serif;
  font-size: var(--scale);
  font-weight: var(--font-weight);
  letter-spacing: var(--font-letter-spacing);
  line-height: var(--line-height);
  text-rendering: optimizeLegibility; /* kerning & ligatures */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-optical-sizing: auto;
  font-feature-settings: var(--font-feature);
  font-variation-settings: var(--font-variation);
  text-wrap: pretty;
  hyphens: none;
  widows: 2;
  orphans: 2;
}

.circular {
  font-feature-settings: "ss05" on;
}

.squared {
  font-feature-settings: "ss06" on;
}

.inter-display {
  font-variation-settings: "opsz" 32;
}

/* Responsive adjustments - collapse gutters on small screens */
@media only screen and (max-width: 768px) {
  :root {
    --font-size: var(--font-mobile-size) !important;
    --font-ratio: var(--font-mobile-ratio) !important;
  }
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-header), system-ui, sans-serif;
  color: var(--color-header);
  text-wrap: balance;
  font-variant-ligatures: normal;
  font-feature-settings: var(--font-header-feature);
  font-variation-settings: var(--font-header-variation);
  font-style: var(--font-header-style, normal);
  line-height: var(--font-header-line-height);
  letter-spacing: var(--font-header-letter-spacing);
  white-space: normal;
  overflow-wrap: normal;
  word-break: normal;
  hyphens: none;
  max-width: 100%;
  box-sizing: border-box;
}

/*
svg {
    fill: var(--color-header);
    stroke: var(--color-header);
}
*/
h1 {
  font-weight: var(--font-weight-h1);
  font-size: clamp(var(--scale-2xl), 10vw, var(--scale-3xl));
}

h2 {
  font-weight: var(--font-weight-h2);
  font-size: clamp(var(--scale-xl), 7vw, var(--scale-2xl));
}

h3 {
  font-weight: var(--font-weight-h3);
  font-size: var(--scale-xl);
}

h4 {
  font-weight: var(--font-weight-h4);
  font-size: var(--scale-l);
  line-height: var(--line-height);
}

h5 {
  font-weight: var(--font-weight-h5);
  font-size: var(--scale-l);
  line-height: var(--line-height);
}

h6 {
  font-weight: var(--font-weight-h6);
  font-size: var(--scale-l);
  line-height: var(--line-height);
}

.small {
  font-size: var(--scale-s);
}

.smaller {
  font-size: var(--scale-xs);
}

.compact {
  line-height: var(--font-density-s);
}

.font-ui,
.font-interface {
  font-family: var(--font-interface), system-ui, sans-serif;
  font-variation-settings: var(--font-interface-variation);
  font-feature-settings: var(--font-interface-feature);
}

pre,
code,
tt,
.code,
.mono,
.monospace,
.font-mono {
  font-family: var(--font-monospace), Inconsolata, Menlo, monospace;
  font-feature-settings: var(--font-monospace-feature);
  font-variation-settings: var(--font-monospace-variation);
  font-size: var(--scale-s);
}

b,
strong,
.bold {
  font-weight: var(--bold-weight);
}

:is(h1, h2, h3, h4, h5, h6) :is(b, strong, .bold) {
  font-weight: inherit;
}

/* Links inherit color by default; article overrides already exist */
a,
a:visited {
  color: inherit;
}

/* Button styles for consistent appearance */
button {
  font-family: var(--font-interface), system-ui, sans-serif;
  font-size: var(--scale-s);
  font-weight: var(--font-weight);
  line-height: var(--font-density);
  padding: var(--space-xs) var(--space-s);
  border: none;
  border-radius: var(--border-radius);
  background: var(--color-accent);
  color: var(--color-background);
  cursor: pointer;
  transition: opacity 0.2s ease;
}
button:hover {
  opacity: 0.9;
}
button:active {
  opacity: 0.8;
}
button:focus-visible {
  outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
}

/* Form element styles for consistency */
input,
select,
textarea {
  font-family: var(--font-interface), system-ui, sans-serif;
  font-size: var(--scale-s);
  font-weight: var(--font-weight);
  line-height: var(--font-density);
  padding: var(--space-xs) var(--space-s);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  background: var(--color-background-secondary);
  color: var(--color-foreground);
}
input:focus,
select:focus,
textarea:focus {
  outline: 1px solid color-mix(in srgb, var(--color-accent) 50%, transparent);
  border-color: color-mix(in srgb, var(--color-accent) 50%, transparent);
  background-color: color-mix(in srgb, var(--color-accent) 2.5%, var(--color-background-secondary));
}
input::placeholder,
select::placeholder,
textarea::placeholder {
  color: var(--color-muted);
  opacity: 0.7;
}

textarea {
  resize: vertical;
  min-height: calc(var(--space-l) * 3);
}

/* =========================== */
/* RHYTHM ELEMENT TYPOGRAPHY   */
/* =========================== */
/* Typography properties for elements within rhythm containers */
/* List styling */
li {
  line-height: var(--font-density-s);
}

li::before {
  font-feature-settings: var(--font-list-feature);
  font-variation-settings: var(--font-list-variation);
  line-height: var(--font-density-s);
}

/* Blockquote typography */
blockquote {
  font-style: italic;
  font-size: var(--scale-s);
}

/* Code block typography */
pre,
code {
  font-size: var(--scale-s);
  line-height: var(--font-density-s);
  overflow-x: auto;
}

/* Form typography */
legend {
  font-weight: var(--bold-weight, bold);
}

label {
  font-weight: var(--bold-weight, bold);
}

/* Figure caption typography */
figcaption {
  font-size: var(--scale-s);
  font-style: italic;
  text-align: center;
}

/* Table typography */
table {
  border-collapse: collapse;
  font-variant-numeric: tabular-nums;
}

th,
td {
  text-align: left;
}

th {
  font-weight: var(--bold-weight, bold);
}

caption {
  font-weight: var(--bold-weight, bold);
  text-align: left;
}

/* Callout typography */
.callout-title {
  font-weight: var(--bold-weight, bold);
}

/* ADD: Helper classes for extreme scales */
.display {
  font-size: clamp(var(--scale-3xl), 12vw, var(--scale-display));
  line-height: 0.85;
  font-weight: var(--font-header-weight);
  letter-spacing: var(--font-header-letter-spacing);
}

.poster {
  font-size: clamp(var(--scale-display), 15vw, var(--scale-poster));
  line-height: 0.8;
  font-weight: var(--font-header-weight);
  letter-spacing: -0.04em;
}

.label {
  font-size: var(--scale-micro);
  text-transform: uppercase;
  letter-spacing: 0.15em;
  font-weight: 700;
}

.micro {
  font-size: var(--scale-micro);
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Enhanced Bulletproof Rhythm System - Margin Collapse Safe */
/* ===== Harmony Base (containers and resets) ===== */
:where(*, *::before, *::after) {
  box-sizing: border-box;
}

/* ===== BULLETPROOF RHYTHM SYSTEM ===== */
:where(body:not(.no-rhythm)) {
  margin: 0;
  padding: calc(var(--space) * var(--body-padding-multiplier));
  padding-bottom: calc(var(--space) * var(--body-padding-multiplier) * 1.5);
}
:where(body:not(.no-rhythm)) [id] {
  scroll-margin-top: calc(var(--space) * var(--body-padding-multiplier)); /* Adjust value as needed */
}

@media (max-width: 768px) {
  :where(body:not(.no-rhythm)) {
    margin: 0;
    padding: calc(var(--space) * var(--body-mobile-padding-multiplier));
    padding-bottom: calc(var(--space) * var(--body-mobile-padding-multiplier) * 1.5);
  }
  :where(body:not(.no-rhythm)) [id] {
    scroll-margin-top: calc(var(--space) * var(--body-mobile-padding-multiplier)); /* Adjust value as needed */
  }
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Rhythm control - can be overridden per instance */
  /* Modern margin collapse prevention */
  display: flow-root;
  /* Apply rhythm spacing to all direct children */
}
:where(body:not(.no-rhythm)) > *,
:where(.rhythm) > * {
  margin-block-start: 0;
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Enhanced spacing relationships for typography */
}
:where(body:not(.no-rhythm)) h1,
:where(body:not(.no-rhythm)) h2,
:where(body:not(.no-rhythm)) h3,
:where(body:not(.no-rhythm)) h4,
:where(body:not(.no-rhythm)) h5,
:where(body:not(.no-rhythm)) h6,
:where(body:not(.no-rhythm)) p,
:where(body:not(.no-rhythm)) ul,
:where(body:not(.no-rhythm)) ol,
:where(body:not(.no-rhythm)) dl,
:where(body:not(.no-rhythm)) blockquote,
:where(body:not(.no-rhythm)) pre,
:where(body:not(.no-rhythm)) table,
:where(body:not(.no-rhythm)) figure,
:where(body:not(.no-rhythm)) form,
:where(body:not(.no-rhythm)) fieldset,
:where(body:not(.no-rhythm)) section,
:where(body:not(.no-rhythm)) article,
:where(body:not(.no-rhythm)) aside,
:where(body:not(.no-rhythm)) header,
:where(body:not(.no-rhythm)) footer,
:where(body:not(.no-rhythm)) main,
:where(body:not(.no-rhythm)) nav,
:where(body:not(.no-rhythm)) .grid,
:where(body:not(.no-rhythm)) .box,
:where(.rhythm) h1,
:where(.rhythm) h2,
:where(.rhythm) h3,
:where(.rhythm) h4,
:where(.rhythm) h5,
:where(.rhythm) h6,
:where(.rhythm) p,
:where(.rhythm) ul,
:where(.rhythm) ol,
:where(.rhythm) dl,
:where(.rhythm) blockquote,
:where(.rhythm) pre,
:where(.rhythm) table,
:where(.rhythm) figure,
:where(.rhythm) form,
:where(.rhythm) fieldset,
:where(.rhythm) section,
:where(.rhythm) article,
:where(.rhythm) aside,
:where(.rhythm) header,
:where(.rhythm) footer,
:where(.rhythm) main,
:where(.rhythm) nav,
:where(.rhythm) .grid,
:where(.rhythm) .box {
  margin-block-start: 0;
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)) .rhythm,
:where(.rhythm) .rhythm {
  --rhythm-multiplier: 1; /* Reset for nested contexts */
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Special blocks get generous spacing (2× rhythm) */
  /* Layout containers get double spacing for emphasis */
}
:where(body:not(.no-rhythm)) .callout,
:where(body:not(.no-rhythm)) blockquote,
:where(body:not(.no-rhythm)) pre,
:where(body:not(.no-rhythm)) figure,
:where(body:not(.no-rhythm)) p:has(img),
:where(body:not(.no-rhythm)) fieldset,
:where(body:not(.no-rhythm)) hr,
:where(body:not(.no-rhythm)) .container-small,
:where(body:not(.no-rhythm)) .container-accent,
:where(body:not(.no-rhythm)) .container-feature,
:where(body:not(.no-rhythm)) .container-full,
:where(.rhythm) .callout,
:where(.rhythm) blockquote,
:where(.rhythm) pre,
:where(.rhythm) figure,
:where(.rhythm) p:has(img),
:where(.rhythm) fieldset,
:where(.rhythm) hr,
:where(.rhythm) .container-small,
:where(.rhythm) .container-accent,
:where(.rhythm) .container-feature,
:where(.rhythm) .container-full {
  /* Subtract regular margin to avoid double-spacing */
  margin-block-start: calc(var(--space) * var(--rhythm-multiplier-block) - var(--space) * var(--rhythm-multiplier));
  /* Bottom margin uses the block multiplier */
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier-block));
}
:where(body:not(.no-rhythm)) * > :last-child,
:where(.rhythm) * > :last-child {
  margin-block-end: 0;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* =========================== */
  /* TYPOGRAPHIC NUANCES         */
  /* =========================== */
}
:where(body:not(.no-rhythm)) hr,
:where(.rhythm) hr {
  --rhythm-multiplier-block: 3;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Adjacent images get reduced spacing */
}
:where(body:not(.no-rhythm)) p:has(img) + p:has(img),
:where(.rhythm) p:has(img) + p:has(img) {
  margin-block-start: calc(var(--space-l) * var(--rhythm-multiplier) * -1 + var(--space) / 4) !important;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Reset first-child spacing for special blocks */
}
:where(body:not(.no-rhythm)) blockquote > :first-child,
:where(body:not(.no-rhythm)) pre > :first-child,
:where(body:not(.no-rhythm)) figure > :first-child,
:where(body:not(.no-rhythm)) .callout .callout-content > :first-child,
:where(.rhythm) blockquote > :first-child,
:where(.rhythm) pre > :first-child,
:where(.rhythm) figure > :first-child,
:where(.rhythm) .callout .callout-content > :first-child {
  margin-block-start: 0;
}
:where(body:not(.no-rhythm)) blockquote > :last-child,
:where(body:not(.no-rhythm)) pre > :last-child,
:where(body:not(.no-rhythm)) figure > :last-child,
:where(body:not(.no-rhythm)) .callout .callout-content > :last-child,
:where(.rhythm) blockquote > :last-child,
:where(.rhythm) pre > :last-child,
:where(.rhythm) figure > :last-child,
:where(.rhythm) .callout .callout-content > :last-child {
  margin-block-end: 0;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* =========================== */
  /* TYPOGRAPHY ELEMENTS         */
  /* =========================== */
  /* Typography-specific spacing adjustments */
  /* =========================== */
  /* CONTENT ELEMENTS            */
  /* =========================== */
  /* Lists */
}
:where(body:not(.no-rhythm)) ul,
:where(body:not(.no-rhythm)) ol,
:where(.rhythm) ul,
:where(.rhythm) ol {
  list-style: none;
  padding-inline-start: var(--space);
}
:where(body:not(.no-rhythm)) p + ul,
:where(body:not(.no-rhythm)) p + ol,
:where(.rhythm) p + ul,
:where(.rhythm) p + ol {
  margin-block-start: calc(var(--space) * -0.5 * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)) ol ul,
:where(body:not(.no-rhythm)) ol ol,
:where(body:not(.no-rhythm)) ul ul,
:where(body:not(.no-rhythm)) ul ol,
:where(.rhythm) ol ul,
:where(.rhythm) ol ol,
:where(.rhythm) ul ul,
:where(.rhythm) ul ol {
  margin-block-start: calc(var(--space-xs) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Nested lists */
}
:where(body:not(.no-rhythm)) li > ul,
:where(body:not(.no-rhythm)) li > ol,
:where(.rhythm) li > ul,
:where(.rhythm) li > ol {
  padding-inline-start: var(--space);
  margin-block-end: 0;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* List items */
}
:where(body:not(.no-rhythm)) li,
:where(.rhythm) li {
  position: relative;
  margin: 0;
  padding-inline-start: 0;
  line-height: var(--font-density-s);
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Unordered list bullets */
}
:where(body:not(.no-rhythm)) ul > li::before,
:where(.rhythm) ul > li::before {
  content: "•";
  position: absolute;
  left: calc(var(--space) * -1);
  width: var(--space);
  text-align: center;
  color: var(--color-subtle);
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Ordered list numbers */
}
:where(body:not(.no-rhythm)) ol,
:where(.rhythm) ol {
  counter-reset: ol-counter;
}
:where(body:not(.no-rhythm)) ol > li,
:where(.rhythm) ol > li {
  counter-increment: ol-counter;
}
:where(body:not(.no-rhythm)) ol > li::before,
:where(.rhythm) ol > li::before {
  content: counter(ol-counter) ".";
  position: absolute;
  left: calc(var(--space) * -1.75);
  text-align: right;
  line-height: inherit;
  color: var(--color-subtle);
  font-variant-numeric: tabular-nums;
  overflow: hidden;
  width: calc(var(--space) * 1.5);
}
:where(body:not(.no-rhythm)) ul.no-bullet,
:where(body:not(.no-rhythm)) ol.no-bullet,
:where(.rhythm) ul.no-bullet,
:where(.rhythm) ol.no-bullet {
  list-style: none;
  padding-inline-start: 0;
}
:where(body:not(.no-rhythm)) ul.no-bullet li::before,
:where(body:not(.no-rhythm)) ol.no-bullet li::before,
:where(.rhythm) ul.no-bullet li::before,
:where(.rhythm) ol.no-bullet li::before {
  display: none;
}
:where(body:not(.no-rhythm)) ul.compact li,
:where(body:not(.no-rhythm)) ol.compact li,
:where(body:not(.no-rhythm)) li:last-of-type,
:where(.rhythm) ul.compact li,
:where(.rhythm) ol.compact li,
:where(.rhythm) li:last-of-type {
  line-height: var(--font-density);
  margin-block-end: 0;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Blockquotes - spacing only */
  /* Code blocks - spacing only */
}
:where(body:not(.no-rhythm)) blockquote,
:where(body:not(.no-rhythm)) pre,
:where(.rhythm) blockquote,
:where(.rhythm) pre {
  padding: var(--space);
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* =========================== */
  /* FORMS AND INTERACTIVE       */
  /* =========================== */
  /* Form containers - avoid nested grids */
}
:where(body:not(.no-rhythm)) form:not(.grid *),
:where(.rhythm) form:not(.grid *) {
  display: grid;
  gap: calc(var(--space-s) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Forms inside grids use flex layout to avoid nesting issues */
}
:where(body:not(.no-rhythm)) .grid form,
:where(.rhythm) .grid form {
  display: flex;
  flex-direction: column;
  gap: calc(var(--space-s) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Form field groups - spacing only */
}
:where(body:not(.no-rhythm)) fieldset,
:where(.rhythm) fieldset {
  padding: calc(var(--space-s) * var(--rhythm-multiplier));
  display: grid;
  gap: calc(var(--space-xs) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)) legend,
:where(.rhythm) legend {
  padding-inline: calc(var(--space-xs) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Form inputs */
}
:where(body:not(.no-rhythm)) input,
:where(body:not(.no-rhythm)) textarea,
:where(body:not(.no-rhythm)) select,
:where(.rhythm) input,
:where(.rhythm) textarea,
:where(.rhythm) select {
  margin: 0;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Labels - spacing only */
}
:where(body:not(.no-rhythm)) label,
:where(.rhythm) label {
  margin: 0;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Label + input pairs */
}
:where(body:not(.no-rhythm)) label:has(+ input[type=text]),
:where(body:not(.no-rhythm)) label:has(+ input[type=email]),
:where(body:not(.no-rhythm)) label:has(+ input[type=password]),
:where(body:not(.no-rhythm)) label:has(+ textarea),
:where(body:not(.no-rhythm)) label:has(+ select),
:where(.rhythm) label:has(+ input[type=text]),
:where(.rhythm) label:has(+ input[type=email]),
:where(.rhythm) label:has(+ input[type=password]),
:where(.rhythm) label:has(+ textarea),
:where(.rhythm) label:has(+ select) {
  margin-block-start: calc(var(--space-xs) * var(--rhythm-multiplier));
  margin-inline-start: calc(var(--space-s) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Checkbox/radio with labels */
}
:where(body:not(.no-rhythm)) label + input[type=checkbox],
:where(body:not(.no-rhythm)) label + input[type=radio],
:where(.rhythm) label + input[type=checkbox],
:where(.rhythm) label + input[type=radio] {
  margin-inline-start: calc(var(--space-s) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Button groups */
}
:where(body:not(.no-rhythm)) .button-group,
:where(.rhythm) .button-group {
  display: flex;
  gap: calc(var(--space-s) * var(--rhythm-multiplier));
  flex-wrap: wrap;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* =========================== */
  /* MEDIA ELEMENTS              */
  /* =========================== */
  /* Images, videos, etc. */
}
:where(body:not(.no-rhythm)) img,
:where(body:not(.no-rhythm)) video,
:where(body:not(.no-rhythm)) audio,
:where(body:not(.no-rhythm)) iframe,
:where(.rhythm) img,
:where(.rhythm) video,
:where(.rhythm) audio,
:where(.rhythm) iframe {
  max-width: 100%;
  height: auto;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Figures */
}
:where(body:not(.no-rhythm)) figure,
:where(.rhythm) figure {
  display: grid;
  gap: calc(var(--space-xs) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)) figcaption,
:where(.rhythm) figcaption {
  /* Spacing handled by rhythm system */
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* =========================== */
  /* TABLES                      */
  /* =========================== */
}
:where(body:not(.no-rhythm)) table,
:where(.rhythm) table {
  width: 100%;
}
:where(body:not(.no-rhythm)) th,
:where(body:not(.no-rhythm)) td,
:where(.rhythm) th,
:where(.rhythm) td {
  padding: calc(var(--space-xs) * var(--rhythm-multiplier)) calc(var(--space-s) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)) th,
:where(.rhythm) th {
  /* Typography and colors handled elsewhere */
}
:where(body:not(.no-rhythm)) caption,
:where(.rhythm) caption {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier));
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* Swiss-style data tables */
}
:where(body:not(.no-rhythm)) table,
:where(.rhythm) table {
  /* You already have: border-collapse: collapse; */
  width: 100%;
  font-variant-numeric: tabular-nums; /* ADD: Monospace numbers */
}
:where(body:not(.no-rhythm)) th,
:where(.rhythm) th {
  /* You already have: text-align: left; font-weight: bold; */
  text-transform: uppercase; /* ADD */
  letter-spacing: 0.05em; /* ADD */
  font-size: var(--scale-s); /* ADD: Smaller, tighter */
  border-bottom: 2px solid var(--color-foreground); /* ADD: Thick border */
  padding-block-end: var(--space-xs); /* ADD */
}
:where(body:not(.no-rhythm)) td,
:where(.rhythm) td {
  border-bottom: 1px solid var(--color-border); /* ADD: Hairline */
  padding-block: var(--space-xs);
  padding-inline-end: var(--space-s);
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* ADD: Numeric column alignment */
}
:where(body:not(.no-rhythm)) .numeric,
:where(.rhythm) .numeric {
  text-align: right;
  font-variant-numeric: tabular-nums;
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* ADD: Zebra striping (functional, not decorative) */
}
:where(body:not(.no-rhythm)) .striped tbody tr:nth-child(even),
:where(.rhythm) .striped tbody tr:nth-child(even) {
  background: color-mix(in srgb, var(--color-foreground) 3%, transparent);
}
:where(body:not(.no-rhythm)),
:where(.rhythm) {
  /* ADD: Compact table variant */
}
:where(body:not(.no-rhythm)) .compact th,
:where(body:not(.no-rhythm)) .compact td,
:where(.rhythm) .compact th,
:where(.rhythm) .compact td {
  padding-block: var(--space-2xs);
  padding-inline-end: var(--space-xs);
}

/* =========================== */
/* UTILITY CLASSES            */
/* =========================== */
/* Spacing override utilities */
.rhythm-tight {
  --rhythm-multiplier: 0.5;
}

.rhythm-loose {
  --rhythm-multiplier: 1.5;
}

.rhythm-xl {
  --rhythm-multiplier: 2;
}

/* Individual element overrides */
.no-rhythm {
  margin: 0 !important;
}

.no-block-start {
  margin-block-start: 0 !important;
}

.no-block-end {
  margin-block-end: 0 !important;
}

.stick-next {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier)) !important;
}

/* =========================== */
/* PERFORMANCE OPTIMIZATIONS  */
/* =========================== */
/* Reduce repaints and reflows */
.rhythm {
  /* Use GPU acceleration for transforms if needed */
  /*transform: translateZ(0); */
  /* Optimize for animations */
  /*will-change: auto; */
}

/* =========================== */
/* ACCESSIBILITY               */
/* =========================== */
/* Ensure rhythm doesn't interfere with screen readers */
.rhythm:focus-within {
  /* Maintain focus visibility */
}

/* Respect user motion preferences */
@media (prefers-reduced-motion: reduce) {
  .rhythm {
    transition: none;
  }
}
/* =========================== */
/* LEGACY SUPPORT             */
/* =========================== */
/* Fallback for browsers without CSS Grid support */
@supports not (display: grid) {
  .rhythm {
    display: block;
  }
  .rhythm > * {
    margin-block-end: calc(var(--space) * var(--rhythm-multiplier));
  }
  .rhythm > :last-child {
    margin-block-end: 0;
  }
}
/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Grid Design Tokens - Using logical properties */
:root {
  /* Grid system tokens */
  --grid-cols: 12;
  --grid-gap: var(--space);
  --grid-row-gap: var(--grid-gap); /* Separate control for row spacing */
  /* Container tokens */
  --container-max: 1200px;
  --container-standard: var(--space);
}

/* Harmony Grid (unified) — 12-col Swiss-style grid with rhythm-native gaps
   Use this as your single grid across the site (replaces old .h-grid API).
   Relies on logical properties and Harmony tokens: --space, calc(var(--space) / 4), --space-l, borders, etc.
*/
/* Grid container */
.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-cols), 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

/* Gap variants aligned to rhythm */
.grid.tight {
  --grid-gap: calc(var(--space) / 4);
  --grid-row-gap: var(--space-s);
}

.grid.wide {
  --grid-gap: var(--space-l);
  --grid-row-gap: var(--space-xl);
}

/* Spans 1..12 */
.grid-1 {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-2 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-3 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-4 {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-5 {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-6 {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-7 {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-8 {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-9 {
  display: grid;
  grid-template-columns: repeat(9, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-10 {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-11 {
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

.grid-12 {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  column-gap: var(--grid-gap);
  row-gap: var(--grid-row-gap);
}

/* Spans 1..12 */
.col-1 {
  grid-column: span 1;
  margin-block-end: 0;
}

.start-1 {
  grid-column-start: 1;
}

.col-2 {
  grid-column: span 2;
  margin-block-end: 0;
}

.start-2 {
  grid-column-start: 2;
}

.col-3 {
  grid-column: span 3;
  margin-block-end: 0;
}

.start-3 {
  grid-column-start: 3;
}

.col-4 {
  grid-column: span 4;
  margin-block-end: 0;
}

.start-4 {
  grid-column-start: 4;
}

.col-5 {
  grid-column: span 5;
  margin-block-end: 0;
}

.start-5 {
  grid-column-start: 5;
}

.col-6 {
  grid-column: span 6;
  margin-block-end: 0;
}

.start-6 {
  grid-column-start: 6;
}

.col-7 {
  grid-column: span 7;
  margin-block-end: 0;
}

.start-7 {
  grid-column-start: 7;
}

.col-8 {
  grid-column: span 8;
  margin-block-end: 0;
}

.start-8 {
  grid-column-start: 8;
}

.col-9 {
  grid-column: span 9;
  margin-block-end: 0;
}

.start-9 {
  grid-column-start: 9;
}

.col-10 {
  grid-column: span 10;
  margin-block-end: 0;
}

.start-10 {
  grid-column-start: 10;
}

.col-11 {
  grid-column: span 11;
  margin-block-end: 0;
}

.start-11 {
  grid-column-start: 11;
}

.col-12 {
  grid-column: span 12;
  margin-block-end: 0;
}

.start-12 {
  grid-column-start: 12;
}

/* Responsive spans/starts: md ≥ 768px, lg ≥ 1024px */
@media (max-width: 768px) {
  .grid-sm-1 {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-1 {
    grid-column: span 1;
  }
  .start-sm-1 {
    grid-column-start: 1;
  }
  .grid-sm-2 {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-2 {
    grid-column: span 2;
  }
  .start-sm-2 {
    grid-column-start: 2;
  }
  .grid-sm-3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-3 {
    grid-column: span 3;
  }
  .start-sm-3 {
    grid-column-start: 3;
  }
  .grid-sm-4 {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-4 {
    grid-column: span 4;
  }
  .start-sm-4 {
    grid-column-start: 4;
  }
  .grid-sm-5 {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-5 {
    grid-column: span 5;
  }
  .start-sm-5 {
    grid-column-start: 5;
  }
  .grid-sm-6 {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-6 {
    grid-column: span 6;
  }
  .start-sm-6 {
    grid-column-start: 6;
  }
  .grid-sm-7 {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-7 {
    grid-column: span 7;
  }
  .start-sm-7 {
    grid-column-start: 7;
  }
  .grid-sm-8 {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-8 {
    grid-column: span 8;
  }
  .start-sm-8 {
    grid-column-start: 8;
  }
  .grid-sm-9 {
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-9 {
    grid-column: span 9;
  }
  .start-sm-9 {
    grid-column-start: 9;
  }
  .grid-sm-10 {
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-10 {
    grid-column: span 10;
  }
  .start-sm-10 {
    grid-column-start: 10;
  }
  .grid-sm-11 {
    display: grid;
    grid-template-columns: repeat(11, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-11 {
    grid-column: span 11;
  }
  .start-sm-11 {
    grid-column-start: 11;
  }
  .grid-sm-12 {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-sm-12 {
    grid-column: span 12;
  }
  .start-sm-12 {
    grid-column-start: 12;
  }
  .col-sm-row {
    grid-column: 1/-1;
  }
}
@media (min-width: 1024px) {
  .grid-lg-1 {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-1 {
    grid-column: span 1;
  }
  .start-lg-1 {
    grid-column-start: 1;
  }
  .grid-lg-2 {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-2 {
    grid-column: span 2;
  }
  .start-lg-2 {
    grid-column-start: 2;
  }
  .grid-lg-3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-3 {
    grid-column: span 3;
  }
  .start-lg-3 {
    grid-column-start: 3;
  }
  .grid-lg-4 {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-4 {
    grid-column: span 4;
  }
  .start-lg-4 {
    grid-column-start: 4;
  }
  .grid-lg-5 {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-5 {
    grid-column: span 5;
  }
  .start-lg-5 {
    grid-column-start: 5;
  }
  .grid-lg-6 {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-6 {
    grid-column: span 6;
  }
  .start-lg-6 {
    grid-column-start: 6;
  }
  .grid-lg-7 {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-7 {
    grid-column: span 7;
  }
  .start-lg-7 {
    grid-column-start: 7;
  }
  .grid-lg-8 {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-8 {
    grid-column: span 8;
  }
  .start-lg-8 {
    grid-column-start: 8;
  }
  .grid-lg-9 {
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-9 {
    grid-column: span 9;
  }
  .start-lg-9 {
    grid-column-start: 9;
  }
  .grid-lg-10 {
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-10 {
    grid-column: span 10;
  }
  .start-lg-10 {
    grid-column-start: 10;
  }
  .grid-lg-11 {
    display: grid;
    grid-template-columns: repeat(11, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-11 {
    grid-column: span 11;
  }
  .start-lg-11 {
    grid-column-start: 11;
  }
  .grid-lg-12 {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    column-gap: var(--grid-gap);
    row-gap: var(--grid-row-gap);
  }
  .col-lg-12 {
    grid-column: span 12;
  }
  .start-lg-12 {
    grid-column-start: 12;
  }
  .col-lg-row {
    grid-column: 1/-1;
  }
}
/* Full-span helper (replaces old .h-col-full) */
.col-row,
.col-full {
  grid-column: 1/-1;
  margin-block-end: 0;
}

hr.col-row {
  margin-block: var(--space);
}

/* Ergonomic presets (optional sugar) */
.col-half {
  grid-column: span 6;
} /* 1/2 */
.col-third {
  grid-column: span 4;
} /* 1/3 */
.col-two3 {
  grid-column: span 8;
} /* 2/3 */
.col-quarter {
  grid-column: span 3;
} /* 1/4 */
/* Rhythm inside grid items: apply to a cell containing prose */
.grid .rhythm > * {
  margin-block-end: var(--space);
}

/* Free columns: place anywhere with CSS vars or utility shorthands */
.free-col {
  /* Defaults; authors override via CSS vars or utilities */
  --start: auto; /* 1..12 or auto */
  --span: 3; /* 1..12 */
  grid-column: var(--start)/span var(--span);
  /* If the free column contains prose, opt-in to rhythm */
}
.free-col.rhythm > * {
  margin-block-end: var(--space);
}

/* Utility-class interface to set the CSS vars (ergonomic authoring) */
.span-1 {
  --span: 1;
}

.startv-1 {
  --start: 1;
} /* 'startv' to avoid clash with .start- utilities */
.span-2 {
  --span: 2;
}

.startv-2 {
  --start: 2;
} /* 'startv' to avoid clash with .start- utilities */
.span-3 {
  --span: 3;
}

.startv-3 {
  --start: 3;
} /* 'startv' to avoid clash with .start- utilities */
.span-4 {
  --span: 4;
}

.startv-4 {
  --start: 4;
} /* 'startv' to avoid clash with .start- utilities */
.span-5 {
  --span: 5;
}

.startv-5 {
  --start: 5;
} /* 'startv' to avoid clash with .start- utilities */
.span-6 {
  --span: 6;
}

.startv-6 {
  --start: 6;
} /* 'startv' to avoid clash with .start- utilities */
.span-7 {
  --span: 7;
}

.startv-7 {
  --start: 7;
} /* 'startv' to avoid clash with .start- utilities */
.span-8 {
  --span: 8;
}

.startv-8 {
  --start: 8;
} /* 'startv' to avoid clash with .start- utilities */
.span-9 {
  --span: 9;
}

.startv-9 {
  --start: 9;
} /* 'startv' to avoid clash with .start- utilities */
.span-10 {
  --span: 10;
}

.startv-10 {
  --start: 10;
} /* 'startv' to avoid clash with .start- utilities */
.span-11 {
  --span: 11;
}

.startv-11 {
  --start: 11;
} /* 'startv' to avoid clash with .start- utilities */
.span-12 {
  --span: 12;
}

.startv-12 {
  --start: 12;
} /* 'startv' to avoid clash with .start- utilities */
/* Responsive overrides for the var-based API */
@media (max-width: 768px) {
  .span-sm-1 {
    --span: 1;
  }
  .startv-sm-1 {
    --start: 1;
  }
  .span-sm-2 {
    --span: 2;
  }
  .startv-sm-2 {
    --start: 2;
  }
  .span-sm-3 {
    --span: 3;
  }
  .startv-sm-3 {
    --start: 3;
  }
  .span-sm-4 {
    --span: 4;
  }
  .startv-sm-4 {
    --start: 4;
  }
  .span-sm-5 {
    --span: 5;
  }
  .startv-sm-5 {
    --start: 5;
  }
  .span-sm-6 {
    --span: 6;
  }
  .startv-sm-6 {
    --start: 6;
  }
  .span-sm-7 {
    --span: 7;
  }
  .startv-sm-7 {
    --start: 7;
  }
  .span-sm-8 {
    --span: 8;
  }
  .startv-sm-8 {
    --start: 8;
  }
  .span-sm-9 {
    --span: 9;
  }
  .startv-sm-9 {
    --start: 9;
  }
  .span-sm-10 {
    --span: 10;
  }
  .startv-sm-10 {
    --start: 10;
  }
  .span-sm-11 {
    --span: 11;
  }
  .startv-sm-11 {
    --start: 11;
  }
  .span-sm-12 {
    --span: 12;
  }
  .startv-sm-12 {
    --start: 12;
  }
}
@media (min-width: 1024px) {
  .span-lg-1 {
    --span: 1;
  }
  .startv-lg-1 {
    --start: 1;
  }
  .span-lg-2 {
    --span: 2;
  }
  .startv-lg-2 {
    --start: 2;
  }
  .span-lg-3 {
    --span: 3;
  }
  .startv-lg-3 {
    --start: 3;
  }
  .span-lg-4 {
    --span: 4;
  }
  .startv-lg-4 {
    --start: 4;
  }
  .span-lg-5 {
    --span: 5;
  }
  .startv-lg-5 {
    --start: 5;
  }
  .span-lg-6 {
    --span: 6;
  }
  .startv-lg-6 {
    --start: 6;
  }
  .span-lg-7 {
    --span: 7;
  }
  .startv-lg-7 {
    --start: 7;
  }
  .span-lg-8 {
    --span: 8;
  }
  .startv-lg-8 {
    --start: 8;
  }
  .span-lg-9 {
    --span: 9;
  }
  .startv-lg-9 {
    --start: 9;
  }
  .span-lg-10 {
    --span: 10;
  }
  .startv-lg-10 {
    --start: 10;
  }
  .span-lg-11 {
    --span: 11;
  }
  .startv-lg-11 {
    --start: 11;
  }
  .span-lg-12 {
    --span: 12;
  }
  .startv-lg-12 {
    --start: 12;
  }
}
/* Mobile fallback: stack free columns full-width */
@media (max-width: 767.98px) {
  .free-col {
    grid-column: 1/-1;
  }
}
/* Optional: sticky marginalia variant for editorial layouts */
.free-col.sticky {
  position: sticky;
  inset-block-start: var(--space);
  align-self: start;
  z-index: 1;
}

/* Row gap utilities for grid system */
.grid.no-row-gap {
  row-gap: 0;
}

.grid.row-gap-xs {
  --grid-row-gap: var(--space-xs);
}

.grid.row-gap-s {
  --grid-row-gap: var(--space-s);
}

.grid.row-gap-l {
  --grid-row-gap: var(--space-l);
}

.grid.row-gap-xl {
  --grid-row-gap: var(--space-xl);
}

/* Column gap utilities for grid system */
.grid.no-col-gap {
  column-gap: 0;
}

.grid.col-gap-xs {
  --grid-gap: var(--space-xs);
}

.grid.col-gap-s {
  --grid-gap: var(--space-s);
}

.grid.col-gap-l {
  --grid-gap: var(--space-l);
}

.grid.col-gap-xl {
  --grid-gap: var(--space-xl);
}

/* Common layout containers inherit rhythm to cascade deeper */
.box > *,
.grid > .col-1 > *,
.grid > .col-2 > *,
.grid > .col-3 > *,
.grid > .col-4 > *,
.grid > .col-5 > *,
.grid > .col-6 > *,
.grid > .col-7 > *,
.grid > .col-8 > *,
.grid > .col-9 > *,
.grid > .col-10 > *,
.grid > .col-11 > *,
.grid > .col-12 > *,
.grid > .col-half > *,
.grid > .col-third > *,
.grid > .col-two3 > *,
.grid > .col-quarter > *,
.grid > .col-full > * {
  margin-block: 0;
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier));
}
.box > :last-child,
.grid > .col-1 > :last-child,
.grid > .col-2 > :last-child,
.grid > .col-3 > :last-child,
.grid > .col-4 > :last-child,
.grid > .col-5 > :last-child,
.grid > .col-6 > :last-child,
.grid > .col-7 > :last-child,
.grid > .col-8 > :last-child,
.grid > .col-9 > :last-child,
.grid > .col-10 > :last-child,
.grid > .col-11 > :last-child,
.grid > .col-12 > :last-child,
.grid > .col-half > :last-child,
.grid > .col-third > :last-child,
.grid > .col-two3 > :last-child,
.grid > .col-quarter > :last-child,
.grid > .col-full > :last-child {
  margin-block-end: 0;
}
.box > :first-child,
.grid > .col-1 > :first-child,
.grid > .col-2 > :first-child,
.grid > .col-3 > :first-child,
.grid > .col-4 > :first-child,
.grid > .col-5 > :first-child,
.grid > .col-6 > :first-child,
.grid > .col-7 > :first-child,
.grid > .col-8 > :first-child,
.grid > .col-9 > :first-child,
.grid > .col-10 > :first-child,
.grid > .col-11 > :first-child,
.grid > .col-12 > :first-child,
.grid > .col-half > :first-child,
.grid > .col-third > :first-child,
.grid > .col-two3 > :first-child,
.grid > .col-quarter > :first-child,
.grid > .col-full > :first-child {
  margin-block-start: 0;
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Prose Layout Design Tokens - Using logical properties */
:root {
  /* Content area tokens */
  --line-width-xs: 24rem; /* ~384px - narrow sidebar content */
  --line-width-s: 32rem; /* ~512px - short form content */
  --line-width-m: 42rem; /* ~672px - optimal reading (60-75 chars) - DEFAULT */
  --line-width-l: 50rem; /* ~800px - wider articles */
  --line-width-xl: 60rem; /* ~960px - documentation/wide content */
  --line-width-full: calc(
      100vw - (var(--space) * 2)
  ); /* responsive full width with margins */
  --line-width: var(--line-width-m);
  /* Layout grid tokens */
  --gap: clamp(var(--space), 6vw, var(--space-xl));
  --content: min(var(--line-width), 100% - var(--gap) * 2); /* ← FIXED */
  --content-small: var(--space-l);
  --content-accent: minmax(0, var(--space-l));
  --content-feature: minmax(0, var(--space-2xl));
  --content-full: minmax(0, 1fr);
}

/* Responsive adjustments - collapse gutters on small screens */
@media only screen and (max-width: 668px) {
  :root {
    --content-small: 0;
    --content: min(var(--line-width), 100%); /* ← FIXED */
    --content-accent: 0;
    --content-feature: 0;
    --content-full: 0; /* Just the minimum gap */
  }
}
/* Reading Layout System - Article content grid and positioning */
/* Inspired by fine-art typography and book design principles */
.reading {
  display: grid;
  grid-template-columns: [full-start] var(--content-full) [feature-start] var(--content-feature) [accent-start] var(--content-accent) [content-start] var(--content) [content-end] var(--content-accent) [accent-end] var(--content-feature) [feature-end] var(--content-full) [full-end];
  transition: grid-template-columns 0.3s ease-out;
  position: relative;
  z-index: var(--z-base);
  /* Default content positioning */
}
.reading > * {
  grid-column: content;
}
.reading .container-small {
  grid-column: content;
  margin-inline: var(--content-small);
}
.reading .container-accent {
  grid-column: accent;
  margin-inline: 0;
}
.reading .container-feature {
  grid-column: feature;
  margin-inline: 0;
}
.reading .container-full {
  grid-column: full;
  margin-inline: calc(var(--space) * var(--body-padding-multiplier) * -1);
  padding-inline: calc(var(--space) * var(--body-padding-multiplier));
}
.reading {
  /* Image gallery layout */
}
.reading:not(.no-grid) p:has(img) {
  display: flex;
  gap: calc(var(--space) / 4);
  border-radius: var(--border-radius);
}
.reading:not(.no-grid) p:has(img) > * {
  flex: 1 1 auto;
  min-width: 1%;
  min-height: 1%;
  object-fit: cover;
}
.reading:not(.no-grid) p:has(video) > * {
  flex: 1 1 auto;
  min-width: 1%;
  min-height: 1%;
  object-fit: cover;
}
.reading:not(.no-grid) p:has(img) img,
.reading:not(.no-grid) p:has(img) img:first-child,
.reading:not(.no-grid) p:has(img) img:last-child {
  margin-inline: auto;
}
.reading:not(.no-grid) p:has(img) br {
  display: none;
}
.reading:not(.no-grid) .callout p:has(img),
.reading:not(.no-grid) .callout p:has(img) br {
  display: block;
}
.reading h1 {
  margin-block-start: calc(var(--space-3xl) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-l) * var(--rhythm-multiplier));
}
.reading h2 {
  margin-block-start: calc(var(--space-2xl) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-l) * var(--rhythm-multiplier));
}
.reading h3 {
  margin-block-start: calc(var(--space-xl) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-l) * var(--rhythm-multiplier));
}
.reading h4 {
  margin-block-start: calc(var(--space-l) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier));
}
.reading h5 {
  margin-block-start: calc(var(--space) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-s) * var(--rhythm-multiplier));
}
.reading h6 {
  margin-block-start: calc(var(--space) * var(--rhythm-multiplier));
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier));
}
.reading hr {
  margin-inline: calc(var(--space-l) * var(--rhythm-multiplier));
}
.reading {
  /* Heading after heading gets reduced spacing */
}
.reading h1 + h2,
.reading h2 + h3,
.reading h3 + h4,
.reading h4 + h5,
.reading h5 + h6 {
  margin-block-start: calc(var(--space-xs) * var(--rhythm-multiplier) * -1);
}
.reading {
  /* Lists after headings get normal spacing */
}
.reading h1 + ul,
.reading h1 + ol,
.reading h2 + ul,
.reading h2 + ol,
.reading h3 + ul,
.reading h3 + ol {
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier));
}
.reading section > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading aside > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading header > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading footer > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading main > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading nav > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading blockquote > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading pre > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading figure > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading .box > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading .box-inset > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading .callout > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading .grid > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading .container-small > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading .container-accent > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading .container-feature > :is(h1, h2, h3, h4, h5, h6):first-child,
.reading .container-full > :is(h1, h2, h3, h4, h5, h6):first-child {
  margin-block-start: 0; /* No top margin */
  /* Keep the heading's natural bottom margin */
}
.reading {
  /* Basic media styling */
}
.reading img,
.reading audio,
.reading video {
  margin: 0;
  margin-inline: auto;
  max-inline-size: 100%;
  border-radius: var(--border-radius);
  border: var(--border);
}
.reading .callout,
.reading blockquote,
.reading pre,
.reading figure,
.reading p:has(img) {
  margin-inline: var(--content-small);
}
.reading {
  /* Mermaid diagrams */
}
.reading .mermaid {
  margin-block-end: var(--space);
  margin-inline: auto;
  padding: var(--space);
}
.reading p img {
  max-inline-size: 100%;
}

.width-xs {
  max-width: var(--line-width-xs);
}

.width-s {
  max-width: var(--line-width-s);
}

.width-m {
  max-width: var(--line-width-m);
}

.width-l {
  max-width: var(--line-width-l);
}

.width-xl {
  max-width: var(--line-width-xl);
}

.width-full {
  max-width: var(--line-width-full);
}

/* Animation keyframes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(0.5rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Enhanced Rhythm Utilities: debugging, overrides, and advanced control - Using logical properties */
/* =========================== */
/* SPACING UTILITY GENERATOR   */
/* =========================== */
/* =========================== */
/* BASIC UTILITIES             */
/* =========================== */
.elipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.height-1 {
  height: calc(var(--space) * 1);
}

.width-1 {
  width: calc(var(--space) * 1);
}

.height-2 {
  height: calc(var(--space) * 2);
}

.width-2 {
  width: calc(var(--space) * 2);
}

.height-3 {
  height: calc(var(--space) * 3);
}

.width-3 {
  width: calc(var(--space) * 3);
}

.height-4 {
  height: calc(var(--space) * 4);
}

.width-4 {
  width: calc(var(--space) * 4);
}

.height-5 {
  height: calc(var(--space) * 5);
}

.width-5 {
  width: calc(var(--space) * 5);
}

.height-6 {
  height: calc(var(--space) * 6);
}

.width-6 {
  width: calc(var(--space) * 6);
}

.height-7 {
  height: calc(var(--space) * 7);
}

.width-7 {
  width: calc(var(--space) * 7);
}

.height-8 {
  height: calc(var(--space) * 8);
}

.width-8 {
  width: calc(var(--space) * 8);
}

.height-9 {
  height: calc(var(--space) * 9);
}

.width-9 {
  width: calc(var(--space) * 9);
}

.height-10 {
  height: calc(var(--space) * 10);
}

.width-10 {
  width: calc(var(--space) * 10);
}

.height-11 {
  height: calc(var(--space) * 11);
}

.width-11 {
  width: calc(var(--space) * 11);
}

.height-12 {
  height: calc(var(--space) * 12);
}

.width-12 {
  width: calc(var(--space) * 12);
}

/* =========================== */
/* LINE HEIGHT UTILITIES       */
/* =========================== */
.leading-tight {
  line-height: 0.85;
}

.leading-none {
  line-height: 1;
}

.leading-snug {
  line-height: var(--font-density-s);
}

.leading-normal {
  line-height: var(--font-density);
}

.leading-relaxed {
  line-height: 1.6;
}

/* =========================== */
/* TEXT TRANSFORMATION         */
/* =========================== */
.uppercase {
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.normal-case {
  text-transform: none;
}

.no-wrap {
  white-space: nowrap;
}

/* =========================== */
/* MARGIN UTILITIES            */
/* =========================== */
.margin-top-0 {
  margin-block-start: 0;
}

.margin-top-3xs {
  margin-block-start: var(--space-3xs);
}

.margin-top-2xs {
  margin-block-start: var(--space-2xs);
}

.margin-top-xs {
  margin-block-start: var(--space-xs);
}

.margin-top-s {
  margin-block-start: var(--space-s);
}

.margin-top {
  margin-block-start: var(--space);
}

.margin-top-l {
  margin-block-start: var(--space-l);
}

.margin-top-xl {
  margin-block-start: var(--space-xl);
}

.margin-top-2xl {
  margin-block-start: var(--space-2xl);
}

.margin-top-3xl {
  margin-block-start: var(--space-3xl);
}

.margin-top-0 {
  margin-block-start: 0 !important;
}

.margin-bottom-0 {
  margin-block-end: 0;
}

.margin-bottom-3xs {
  margin-block-end: var(--space-3xs);
}

.margin-bottom-2xs {
  margin-block-end: var(--space-2xs);
}

.margin-bottom-xs {
  margin-block-end: var(--space-xs);
}

.margin-bottom-s {
  margin-block-end: var(--space-s);
}

.margin-bottom {
  margin-block-end: var(--space);
}

.margin-bottom-l {
  margin-block-end: var(--space-l);
}

.margin-bottom-xl {
  margin-block-end: var(--space-xl);
}

.margin-bottom-2xl {
  margin-block-end: var(--space-2xl);
}

.margin-bottom-3xl {
  margin-block-end: var(--space-3xl);
}

.margin-bottom-0 {
  margin-block-end: 0 !important;
}

.margin-block-0 {
  margin-block: 0;
}

.margin-block-3xs {
  margin-block: var(--space-3xs);
}

.margin-block-2xs {
  margin-block: var(--space-2xs);
}

.margin-block-xs {
  margin-block: var(--space-xs);
}

.margin-block-s {
  margin-block: var(--space-s);
}

.margin-block {
  margin-block: var(--space);
}

.margin-block-l {
  margin-block: var(--space-l);
}

.margin-block-xl {
  margin-block: var(--space-xl);
}

.margin-block-2xl {
  margin-block: var(--space-2xl);
}

.margin-block-3xl {
  margin-block: var(--space-3xl);
}

.margin-block-0 {
  margin-block: 0 !important;
}

.margin-left-0 {
  margin-inline-start: 0;
}

.margin-left-3xs {
  margin-inline-start: var(--space-3xs);
}

.margin-left-2xs {
  margin-inline-start: var(--space-2xs);
}

.margin-left-xs {
  margin-inline-start: var(--space-xs);
}

.margin-left-s {
  margin-inline-start: var(--space-s);
}

.margin-left {
  margin-inline-start: var(--space);
}

.margin-left-l {
  margin-inline-start: var(--space-l);
}

.margin-left-xl {
  margin-inline-start: var(--space-xl);
}

.margin-left-2xl {
  margin-inline-start: var(--space-2xl);
}

.margin-left-3xl {
  margin-inline-start: var(--space-3xl);
}

.margin-left-0 {
  margin-inline-start: 0 !important;
}

.margin-right-0 {
  margin-inline-end: 0;
}

.margin-right-3xs {
  margin-inline-end: var(--space-3xs);
}

.margin-right-2xs {
  margin-inline-end: var(--space-2xs);
}

.margin-right-xs {
  margin-inline-end: var(--space-xs);
}

.margin-right-s {
  margin-inline-end: var(--space-s);
}

.margin-right {
  margin-inline-end: var(--space);
}

.margin-right-l {
  margin-inline-end: var(--space-l);
}

.margin-right-xl {
  margin-inline-end: var(--space-xl);
}

.margin-right-2xl {
  margin-inline-end: var(--space-2xl);
}

.margin-right-3xl {
  margin-inline-end: var(--space-3xl);
}

.margin-right-0 {
  margin-inline-end: 0 !important;
}

.margin-inline-0 {
  margin-inline: 0;
}

.margin-inline-3xs {
  margin-inline: var(--space-3xs);
}

.margin-inline-2xs {
  margin-inline: var(--space-2xs);
}

.margin-inline-xs {
  margin-inline: var(--space-xs);
}

.margin-inline-s {
  margin-inline: var(--space-s);
}

.margin-inline {
  margin-inline: var(--space);
}

.margin-inline-l {
  margin-inline: var(--space-l);
}

.margin-inline-xl {
  margin-inline: var(--space-xl);
}

.margin-inline-2xl {
  margin-inline: var(--space-2xl);
}

.margin-inline-3xl {
  margin-inline: var(--space-3xl);
}

.margin-inline-0 {
  margin-inline: 0 !important;
}

.margin-inline-auto {
  margin-inline: auto !important;
}

.margin-left-auto {
  margin-inline-start: auto !important;
}

.margin-right-auto {
  margin-inline-end: auto !important;
}

.margin-0 {
  margin: 0;
}

.margin-3xs {
  margin: var(--space-3xs);
}

.margin-2xs {
  margin: var(--space-2xs);
}

.margin-xs {
  margin: var(--space-xs);
}

.margin-s {
  margin: var(--space-s);
}

.margin {
  margin: var(--space);
}

.margin-l {
  margin: var(--space-l);
}

.margin-xl {
  margin: var(--space-xl);
}

.margin-2xl {
  margin: var(--space-2xl);
}

.margin-3xl {
  margin: var(--space-3xl);
}

.margin-0 {
  margin: 0 !important;
}

/* =========================== */
/* PADDING UTILITIES           */
/* =========================== */
.padding-top-0 {
  padding-block-start: 0;
}

.padding-top-3xs {
  padding-block-start: var(--space-3xs);
}

.padding-top-2xs {
  padding-block-start: var(--space-2xs);
}

.padding-top-xs {
  padding-block-start: var(--space-xs);
}

.padding-top-s {
  padding-block-start: var(--space-s);
}

.padding-top {
  padding-block-start: var(--space);
}

.padding-top-l {
  padding-block-start: var(--space-l);
}

.padding-top-xl {
  padding-block-start: var(--space-xl);
}

.padding-top-2xl {
  padding-block-start: var(--space-2xl);
}

.padding-top-3xl {
  padding-block-start: var(--space-3xl);
}

.padding-top-0 {
  padding-block-start: 0 !important;
}

.padding-bottom-0 {
  padding-block-end: 0;
}

.padding-bottom-3xs {
  padding-block-end: var(--space-3xs);
}

.padding-bottom-2xs {
  padding-block-end: var(--space-2xs);
}

.padding-bottom-xs {
  padding-block-end: var(--space-xs);
}

.padding-bottom-s {
  padding-block-end: var(--space-s);
}

.padding-bottom {
  padding-block-end: var(--space);
}

.padding-bottom-l {
  padding-block-end: var(--space-l);
}

.padding-bottom-xl {
  padding-block-end: var(--space-xl);
}

.padding-bottom-2xl {
  padding-block-end: var(--space-2xl);
}

.padding-bottom-3xl {
  padding-block-end: var(--space-3xl);
}

.padding-bottom-0 {
  padding-block-end: 0 !important;
}

.padding-block-0 {
  padding-block: 0;
}

.padding-block-3xs {
  padding-block: var(--space-3xs);
}

.padding-block-2xs {
  padding-block: var(--space-2xs);
}

.padding-block-xs {
  padding-block: var(--space-xs);
}

.padding-block-s {
  padding-block: var(--space-s);
}

.padding-block {
  padding-block: var(--space);
}

.padding-block-l {
  padding-block: var(--space-l);
}

.padding-block-xl {
  padding-block: var(--space-xl);
}

.padding-block-2xl {
  padding-block: var(--space-2xl);
}

.padding-block-3xl {
  padding-block: var(--space-3xl);
}

.padding-block-0 {
  padding-block: 0 !important;
}

.padding-left-0 {
  padding-inline-start: 0;
}

.padding-left-3xs {
  padding-inline-start: var(--space-3xs);
}

.padding-left-2xs {
  padding-inline-start: var(--space-2xs);
}

.padding-left-xs {
  padding-inline-start: var(--space-xs);
}

.padding-left-s {
  padding-inline-start: var(--space-s);
}

.padding-left {
  padding-inline-start: var(--space);
}

.padding-left-l {
  padding-inline-start: var(--space-l);
}

.padding-left-xl {
  padding-inline-start: var(--space-xl);
}

.padding-left-2xl {
  padding-inline-start: var(--space-2xl);
}

.padding-left-3xl {
  padding-inline-start: var(--space-3xl);
}

.padding-left-0 {
  padding-inline-start: 0 !important;
}

.padding-right-0 {
  padding-inline-end: 0;
}

.padding-right-3xs {
  padding-inline-end: var(--space-3xs);
}

.padding-right-2xs {
  padding-inline-end: var(--space-2xs);
}

.padding-right-xs {
  padding-inline-end: var(--space-xs);
}

.padding-right-s {
  padding-inline-end: var(--space-s);
}

.padding-right {
  padding-inline-end: var(--space);
}

.padding-right-l {
  padding-inline-end: var(--space-l);
}

.padding-right-xl {
  padding-inline-end: var(--space-xl);
}

.padding-right-2xl {
  padding-inline-end: var(--space-2xl);
}

.padding-right-3xl {
  padding-inline-end: var(--space-3xl);
}

.padding-right-0 {
  padding-inline-end: 0 !important;
}

.padding-inline-0 {
  padding-inline: 0;
}

.padding-inline-3xs {
  padding-inline: var(--space-3xs);
}

.padding-inline-2xs {
  padding-inline: var(--space-2xs);
}

.padding-inline-xs {
  padding-inline: var(--space-xs);
}

.padding-inline-s {
  padding-inline: var(--space-s);
}

.padding-inline {
  padding-inline: var(--space);
}

.padding-inline-l {
  padding-inline: var(--space-l);
}

.padding-inline-xl {
  padding-inline: var(--space-xl);
}

.padding-inline-2xl {
  padding-inline: var(--space-2xl);
}

.padding-inline-3xl {
  padding-inline: var(--space-3xl);
}

.padding-inline-0 {
  padding-inline: 0 !important;
}

.padding-0 {
  padding: 0;
}

.padding-3xs {
  padding: var(--space-3xs);
}

.padding-2xs {
  padding: var(--space-2xs);
}

.padding-xs {
  padding: var(--space-xs);
}

.padding-s {
  padding: var(--space-s);
}

.padding {
  padding: var(--space);
}

.padding-l {
  padding: var(--space-l);
}

.padding-xl {
  padding: var(--space-xl);
}

.padding-2xl {
  padding: var(--space-2xl);
}

.padding-3xl {
  padding: var(--space-3xl);
}

.padding-0 {
  padding: 0 !important;
}

/* =========================== */
/* GAP UTILITIES               */
/* =========================== */
.gap-0 {
  gap: 0;
}

.gap-3xs {
  gap: var(--space-3xs);
}

.gap-2xs {
  gap: var(--space-2xs);
}

.gap-xs {
  gap: var(--space-xs);
}

.gap-s {
  gap: var(--space-s);
}

.gap {
  gap: var(--space);
}

.gap-l {
  gap: var(--space-l);
}

.gap-xl {
  gap: var(--space-xl);
}

.gap-2xl {
  gap: var(--space-2xl);
}

.gap-3xl {
  gap: var(--space-3xl);
}

.gap-0 {
  gap: 0 !important;
}

.row-gap-0 {
  row-gap: 0;
}

.row-gap-3xs {
  row-gap: var(--space-3xs);
}

.row-gap-2xs {
  row-gap: var(--space-2xs);
}

.row-gap-xs {
  row-gap: var(--space-xs);
}

.row-gap-s {
  row-gap: var(--space-s);
}

.row-gap {
  row-gap: var(--space);
}

.row-gap-l {
  row-gap: var(--space-l);
}

.row-gap-xl {
  row-gap: var(--space-xl);
}

.row-gap-2xl {
  row-gap: var(--space-2xl);
}

.row-gap-3xl {
  row-gap: var(--space-3xl);
}

.row-gap-0 {
  row-gap: 0 !important;
}

.column-gap-0 {
  column-gap: 0;
}

.column-gap-3xs {
  column-gap: var(--space-3xs);
}

.column-gap-2xs {
  column-gap: var(--space-2xs);
}

.column-gap-xs {
  column-gap: var(--space-xs);
}

.column-gap-s {
  column-gap: var(--space-s);
}

.column-gap {
  column-gap: var(--space);
}

.column-gap-l {
  column-gap: var(--space-l);
}

.column-gap-xl {
  column-gap: var(--space-xl);
}

.column-gap-2xl {
  column-gap: var(--space-2xl);
}

.column-gap-3xl {
  column-gap: var(--space-3xl);
}

.column-gap-0 {
  column-gap: 0 !important;
}

/* =========================== */
/* HEIGHT UTILITIES            */
/* =========================== */
.height-0 {
  height: 0;
}

.height-3xs {
  height: var(--space-3xs);
}

.height-2xs {
  height: var(--space-2xs);
}

.height-xs {
  height: var(--space-xs);
}

.height-s {
  height: var(--space-s);
}

.height {
  height: var(--space);
}

.height-l {
  height: var(--space-l);
}

.height-xl {
  height: var(--space-xl);
}

.height-2xl {
  height: var(--space-2xl);
}

.height-3xl {
  height: var(--space-3xl);
}

.height-0 {
  height: 0 !important;
}

.height-auto {
  height: auto !important;
}

.height-full {
  height: 100%;
}

.height-screen {
  height: 100vh;
}

.height-min {
  height: min-content;
}

.height-max {
  height: max-content;
}

.height-fit {
  height: fit-content;
}

.min-height-0 {
  min-height: 0;
}

.min-height-3xs {
  min-height: var(--space-3xs);
}

.min-height-2xs {
  min-height: var(--space-2xs);
}

.min-height-xs {
  min-height: var(--space-xs);
}

.min-height-s {
  min-height: var(--space-s);
}

.min-height {
  min-height: var(--space);
}

.min-height-l {
  min-height: var(--space-l);
}

.min-height-xl {
  min-height: var(--space-xl);
}

.min-height-2xl {
  min-height: var(--space-2xl);
}

.min-height-3xl {
  min-height: var(--space-3xl);
}

.min-height-0 {
  min-height: 0 !important;
}

.min-height-full {
  min-height: 100%;
}

.min-height-screen {
  min-height: 100vh;
}

.max-height-0 {
  max-height: 0;
}

.max-height-3xs {
  max-height: var(--space-3xs);
}

.max-height-2xs {
  max-height: var(--space-2xs);
}

.max-height-xs {
  max-height: var(--space-xs);
}

.max-height-s {
  max-height: var(--space-s);
}

.max-height {
  max-height: var(--space);
}

.max-height-l {
  max-height: var(--space-l);
}

.max-height-xl {
  max-height: var(--space-xl);
}

.max-height-2xl {
  max-height: var(--space-2xl);
}

.max-height-3xl {
  max-height: var(--space-3xl);
}

.max-height-none {
  max-height: none !important;
}

.max-height-full {
  max-height: 100%;
}

.max-height-screen {
  max-height: 100vh;
}

/* =========================== */
/* WIDTH UTILITIES             */
/* =========================== */
.width-0 {
  width: 0;
}

.width-3xs {
  width: var(--space-3xs);
}

.width-2xs {
  width: var(--space-2xs);
}

.width-xs {
  width: var(--space-xs);
}

.width-s {
  width: var(--space-s);
}

.width {
  width: var(--space);
}

.width-l {
  width: var(--space-l);
}

.width-xl {
  width: var(--space-xl);
}

.width-2xl {
  width: var(--space-2xl);
}

.width-3xl {
  width: var(--space-3xl);
}

.width-0 {
  width: 0 !important;
}

.width-auto {
  width: auto !important;
}

.width-full {
  width: 100%;
}

.width-screen {
  width: 100vw;
}

.width-min {
  width: min-content;
}

.width-max {
  width: max-content;
}

.width-fit {
  width: fit-content;
}

.min-width-0 {
  min-width: 0;
}

.min-width-3xs {
  min-width: var(--space-3xs);
}

.min-width-2xs {
  min-width: var(--space-2xs);
}

.min-width-xs {
  min-width: var(--space-xs);
}

.min-width-s {
  min-width: var(--space-s);
}

.min-width {
  min-width: var(--space);
}

.min-width-l {
  min-width: var(--space-l);
}

.min-width-xl {
  min-width: var(--space-xl);
}

.min-width-2xl {
  min-width: var(--space-2xl);
}

.min-width-3xl {
  min-width: var(--space-3xl);
}

.min-width-0 {
  min-width: 0 !important;
}

.min-width-full {
  min-width: 100%;
}

.min-width-screen {
  min-width: 100vw;
}

.max-width-0 {
  max-width: 0;
}

.max-width-3xs {
  max-width: var(--space-3xs);
}

.max-width-2xs {
  max-width: var(--space-2xs);
}

.max-width-xs {
  max-width: var(--space-xs);
}

.max-width-s {
  max-width: var(--space-s);
}

.max-width {
  max-width: var(--space);
}

.max-width-l {
  max-width: var(--space-l);
}

.max-width-xl {
  max-width: var(--space-xl);
}

.max-width-2xl {
  max-width: var(--space-2xl);
}

.max-width-3xl {
  max-width: var(--space-3xl);
}

.max-width-none {
  max-width: none !important;
}

.max-width-full {
  max-width: 100%;
}

.max-width-screen {
  max-width: 100vw;
}

/* =========================== */
/* LOGICAL SIZE UTILITIES      */
/* =========================== */
.block-size-0 {
  block-size: 0;
}

.block-size-3xs {
  block-size: var(--space-3xs);
}

.block-size-2xs {
  block-size: var(--space-2xs);
}

.block-size-xs {
  block-size: var(--space-xs);
}

.block-size-s {
  block-size: var(--space-s);
}

.block-size {
  block-size: var(--space);
}

.block-size-l {
  block-size: var(--space-l);
}

.block-size-xl {
  block-size: var(--space-xl);
}

.block-size-2xl {
  block-size: var(--space-2xl);
}

.block-size-3xl {
  block-size: var(--space-3xl);
}

.block-size-auto {
  block-size: auto;
}

.block-size-full {
  block-size: 100%;
}

.inline-size-0 {
  inline-size: 0;
}

.inline-size-3xs {
  inline-size: var(--space-3xs);
}

.inline-size-2xs {
  inline-size: var(--space-2xs);
}

.inline-size-xs {
  inline-size: var(--space-xs);
}

.inline-size-s {
  inline-size: var(--space-s);
}

.inline-size {
  inline-size: var(--space);
}

.inline-size-l {
  inline-size: var(--space-l);
}

.inline-size-xl {
  inline-size: var(--space-xl);
}

.inline-size-2xl {
  inline-size: var(--space-2xl);
}

.inline-size-3xl {
  inline-size: var(--space-3xl);
}

.inline-size-auto {
  inline-size: auto;
}

.inline-size-full {
  inline-size: 100%;
}

/* =========================== */
/* BOX UTILITIES               */
/* =========================== */
.box {
  background: var(--color-background-secondary);
  border-radius: var(--border-radius);
  border: var(--border);
  box-shadow: var(--shadow);
  padding: var(--space);
}

.box-inset {
  background: var(--color-background-secondary);
  border-radius: var(--border-radius);
  border: var(--border);
  box-shadow: inset var(--shadow);
  padding: var(--space);
}

.box.container-full,
.box-inset.container-full {
  border-radius: 0;
  border-left: 0;
  border-right: 0;
}

/* =========================== */
/* CENTERING UTILITIES         */
/* =========================== */
.centered {
  max-width: var(--line-width);
  margin-inline: auto;
}

.centered-narrow {
  max-width: var(--line-width-s);
  margin-inline: auto;
}

.centered-wide {
  max-width: var(--line-width-wide);
  margin-inline: auto;
}

.centered-xl {
  max-width: var(--line-width-xl);
  margin-inline: auto;
}

.centered-xs {
  max-width: var(--line-width-xs);
  margin-inline: auto;
}

.centered-responsive {
  max-width: var(--content);
  margin-inline: auto;
  padding-inline: var(--gap);
}

/* =========================== */
/* RHYTHM UTILITIES            */
/* =========================== */
.stick-next {
  margin-block-end: calc(var(--space) / 4) !important;
}

.rhythm-micro {
  margin-block-end: calc(var(--space-3xs) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-tiny {
  margin-block-end: calc(var(--space-2xs) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-small {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-base {
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-large {
  margin-block-end: calc(var(--space-l) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-xl {
  margin-block-end: calc(var(--space-xl) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-xxl {
  margin-block-end: calc(var(--space-2xl) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-reset {
  margin: 0 !important;
}

.rhythm-include {
  margin-block-end: calc(var(--space-block) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-exclude {
  margin: 0 !important;
}
.rhythm-exclude.rhythm {
  --marge-active: 0;
  background-image: none;
}
.rhythm-exclude.rhythm > * {
  margin-block-end: 0 !important;
}

.rhythm-tight-group > * {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-loose-group > * {
  margin-block-end: calc(var(--space-l) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-form-row {
  display: flex;
  gap: calc(var(--space-s) * var(--rhythm-multiplier, 1));
  align-items: center;
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-form-group {
  margin-block-end: calc(var(--space) * var(--rhythm-multiplier, 1)) !important;
}
.rhythm-form-group label {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier, 1)) !important;
}
.rhythm-form-group input,
.rhythm-form-group textarea,
.rhythm-form-group select {
  margin-block-end: calc(var(--space-xs) * var(--rhythm-multiplier, 1)) !important;
}

.rhythm-tight {
  gap: calc(var(--space-s) * var(--rhythm-multiplier)) !important;
}

.rhythm-loose {
  gap: calc(var(--space-l) * var(--rhythm-multiplier)) !important;
}

.rhythm-none {
  gap: 0 !important;
}

.no-rhythm {
  margin: 0 !important;
}

/* =========================== */
/* TEXT UTILITIES              */
/* =========================== */
.line-width-xs {
  max-inline-size: var(--line-width-xs);
}

.line-width-s {
  max-inline-size: var(--line-width-s);
}

.line-width {
  max-inline-size: var(--line-width);
}

.line-width-wide {
  max-inline-size: var(--line-width-wide);
}

.line-width-xl {
  max-inline-size: var(--line-width-xl);
}

.line-width-full {
  max-inline-size: var(--line-width-full);
}

/* =========================== */
/* ASYMMETRIC WIDTH UTILITIES  */
/* =========================== */
.width-third {
  max-width: 33.333%;
}

.width-half {
  max-width: 50%;
}

.width-two-thirds {
  max-width: 66.666%;
}

.width-three-quarters {
  max-width: 75%;
}

.align-start {
  margin-inline-start: 0;
  margin-inline-end: auto;
}

.align-end {
  margin-inline-start: auto;
  margin-inline-end: 0;
}

.aside-left {
  max-width: 33.333%;
  margin-inline-start: 0;
  margin-inline-end: auto;
}

.aside-right {
  max-width: 33.333%;
  margin-inline-start: auto;
  margin-inline-end: 0;
}

.content-left {
  max-width: 66.666%;
  margin-inline-start: 0;
  margin-inline-end: auto;
}

.content-right {
  max-width: 66.666%;
  margin-inline-start: auto;
  margin-inline-end: 0;
}

/* =========================== */
/* RESPONSIVE TYPOGRAPHY       */
/* =========================== */
.heading-responsive {
  font-size: clamp(var(--scale-xl), 4vw, var(--scale-2xl)) !important;
}

.heading-compact {
  font-size: clamp(var(--scale-l), 3vw, var(--scale-xl)) !important;
  line-height: 1.1 !important;
}

.heading-contain {
  container-type: inline-size;
  max-inline-size: 100%;
  overflow: hidden;
}
.heading-contain h1 {
  font-size: clamp(var(--scale-l), 5cqi, var(--scale-2xl));
}
.heading-contain h2 {
  font-size: clamp(var(--scale), 4cqi, var(--scale-xl));
}
.heading-contain h3 {
  font-size: clamp(var(--scale-s), 3cqi, var(--scale-l));
}

/* =========================== */
/* MULTI-COLUMN FLOW           */
/* =========================== */
[class*=flow-] {
  orphans: 3;
  widows: 3;
}

.flow-row {
  column-span: all;
}

.flow-2 {
  columns: 2;
  column-gap: var(--grid-gap);
}

.flow-3 {
  columns: 3;
  column-gap: var(--grid-gap);
}

.flow-4 {
  columns: 4;
  column-gap: var(--grid-gap);
}

.flow-auto {
  columns: auto;
  column-width: var(--line-width-s);
  column-gap: var(--grid-gap);
}

.flow-gap-tight {
  column-gap: var(--space-s);
}

.flow-gap-wide {
  column-gap: var(--space-l);
}

.flow-keep {
  break-inside: avoid;
  page-break-inside: avoid;
}

.flow-rule {
  column-rule: var(--border);
}

.flow-rule-accent {
  column-rule: 1px solid var(--color-accent);
}

@media (max-width: 480px) {
  .flow-2,
  .flow-3,
  .flow-4 {
    columns: 1;
  }
}
@media (min-width: 768px) {
  .flow-3 {
    columns: 2;
  }
  .flow-4 {
    columns: 3;
  }
}
@media (min-width: 1024px) {
  .flow-4 {
    columns: 4;
  }
}
/* =========================== */
/* RESPONSIVE VISIBILITY       */
/* =========================== */
.md-hidden {
  display: none;
}

.sm-only {
  display: none;
}

.md-only {
  display: inherit;
}

.lg-only {
  display: none;
}

@media (max-width: 768px) {
  .sm-hidden {
    display: none;
  }
  .sm-only {
    display: inherit;
  }
  .md-only {
    display: none;
  }
  .lg-only {
    display: none;
  }
  .flow-2,
  .flow-3,
  .flow-4 {
    columns: 1;
  }
}
@media (min-width: 1024px) {
  .lg-hidden {
    display: none;
  }
  .sm-only {
    display: none;
  }
  .md-only {
    display: none;
  }
  .lg-only {
    display: inherit;
  }
}
/* =========================== */
/* ACCESSIBILITY               */
/* =========================== */
@media (prefers-reduced-motion: reduce) {
  .rhythm {
    transition: none;
  }
}
/* =========================== */
/* LEGACY SUPPORT              */
/* =========================== */
@supports not (display: grid) {
  .rhythm {
    display: block;
  }
  .rhythm > * {
    margin-block-end: calc(var(--space-block) * var(--rhythm-multiplier));
  }
  .rhythm > :last-child {
    margin-block-end: 0;
  }
}
@supports not (margin-block-end: 1rem) {
  .rhythm > * {
    margin-bottom: calc(var(--space-block) * var(--rhythm-multiplier));
  }
  .rhythm > :last-child {
    margin-bottom: 0;
  }
  .line-width-xs {
    max-width: var(--line-width-xs);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-s {
    max-width: var(--line-width-s);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-normal {
    max-width: var(--line-width);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-wide {
    max-width: var(--line-width-wide);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-xl {
    max-width: var(--line-width-xl);
    margin-left: auto;
    margin-right: auto;
  }
  .line-width-full {
    max-width: var(--line-width-full);
    margin-left: auto;
    margin-right: auto;
  }
}
.center {
  text-align: center;
}

.left {
  text-align: left;
}

.right {
  text-align: right;
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* Image Styles - Works with both .reading (layout) and .rhythm (spacing) - Using logical properties */
img {
  max-inline-size: 100%;
}

:where(body:not(.no-rhythm)) {
  /* Basic image styling */
}
:where(body:not(.no-rhythm)) * + img,
:where(body:not(.no-rhythm)) img,
:where(body:not(.no-rhythm)) img:first-child,
:where(body:not(.no-rhythm)) img:last-child {
  margin: 0;
  max-inline-size: 100%;
  block-size: auto;
}
:where(body:not(.no-rhythm)) img {
  max-width: 100%;
  cursor: zoom-in;
  transition: mix-blend-mode 0.2s, opacity 0.2s, filter 0.2s;
}
:where(body:not(.no-rhythm)) img.fx {
  border-radius: var(--border-radius);
  border: var(--border);
}
:where(body:not(.no-rhythm)) img.nofx {
  border-radius: unset;
  border: unset;
  box-shadow: unset;
}
:where(body:not(.no-rhythm)) img:hover,
:where(body:not(.no-rhythm)) img.zoomed {
  mix-blend-mode: normal;
  filter: none;
}
:where(body:not(.no-rhythm)) img:active,
:where(body:not(.no-rhythm)) img.zoomed {
  cursor: zoom-out;
  display: block;
  z-index: var(--z-image-zoom);
  position: fixed;
  max-height: 88vh;
  max-width: 88vw;
  max-height: calc(100vh - var(--space) * 2);
  max-width: calc(100vw - var(--space) * 2);
  object-fit: contain;
  margin: 0 auto;
  text-align: center;
  padding: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  user-select: none;
}

/* Zoom overlay backgrounds */
.reading :has(img:active)::before,
.reading :has(img.zoomed)::before,
.rhythm :has(img:active)::before,
.rhythm :has(img.zoomed)::before {
  content: "";
  position: fixed;
  inset: 0;
  background: var(--color-background);
  z-index: calc(var(--z-image-zoom) - 1);
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
.md .callout,
.md pre,
.md blockquote,
.md img,
.md iframe,
.md .outset,
.md .inset {
  background: var(--color-background-secondary);
  border-radius: var(--border-radius);
  border: var(--border);
  box-shadow: var(--shadow);
}
.md pre,
.md blockquote .inset {
  box-shadow: inset var(--shadow);
}
.md blockquote {
  font-size: var(--scale-s);
  line-height: var(--font-density-s);
  padding: var(--space);
  font-style: italic;
}
.md .callout {
  line-height: var(--font-density-s);
  transition: var(--duration-superfast) var(--motion-smooth);
  padding: var(--space-2xs);
  --color-callout: var(--color-background-secondary);
  --color-border: color-mix(
      in srgb,
      var(--color-callout) 15%,
      transparent
  );
  background: color-mix(in srgb, var(--color-callout) 5%, var(--color-background-secondary));
  border: var(--border);
}
.md .callout .callout-title {
  color: color-mix(in srgb, var(--color-callout) 50%, var(--color-foreground));
  font-weight: bold;
  font-size: var(--scale-s);
  user-select: none;
  padding: var(--space-3xs) calc(var(--space) - var(--space-xs)) var(--space-3xs) calc(var(--space) - var(--space-xs));
}
.md .callout .callout-content {
  color: var(--color-foreground);
  background: color-mix(in srgb, var(--color-callout) 2.5%, var(--color-background));
  box-shadow: inset var(--shadow);
  font-size: var(--scale-s);
  overflow: hidden;
  border-radius: var(--border-radius);
  padding: var(--space-s) calc(var(--space) - var(--space-xs));
  margin-top: var(--space-2xs);
  margin-left: 0;
  border: var(--border);
  text-align: left;
}
.md .callout .callout-content p:first-child {
  margin-top: 0;
}
.md .callout .callout-content p:last-child {
  margin-bottom: 0;
}
.md .callout .callout-content ul,
.md .callout .callout-content ol {
  padding: 0 calc(var(--space) * 0.75);
}
.md .callout .callout-content pre {
  margin: var(--space) 0;
}
.md .callout .callout-content > .callout {
  margin: calc(var(--space-xs) * -1);
}
.md .callout .callout-content > .callout .callout-content {
  padding: var(--space-s);
}
.md .callout .callout-content > .callout .callout-title {
  padding-left: var(--space-s);
  padding-right: var(--space-s);
}
.md .callout .callout-title-icon {
  display: none;
}
.md .callout img {
  margin-left: 0;
  margin-right: 0;
}
.md .callout[data-callout=warning i] {
  --color-callout: var(--color-red);
}
.md .callout[data-callout=important i] {
  --color-callout: var(--color-orange);
}
.md details > summary {
  list-style: none; /* removes marker in Firefox */
}
.md details .callout-title::before {
  content: "▸";
  display: inline-block;
  transform: rotate(0deg);
  transition: transform 0.2s ease;
}
.md details[open] .callout-title::before {
  transform: rotate(90deg);
}
.md details .callout-title-inner {
  display: inline;
}
.md p:has(img) + .callout[data-callout=caption i] {
  padding: 0;
  background: none;
  border: none;
  margin: 0 var(--space-l);
  position: relative;
  top: calc(var(--space) * -1.75);
  box-shadow: none;
}
.md p:has(img) + .callout[data-callout=caption i] .callout-title {
  display: none;
}
.md p:has(img) + .callout[data-callout=caption i] .callout-content {
  padding: 0;
  background: none;
  border: none;
  box-shadow: none;
  line-height: 1;
  text-align: center !important;
  text-wrap: balance !important;
}
@media only screen and (max-width: 768px) {
  .md ul:not([start]),
  .md ol:not([start]) {
    padding: 0;
    padding-left: var(--space);
  }
}

/* Standard - Fine-Art Typography Framework */
/* A framework implementing classical design principles, mathematical precision with the golden ratio, */
/* and micro-typography rules inspired by the masters of print design. */
/* =========================== */
/* STANDARD DEBUG SYSTEM       */
/* =========================== */
/* Single class to enable all debug features */
.standard-debug {
  position: relative;
}

/* Baseline Grid Overlay */
.standard-debug::before {
  content: "";
  position: fixed;
  inset: 0;
  background-image: repeating-linear-gradient(to bottom, transparent, transparent calc(var(--space) - 1px), color-mix(in srgb, var(--color-accent) 15%, transparent) calc(var(--space) - 1px), color-mix(in srgb, var(--color-accent) 15%, transparent) var(--space));
  pointer-events: none;
  z-index: var(--z-tooltip);
  opacity: 0.5;
}

/* Grid Column Overlay (only for .grid inside debug) */
.standard-debug .grid {
  position: relative;
}

.standard-debug .grid::after {
  content: "";
  position: absolute;
  inset: 0;
  display: grid;
  grid-template-columns: repeat(var(--grid-cols), 1fr);
  column-gap: var(--grid-gap);
  pointer-events: none;
  z-index: var(--z-tooltip);
}

.standard-debug .grid::after {
  background-image: repeating-linear-gradient(to right, color-mix(in srgb, var(--color-cyan) 10%, transparent) 0, color-mix(in srgb, var(--color-cyan) 10%, transparent) calc((100% - var(--grid-gap) * (var(--grid-cols) - 1)) / var(--grid-cols)), transparent calc((100% - var(--grid-gap) * (var(--grid-cols) - 1)) / var(--grid-cols)), transparent calc((100% - var(--grid-gap) * (var(--grid-cols) - 1)) / var(--grid-cols) + var(--grid-gap)));
}

/* Reading Layout Debug - show zones */
.standard-debug.reading::after {
  content: "";
  position: absolute;
  inset: 0;
  display: grid;
  grid-template-columns: [full-start] var(--content-full) [feature-start] var(--content-feature) [accent-start] var(--content-accent) [content-start] var(--content) [content-end] var(--content-accent) [accent-end] var(--content-feature) [feature-end] var(--content-full) [full-end];
  pointer-events: none;
  z-index: var(--z-base);
  opacity: 0.1;
  background: linear-gradient(to right, transparent 0, transparent var(--content-full), var(--color-purple) var(--content-full), var(--color-purple) calc(var(--content-full) + var(--content-feature)), var(--color-blue) calc(var(--content-full) + var(--content-feature)), var(--color-blue) calc(var(--content-full) + var(--content-feature) + var(--content-accent)), var(--color-accent) calc(var(--content-full) + var(--content-feature) + var(--content-accent)), var(--color-accent) calc(100% - var(--content-full) - var(--content-feature) - var(--content-accent)), var(--color-blue) calc(100% - var(--content-full) - var(--content-feature) - var(--content-accent)), var(--color-blue) calc(100% - var(--content-full) - var(--content-feature)), var(--color-purple) calc(100% - var(--content-full) - var(--content-feature)), var(--color-purple) calc(100% - var(--content-full)), transparent calc(100% - var(--content-full)));
}

/* Rhythm Spacing Debug - outline all elements */
.standard-debug.rhythm > * {
  outline: 1px dashed color-mix(in srgb, var(--color-orange) 50%, transparent);
  outline-offset: -1px;
  position: relative;
}

/* Show margin-block-end values */
.standard-debug.rhythm > *::after {
  content: "↓ " attr(data-margin-block-end);
  position: absolute;
  top: 0;
  right: 0;
  background: var(--color-orange);
  color: var(--color-background);
  font-size: var(--scale-xs);
  font-family: var(--font-monospace);
  padding: var(--space-3xs) var(--space-2xs);
  border-radius: var(--border-radius);
  pointer-events: none;
  opacity: 0.9;
  z-index: var(--z-tooltip);
  white-space: nowrap;
  display: none;
}

/* Typography Debug - show processed elements */
.standard-debug [data-typography-processed] {
  position: relative;
}

.standard-debug [data-typography-processed]::before {
  content: "✓ Typo";
  position: absolute;
  top: 0;
  left: 0;
  background: var(--color-success);
  color: var(--color-background);
  font-size: var(--scale-xs);
  font-family: var(--font-monospace);
  padding: var(--space-3xs) var(--space-2xs);
  border-radius: var(--border-radius);
  pointer-events: none;
  opacity: 0.63;
  z-index: var(--z-tooltip);
  white-space: nowrap;
  display: none;
}

/* Debug Info Panel */
.standard-debug::after {
  content: "🔍 Standard Debug" "\a" "Baseline: " var(--space) "\a" "Ratio: " var(--font-ratio) "\a" "Density: " var(--font-density) "\a" "Grid: " var(--grid-cols) " cols";
  position: fixed;
  top: var(--space);
  right: var(--space);
  background: var(--color-background);
  color: var(--color-foreground);
  border: var(--border-accent);
  border-radius: var(--border-radius);
  padding: var(--space-s);
  font-family: var(--font-monospace);
  font-size: var(--scale-xs);
  line-height: 1.5;
  white-space: pre;
  box-shadow: var(--shadow-xl);
  z-index: var(--z-toast);
  pointer-events: none;
  opacity: 0.95;
}

/* Grid item debugging */
.standard-debug .grid > * {
  outline: 1px solid color-mix(in srgb, var(--color-cyan) 50%, transparent);
  outline-offset: -1px;
  position: relative;
}

.standard-debug .grid > *::before {
  content: attr(class);
  position: absolute;
  top: var(--space-3xs);
  left: var(--space-3xs);
  background: var(--color-cyan);
  color: var(--color-background);
  font-size: var(--scale-xs);
  font-family: var(--font-monospace);
  padding: var(--space-3xs) var(--space-2xs);
  border-radius: var(--border-radius);
  pointer-events: none;
  opacity: 0.9;
  z-index: var(--z-tooltip);
  white-space: nowrap;
  max-width: 90%;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Free column debug */
.standard-debug .free-col::after {
  content: "start: " var(--start) " / span: " var(--span);
  position: absolute;
  bottom: var(--space-3xs);
  left: var(--space-3xs);
  background: var(--color-purple);
  color: var(--color-background);
  font-size: var(--scale-xs);
  font-family: var(--font-monospace);
  padding: var(--space-3xs) var(--space-2xs);
  border-radius: var(--border-radius);
  pointer-events: none;
  opacity: 0.9;
  z-index: var(--z-tooltip);
  white-space: nowrap;
}

/* Color token visualization */
.standard-debug .text-accent,
.standard-debug .text-success,
.standard-debug .text-warning,
.standard-debug .text-error {
  position: relative;
}

.standard-debug .text-accent::before {
  content: "accent";
  background: var(--color-accent);
}

.standard-debug .text-success::before {
  content: "success";
  background: var(--color-success);
}

.standard-debug .text-warning::before {
  content: "warning";
  background: var(--color-warning);
}

.standard-debug .text-error::before {
  content: "error";
  background: var(--color-error);
}

.standard-debug .text-accent::before,
.standard-debug .text-success::before,
.standard-debug .text-warning::before,
.standard-debug .text-error::before {
  position: absolute;
  top: -1.5em;
  left: 0;
  color: var(--color-background);
  font-size: var(--scale-xs);
  font-family: var(--font-monospace);
  padding: var(--space-3xs) var(--space-2xs);
  border-radius: var(--border-radius);
  pointer-events: none;
  opacity: 0.9;
  z-index: var(--z-tooltip);
  white-space: nowrap;
}

/* Responsive breakpoint indicator */
body.standard-debug::before {
  content: "md";
  position: fixed;
  bottom: var(--space);
  left: var(--space);
  color: var(--color-foreground);
  font-family: var(--font-monospace);
  font-size: var(--scale-xs);
  padding: var(--space-xs) var(--space-s);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  z-index: var(--z-toast);
  pointer-events: none;
  font-weight: bold;
}

@media (max-width: 768px) {
  body.standard-debug::before {
    content: "sm (<768px)";
    color: var(--color-foreground);
  }
}
@media (max-width: 600px) {
  body.standard-debug::before {
    content: "xs (<600px)";
    color: var(--color-foreground);
  }
}
@media (min-width: 1024px) {
  body.standard-debug::before {
    content: "lg (≥1024px)";
    color: var(--color-foreground);
  }
}
/* Layout zone labels for .reading - CRITICAL FIX */
.standard-debug.reading .small,
.standard-debug.reading .accent,
.standard-debug.reading .feature,
.standard-debug.reading .full {
  position: relative; /* CRITICAL: Make these positioned containers */
  outline: 2px dashed; /* Add outline to make zones visible */
  outline-offset: -2px;
}

.standard-debug.reading .small {
  outline-color: color-mix(in srgb, var(--color-blue) 50%, transparent);
}

.standard-debug.reading .accent {
  outline-color: color-mix(in srgb, var(--color-accent) 50%, transparent);
}

.standard-debug.reading .feature {
  outline-color: color-mix(in srgb, var(--color-purple) 50%, transparent);
}

.standard-debug.reading .full {
  outline-color: color-mix(in srgb, var(--color-pink) 50%, transparent);
}

.standard-debug.reading .small::before,
.standard-debug.reading .accent::before,
.standard-debug.reading .feature::before,
.standard-debug.reading .full::before {
  position: absolute;
  top: var(--space-3xs);
  right: var(--space-3xs);
  font-size: var(--scale-xs);
  font-family: var(--font-monospace);
  padding: var(--space-3xs) var(--space-2xs);
  border-radius: var(--border-radius);
  pointer-events: none;
  opacity: 0.95;
  z-index: var(--z-tooltip);
  color: var(--color-background);
  white-space: nowrap;
  font-weight: bold;
}

.standard-debug.reading .small::before {
  content: "Small";
  background: var(--color-blue);
}

.standard-debug.reading .accent::before {
  content: "Accent";
  background: var(--color-accent);
}

.standard-debug.reading .feature::before {
  content: "Feature";
  background: var(--color-purple);
}

.standard-debug.reading .full::before {
  content: "Full";
  background: var(--color-pink);
}

/* Default content zone indicator (elements without zone class) */
.standard-debug.reading > :not(.small):not(.accent):not(.feature):not(.full) {
  outline: 1px dotted color-mix(in srgb, var(--color-green) 30%, transparent);
  outline-offset: -1px;
}

/* Print debug styles */
@media print {
  .standard-debug::before,
  .standard-debug::after,
  .standard-debug .grid::after,
  .standard-debug.reading::after,
  body.standard-debug::before {
    display: none !important;
  }
}
/* Dark mode adjustments for debug */
@media (prefers-color-scheme: dark) {
  .standard-debug::before {
    opacity: 0.3;
  }
  .standard-debug.reading::after {
    opacity: 0.15;
  }
}
/* Add to standard.css */
:root {
  --baseline-trim-support: 0; /* Will be 1 when supported */
}

/* Detect support */
@supports (text-box-trim: both) {
  :root {
    --baseline-trim-support: 1;
  }
}
@supports (leading-trim: both) {
  :root {
    --baseline-trim-support: 1;
  }
}
/* Apply when supported */
.rhythm {
  /* Current fallback behavior */
}

@supports (text-box-trim: both) or (leading-trim: both) {
  .rhythm > * {
    text-box-trim: both;
    text-box-edge: cap alphabetic;
    /* Safari fallback */
    leading-trim: both;
    text-edge: cap alphabetic;
    /* Adjust margins since leading is now trimmed */
    margin-block-end: var(--space);
  }
  .rhythm > :is(h1, h2, h3, h4, h5, h6) {
    text-box-trim: both;
    text-box-edge: cap alphabetic;
    leading-trim: both;
    text-edge: cap alphabetic;
  }
}
