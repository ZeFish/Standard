!function(e){"use strict";class t{constructor(e={}){this.apiUrl=e.apiUrl||"/api/comments",this.pageId=e.pageId,this.container="string"==typeof e.container?document.querySelector(e.container):e.container||document.querySelector("#comments"),this.formSelector=e.form||"#comment-form",this.comments=[],this.loading=!1,this.pollInterval=e.pollInterval||null,this.pollTimer=null,this.onLoad=e.onLoad||null,this.onRender=e.onRender||null}async load(){if(!this.pageId)return console.error("GitHubComments: pageId is required"),[];this.loading=!0;try{const e=await fetch(`${this.apiUrl}?pageId=${encodeURIComponent(this.pageId)}`);if(!e.ok)throw new Error(`API error: ${e.status}`);const t=await e.json();if(this.comments=t.comments||[],this.loading=!1,"function"==typeof this.onLoad)try{this.onLoad(this.comments)}catch(e){}return this.comments}catch(e){return console.error("Error loading comments:",e),this.loading=!1,[]}}async submit(e){try{const t=await fetch(this.apiUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pageId:this.pageId,...e})});if(!t.ok){let e=`API error: ${t.status}`;try{e=(await t.json()).message||e}catch(n){e=`API endpoint not available (${t.status})`}throw new Error(e)}const n=await t.json();return n.comment&&(this.comments.push(n.comment),this.comments.sort((e,t)=>new Date(t.createdAt)-new Date(e.createdAt))),n}catch(e){throw console.error("Error submitting comment:",e),e}}formatTime(e){const t=new Date(e),n=new Date,o=Math.floor((n-t)/1e3);return o<60?"just now":o<3600?`${Math.floor(o/60)}m ago`:o<86400?`${Math.floor(o/3600)}h ago`:o<604800?`${Math.floor(o/86400)}d ago`:t.toLocaleDateString()}escapeHTML(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}formatContent(e){let t=this.escapeHTML(e);return t=t.replace(/\*\*(.+?)\*\*/g,"<strong>$1</strong>"),t=t.replace(/\*(.+?)\*/g,"<em>$1</em>"),t=t.replace(/_(.+?)_/g,"<em>$1</em>"),t=t.replace(/```(.*?)```/gs,"<pre><code>$1</code></pre>"),t=t.replace(/`(.+?)`/g,"<code>$1</code>"),t=t.replace(/\[(.+?)\]\((.+?)\)/g,'<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>'),t=t.replace(/\n/g,"<br>"),t}renderComment(e,t=0){const n=!1!==e.approved?"":' data-pending="true"',o=e.spam?' data-spam="true"':"";return`\n      <div class="comment" data-id="${this.escapeHTML(String(e.id))}" data-level="${t}"${n}${o}>\n        <div class="comment-header">\n          <span class="comment-author">${this.escapeHTML(e.author||"Anonymous")}</span>\n          <span class="comment-date">${this.formatTime(e.createdAt)}</span>\n          ${e.spam?'<span class="comment-flag">Flagged as spam</span>':""}\n          ${e.approved?"":'<span class="comment-pending">Awaiting moderation</span>'}\n        </div>\n        <div class="comment-content">\n          ${this.formatContent(e.content||"")}\n        </div>\n      </div>\n    `}buildCommentTree(){const e={},t=[];for(const t of this.comments)e[t.id]={...t,replies:[]};for(const n of this.comments)n.parentId&&e[n.parentId]?e[n.parentId].replies.push(e[n.id]):t.push(e[n.id]);return t}renderTree(e,t=0){return e.map(e=>{let n=this.renderComment(e,t);return e.replies&&e.replies.length>0&&(n+=`<div class="comment-replies">${this.renderTree(e.replies,t+1)}</div>`),n}).join("")}render(){if(!this.container)return void console.error("GitHubComments: container not found");if(0===this.comments.length)return void(this.container.innerHTML='<p class="comments-empty">No comments yet. Be the first to comment!</p>');const e=this.buildCommentTree();if(this.container.innerHTML=this.renderTree(e),this.attachReplyHandlers(),"function"==typeof this.onRender)try{this.onRender(this.container)}catch(e){}}attachReplyHandlers(){this.container&&this.container.querySelectorAll(".comment-reply").forEach(e=>{e.addEventListener("click",e=>{const t=e.target.dataset.parentId,n=document.querySelector(this.formSelector);if(n){const e=n.querySelector('[name="parentId"]');e&&(e.value=t),n.scrollIntoView({behavior:"smooth"})}})})}attachFormHandler(e=null){const t=document.querySelector(e||this.formSelector);if(t){if(t.removeAttribute("hx-boost"),t.setAttribute("hx-disable","true"),window.htmx){const n=t.cloneNode(!0);t.parentNode.replaceChild(n,t);return void document.querySelector(e||this.formSelector).addEventListener("submit",this._handleFormSubmit.bind(this))}t.addEventListener("submit",this._handleFormSubmit.bind(this))}else console.error("GitHubComments: form not found")}async _handleFormSubmit(e){e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation();const t=e.target,n=new FormData(t),o={author:n.get("author"),email:n.get("email"),content:n.get("content"),parentId:n.get("parentId")||null},r=t.querySelector("button[type=submit]"),a=r?r.textContent:"",i=t.querySelector("#form-status");try{r&&(r.disabled=!0,r.textContent="Submitting...",r.style.opacity="0.7"),i&&(i.style.display="block",i.textContent="Sending your comment...",i.style.color="var(--color-foreground, #000)");const e=await this.submit(o);i&&(i.textContent="Comment submitted successfully! It will appear after moderation.",i.style.color="var(--color-green, green)",setTimeout(()=>{i.style.display="none",i.textContent=""},6e3)),t.reset();const n=t.querySelector('[name="parentId"]');return n&&(n.value=""),this.render(),e}catch(e){throw i&&(i.textContent=`Error: ${e.message}`,i.style.color="var(--color-red, red)",i.style.display="block"),e}finally{r&&(r.disabled=!1,r.textContent=a,r.style.opacity="1")}}startPolling(){this.pollInterval&&(this.stopPolling(),this.pollTimer=setInterval(async()=>{const e=this.comments.length;await this.load(),this.comments.length>e&&this.render()},this.pollInterval))}stopPolling(){this.pollTimer&&(clearInterval(this.pollTimer),this.pollTimer=null)}}function n(e){if(!e||"string"!=typeof e)return"index";let t=e.trim();try{t=new URL(t,window.location.origin).pathname}catch(e){}return t=t.replace(/^\/+|\/+$/g,""),""===t?"index":(t=t.replace(/[\/]+/g,"_"),t=t.replace(/[^A-Za-z0-9_\-]/g,"_"),t)}let o=null,r={apiUrl:"/api/comments",containerSelector:"#comments",formSelector:"#comment-form",pollInterval:null,autoInit:!0,pageId:null,onLoad:null,onRender:null};const a={version:"@VERSION_PLACEHOLDER@",configure:(e={})=>(Object.assign(r,e||{}),r),getInstance:()=>o,createInstance(e={}){const a={apiUrl:r.apiUrl,container:e.container||r.containerSelector,form:e.formSelector||r.formSelector,pollInterval:null!=e.pollInterval?e.pollInterval:r.pollInterval,onLoad:e.onLoad||r.onLoad,onRender:e.onRender||r.onRender},s=e.pageId||r.pageId||i();return a.pageId=n(s||window.location.pathname),o=new t(a),o},async init(e={}){if("undefined"==typeof document)return null;if(o&&!e.recreate)return o;let t=e.container;if(!t){t=document.querySelector("[data-comments]")||document.querySelector(r.containerSelector)||r.containerSelector}const n=this.createInstance({...e,container:t});try{await n.load(),n.render()}catch(e){}try{n.attachFormHandler(e.formSelector||r.formSelector)}catch(e){}return n.pollInterval&&n.startPolling(),n},async load(){return o||await this.init(),o?o.load():[]},render(){if(o)return o.render();console.error("comments: not initialized (call comments.init())")},attachFormHandler(e){if(o)return o.attachFormHandler(e);console.error("comments: not initialized (call comments.init())")},submit:e=>o?o.submit(e):(console.error("comments: not initialized (call comments.init())"),Promise.reject(new Error("comments: not initialized"))),startPolling(){if(o)return o.startPolling();console.error("comments: not initialized (call comments.init())")},stopPolling(){if(o)return o.stopPolling()},getPageId(){if(o&&o.pageId)return o.pageId;return n(r.pageId||i()||("undefined"!=typeof window?window.location.pathname:"index"))}};function i(){if("undefined"==typeof document)return null;const e=document.querySelector("[data-page-id]")||document.body,t=e&&e.getAttribute&&e.getAttribute("data-page-id");if(t)return t;const n=document.querySelector('meta[name="page-id"]');if(n&&n.content)return n.content;const o=document.querySelector('meta[property="og:url"]');if(o&&o.content)try{return new URL(o.content).pathname}catch(e){return o.content}const r=document.querySelector('link[rel="canonical"]');if(r&&r.href)try{return new URL(r.href).pathname}catch(e){return r.href}return null}try{!function(){if(!r.autoInit)return;if(o)return;if("undefined"==typeof document)return;const e=()=>{try{a.init().catch(()=>{})}catch(e){}};"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e,{once:!0}):e()}()}catch(e){}"undefined"!=typeof module&&module.exports?module.exports=a:(e.comments=a,e.GitHubComments=t)}("undefined"!=typeof window?window:this);